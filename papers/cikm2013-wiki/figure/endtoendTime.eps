%!PS-Adobe-2.0 EPSF-2.0
%%Title: endtoendTime.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Sun Nov 11 21:40:47 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -83 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (endtoendTime.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (Luckyvega)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Nov 11 21:40:47 2012)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 250 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
1275 675 M
63 0 V
5286 0 R
-63 0 V
stroke
1125 675 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.001)]
] -83.3 MRshow
1.000 UL
LTb
1275 1083 M
31 0 V
5318 0 R
-31 0 V
1275 1321 M
31 0 V
5318 0 R
-31 0 V
1275 1491 M
31 0 V
5318 0 R
-31 0 V
1275 1622 M
31 0 V
5318 0 R
-31 0 V
1275 1729 M
31 0 V
5318 0 R
-31 0 V
-5318 91 R
31 0 V
5318 0 R
-31 0 V
-5318 78 R
31 0 V
5318 0 R
-31 0 V
-5318 70 R
31 0 V
5318 0 R
-31 0 V
-5318 62 R
63 0 V
5286 0 R
-63 0 V
stroke
1125 2030 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.01)]
] -83.3 MRshow
1.000 UL
LTb
1275 2437 M
31 0 V
5318 0 R
-31 0 V
1275 2676 M
31 0 V
5318 0 R
-31 0 V
1275 2845 M
31 0 V
5318 0 R
-31 0 V
1275 2977 M
31 0 V
5318 0 R
-31 0 V
1275 3084 M
31 0 V
5318 0 R
-31 0 V
-5318 90 R
31 0 V
5318 0 R
-31 0 V
-5318 79 R
31 0 V
5318 0 R
-31 0 V
-5318 69 R
31 0 V
5318 0 R
-31 0 V
-5318 62 R
63 0 V
5286 0 R
-63 0 V
stroke
1125 3384 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.1)]
] -83.3 MRshow
1.000 UL
LTb
1275 3792 M
31 0 V
5318 0 R
-31 0 V
1275 4031 M
31 0 V
5318 0 R
-31 0 V
1275 4200 M
31 0 V
5318 0 R
-31 0 V
1275 4331 M
31 0 V
5318 0 R
-31 0 V
1275 4438 M
31 0 V
5318 0 R
-31 0 V
-5318 91 R
31 0 V
5318 0 R
-31 0 V
-5318 79 R
31 0 V
5318 0 R
-31 0 V
-5318 69 R
31 0 V
5318 0 R
-31 0 V
-5318 62 R
63 0 V
5286 0 R
-63 0 V
stroke
1125 4739 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 1)]
] -83.3 MRshow
1.000 UL
LTb
1275 675 M
0 63 V
0 4001 R
0 -63 V
stroke
1275 425 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0)]
] -83.3 MCshow
1.000 UL
LTb
2166 675 M
0 63 V
0 4001 R
0 -63 V
stroke
2166 425 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 1000)]
] -83.3 MCshow
1.000 UL
LTb
3058 675 M
0 63 V
0 4001 R
0 -63 V
stroke
3058 425 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 2000)]
] -83.3 MCshow
1.000 UL
LTb
3949 675 M
0 63 V
0 4001 R
0 -63 V
stroke
3949 425 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 3000)]
] -83.3 MCshow
1.000 UL
LTb
4841 675 M
0 63 V
0 4001 R
0 -63 V
stroke
4841 425 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 4000)]
] -83.3 MCshow
1.000 UL
LTb
5732 675 M
0 63 V
0 4001 R
0 -63 V
stroke
5732 425 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 5000)]
] -83.3 MCshow
1.000 UL
LTb
6624 675 M
0 63 V
0 4001 R
0 -63 V
stroke
6624 425 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 6000)]
] -83.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
1275 4739 N
0 -4064 V
5349 0 V
0 4064 V
-5349 0 V
Z stroke
LCb setrgbcolor
250 2707 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 250.0 0.0 true true 0 (Execution Time \(Second, Log Scale\))]
] -83.3 MCshow
grestore
LTb
LCb setrgbcolor
LTb
LCb setrgbcolor
3949 175 M
[ [(Helvetica) 250.0 0.0 true true 0 (File Size \(Byte\))]
] -83.3 MCshow
LTb
LCb setrgbcolor
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
2.000 UP
1.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 250 scalefont setfont
1381 3101 Pls
1460 2795 Pls
1461 2908 Pls
1616 3108 Pls
1616 3172 Pls
1308 1453 Pls
1359 2723 Pls
1484 3410 Pls
1700 4163 Pls
1312 1214 Pls
1373 2614 Pls
1434 2487 Pls
1689 3815 Pls
1313 1934 Pls
1381 2563 Pls
1545 2977 Pls
1705 3094 Pls
1824 3704 Pls
2114 4066 Pls
2174 4473 Pls
2352 4553 Pls
2443 4706 Pls
2564 4736 Pls
1318 2099 Pls
1384 3319 Pls
1554 3675 Pls
1690 3957 Pls
1780 3976 Pls
1911 4193 Pls
2109 4508 Pls
2273 4519 Pls
1306 1798 Pls
1366 2268 Pls
1973 3885 Pls
2004 3844 Pls
2034 3857 Pls
2069 3867 Pls
2097 3869 Pls
2125 3872 Pls
2150 3883 Pls
2166 3882 Pls
2548 3959 Pls
2563 3965 Pls
1556 2799 Pls
2574 3949 Pls
2589 4023 Pls
2603 4148 Pls
2618 4234 Pls
2632 4350 Pls
2646 4388 Pls
2662 4370 Pls
2688 4394 Pls
2856 4508 Pls
3185 4595 Pls
1588 3395 Pls
3383 4632 Pls
1614 3255 Pls
1650 3475 Pls
1667 3512 Pls
1685 3504 Pls
1705 3539 Pls
1924 3854 Pls
1317 1491 Pls
1378 2137 Pls
1314 1368 Pls
1379 1880 Pls
3019 3632 Pls
3160 3688 Pls
3328 3817 Pls
3530 3917 Pls
3818 3939 Pls
4081 4030 Pls
4337 4070 Pls
4523 4081 Pls
4548 4079 Pls
4719 4158 Pls
1599 2795 Pls
4887 4152 Pls
5096 4214 Pls
5200 4252 Pls
5332 4259 Pls
5457 4281 Pls
5522 4298 Pls
1718 3005 Pls
1993 3191 Pls
2309 3338 Pls
2375 3377 Pls
2408 3368 Pls
2542 3431 Pls
2772 3535 Pls
1316 1491 Pls
1385 2359 Pls
3110 3783 Pls
3334 3848 Pls
3450 3864 Pls
3797 3958 Pls
3952 3988 Pls
3984 4012 Pls
4170 4020 Pls
4403 4108 Pls
4643 4111 Pls
4717 4133 Pls
1583 3005 Pls
4833 4148 Pls
4959 4165 Pls
1686 3086 Pls
1989 3383 Pls
2256 3510 Pls
2378 3558 Pls
2618 3649 Pls
2781 3697 Pls
2808 3723 Pls
1315 1678 Pls
1384 2125 Pls
2771 3563 Pls
2943 3614 Pls
3106 3654 Pls
3404 3759 Pls
3577 3819 Pls
3851 3878 Pls
4048 3934 Pls
4066 3959 Pls
4367 3990 Pls
4584 4025 Pls
1559 2646 Pls
4813 4059 Pls
5120 4100 Pls
5197 4108 Pls
5210 4103 Pls
5359 4127 Pls
5511 4149 Pls
5637 4170 Pls
5809 4202 Pls
1709 2891 Pls
1838 2977 Pls
2099 3172 Pls
2323 3365 Pls
2467 3424 Pls
2623 3488 Pls
2738 3530 Pls
1303 1152 Pls
1370 1776 Pls
3149 3800 Pls
3340 3886 Pls
3462 3900 Pls
3545 3959 Pls
3719 4017 Pls
3935 4045 Pls
4196 4096 Pls
4516 4138 Pls
4733 4204 Pls
4751 4214 Pls
1599 3041 Pls
4782 4199 Pls
4837 4221 Pls
4957 4245 Pls
5034 4258 Pls
5158 4290 Pls
5462 4298 Pls
5628 4308 Pls
5732 4332 Pls
6005 4376 Pls
1748 3074 Pls
6327 4437 Pls
6468 4458 Pls
1956 3187 Pls
2156 3306 Pls
2454 3413 Pls
2718 3516 Pls
2931 3738 Pls
3022 3807 Pls
1316 1321 Pls
1384 2161 Pls
2768 3879 Pls
2965 3909 Pls
3095 3983 Pls
3248 3987 Pls
3388 4058 Pls
3402 4038 Pls
3614 4103 Pls
3727 4122 Pls
3877 4191 Pls
4070 4289 Pls
1579 2845 Pls
4266 4314 Pls
1733 3043 Pls
1968 3526 Pls
2117 3590 Pls
2223 3717 Pls
2355 3917 Pls
2376 3863 Pls
2543 4300 Pls
1317 1270 Pls
1385 2445 Pls
3174 3856 Pls
3415 3904 Pls
3589 3930 Pls
3816 4005 Pls
3952 4014 Pls
4072 4038 Pls
4309 4079 Pls
4425 4135 Pls
4549 4158 Pls
4683 4177 Pls
1386 2580 Pls
4819 4178 Pls
5067 4216 Pls
5142 4217 Pls
5294 4242 Pls
1500 2671 Pls
1760 3231 Pls
2125 3465 Pls
2210 3536 Pls
2486 3645 Pls
2771 3718 Pls
2969 3812 Pls
1309 1083 Pls
1363 2430 Pls
1450 2775 Pls
1775 3779 Pls
1866 3851 Pls
2116 3861 Pls
1313 1270 Pls
1377 2030 Pls
3093 3871 Pls
3192 3837 Pls
3261 3879 Pls
1490 2306 Pls
1682 2888 Pls
1867 3084 Pls
2013 3225 Pls
2232 3369 Pls
2386 3458 Pls
2594 3652 Pls
2840 3729 Pls
1321 1453 Pls
1393 1898 Pls
3432 3976 Pls
3603 4035 Pls
3816 4070 Pls
3846 4070 Pls
4181 4121 Pls
4492 4164 Pls
4596 4169 Pls
1723 3356 Pls
1846 3403 Pls
1987 3493 Pls
2266 3605 Pls
2561 3744 Pls
2805 3822 Pls
2820 3833 Pls
3068 3922 Pls
1318 2845 Pls
1381 2994 Pls
2881 3932 Pls
3037 3945 Pls
3135 4009 Pls
3284 4049 Pls
3350 4096 Pls
3496 4126 Pls
3615 4165 Pls
3770 4191 Pls
3979 4227 Pls
4080 4235 Pls
1564 3187 Pls
4258 4340 Pls
4269 4376 Pls
4439 4429 Pls
4638 4455 Pls
4853 4461 Pls
4986 4469 Pls
5107 4479 Pls
5322 4519 Pls
5570 4537 Pls
5622 4528 Pls
1768 3389 Pls
1842 3478 Pls
2016 3560 Pls
2230 3729 Pls
2443 3791 Pls
2655 3844 Pls
2868 3910 Pls
1309 1368 Pls
1370 2953 Pls
2710 3859 Pls
2832 3919 Pls
2969 3946 Pls
3045 3981 Pls
3169 3996 Pls
3365 4047 Pls
3387 4045 Pls
3593 4061 Pls
3802 4145 Pls
3917 4213 Pls
1608 3527 Pls
4065 4341 Pls
4289 4462 Pls
4634 4330 Pls
4739 4351 Pls
1745 3570 Pls
1934 3649 Pls
2128 3708 Pls
2288 3759 Pls
2314 3786 Pls
2457 3808 Pls
2563 3833 Pls
1304 1321 Pls
1355 1651 Pls
3999 4055 Pls
4019 4048 Pls
4644 4196 Pls
1636 2898 Pls
1657 2783 Pls
2142 3276 Pls
2158 3278 Pls
2769 3574 Pls
2802 3619 Pls
3343 3864 Pls
3367 3883 Pls
1309 1860 Pls
1369 2695 Pls
1981 3562 Pls
1982 3545 Pls
2011 3574 Pls
2012 3559 Pls
2290 3668 Pls
2290 3678 Pls
2475 3726 Pls
2476 3734 Pls
2581 3773 Pls
2784 3838 Pls
1444 2830 Pls
3027 3925 Pls
3028 3945 Pls
3128 3958 Pls
3163 3990 Pls
3419 4019 Pls
3420 4022 Pls
3512 4039 Pls
3736 4076 Pls
3890 4110 Pls
3891 4113 Pls
1445 2830 Pls
4107 4134 Pls
4108 4127 Pls
4363 4214 Pls
4364 4194 Pls
4435 4217 Pls
4500 4234 Pls
4681 4274 Pls
4681 4252 Pls
4695 4255 Pls
4696 4260 Pls
1616 3260 Pls
4840 4293 Pls
4841 4289 Pls
4978 4305 Pls
4979 4305 Pls
5050 4330 Pls
1617 3287 Pls
1683 3253 Pls
1684 3253 Pls
1851 3480 Pls
1852 3492 Pls
% End plot #1
1.000 UL
LTb
1275 4739 N
0 -4064 V
5349 0 V
0 4064 V
-5349 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
