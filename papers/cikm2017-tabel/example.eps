%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 995.000000 303.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.4 (Build 16E195) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 986 300
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 986 300
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: PingFangSC-Regular
%!FontType1-1.0: AAAAAP+PingFangHK-Regular 001.003%%CreationDate: 5/24/17% Copyright 2017 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAP+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /cid44 putdup 2 /cid48 putdup 3 /cid66 putdup 4 /cid68 putdup 5 /cid81 putdup 6 /cid82 putdup 7 /cid85 putdup 8 /cid1278 putdup 9 /cid1352 putdup 10 /cid1474 putdup 11 /cid1701 putdup 12 /cid1750 putdup 13 /cid1793 putdup 14 /cid2229 putdup 15 /cid2399 putdup 16 /cid3096 putdup 17 /cid3130 putdup 18 /cid3211 putdup 19 /cid4541 putdup 20 /cid4550 putdup 21 /cid4782 putdup 22 /cid5466 putdup 23 /cid5606 putdup 24 /cid6532 putdup 25 /cid7209 putdup 26 /cid7240 putdup 27 /cid7707 putdup 28 /cid7771 putdup 29 /cid8004 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6CEA6D7E2247AB0CE5853FD3388F87DD0B60C90073F225B407D1E5F360701F4F7C66B611186B5A1CA0DE86C4940B2103E87E2BA6B0DB00F3AB9EE0F3087F53FF25A6CFC2D4DCE46E72B1F6B4224D3BB7D31681D7D36D316A006D710A9F1BE94D3E36EBAE17C44CC8A31388CE4DAF5B9CFE17CFDEEEAF223B7EA064DFCC69F6BFE16123AFE419D142A04B253456B6BF35BC5A219FE1143457292FA8CCCB92F7BED628AA72E24A2CAAD0905B86769EB028D2257A40153373AA98EC4680790C6A9BE04BE89A0ABDF10E46CF71C0DA5B57F60D3AD316378418978A4F9E07BA22FFBEFCF934141950B8100415ED08EC5648A53031C5BB019EA824BD71B53FC41BD3E3830D9BD8FBC481330ED0F9E8574C0F6FCBE449BEF8B3DFE4616B125D65EDBDE2597D92856601D9B5A79B913D6CF432F7B554B8410DF9EDA78A60342E180B31CCCFACD2E7BCA8D09405FB43191113472FF0CDF2A85B1E109D236AC9C937498952D873AB6834AFF123C87217276EEAD5F027F2A6AC37DEF0E40D65398BC296C656C5D51C41EC7F48977CA0AE1C6AF38F393E1F0DC1F5429372F67BE3D2EB0992CA8879B45499444976F34F301F293AFD2CC3CB96E79927735B600FAA4E3B9BBD27AA8D351C27899AB4024E11162415EAFF597ABF7EEAE9258F469650EE63A6BDF5CB93E5D6D00E2278BBDFD9D023EC6B32D025CF3A794306EF1403DB6CCF0851DF93BC6879AC6792E81242EA8212DA8064DDA62B17EC885026A0204B6BB0B57A5569AD7FB5D6D87BADA2EF94B5BD790DE45C4B96EE143A620DAF94E7C4B0240C9E9B7002ABCB22E87756BB96F3B1BC1742A4BAA69B57DB46E53C0FF204FB0DEE17DE1BEE227401A8D2F384A0596A78A0408E4423788D19403F19FF65651C2502D10775DCB3DE91E8B4D9BCF95A4F62DEB57722C6C8D5549B730374F5251C84356D4DDD2F159B0CDC2A3752AA07706A08A1D4784568FF01C99345EC5532A1C65C415E9412FAE34139DA1072DF25AEC8A71D6ED86FCD7FECCD4EF12073807C06E2B990C7DEC4849A9AFB29ADAEEA81A5F530A1DF211A3795A9356FFD4466956A117B718B7D3888CB849BAD566760DDA0929C25C6A27327A306F1B4FDA34F961ED0053B66B4DDA9EB4B27678C038ACC53E123FE0F670235294C42E94763D7E66ED10C9793AEEE3C0AF8EEDDBD1C6D6803BAF5498ADA3BD38E02B58C5D07E644DFA7F5C260FC9C15B676387161CB04F5373C7EF28B6780192F5C5A586BAF1766E5C11B3E76DC073E65611323E75133377A3EA2882BB95B9CB806A7C50F4DB7484E81BAAF61A3C5890666E08C0D6A5E24955660AE958C2CDB1620E25B5F940CE06E298FC1BF0A05D0C22D31A86FBAB3682AB9C5F6C92A428EE9CC8126BDB8A1FA5981C570FE014C675F20E4B4F9FE06914A8C272147D9BF3194AFE386CE6977E2CCE912CFCFA6C8CF5C9B3508FFE1B5BEE3F53613ACFF0D229EB9FD714DF992B2C6663615BEC28543149736D672B21D2C6C0A9CC0B3328CC86C370F7DA21146BC065604B66663F1B6C70B12A9993FCA1A6E91DF1F679E303E5621BF4F8C6C7932F41D2B0BBB1C78B8F3F3742E0DD71D8ACBAD596960D0AC32794D1E2B9BF2DED9FCA9797309A098FF5F23179ED075C2E502B0CDA21AC5DFF1AFB239B27D71FDBFD96FC903F63F3D3689390AE15459F1B266CEF8FA1E5C6668641E4C95525474576FDA8FB56D41C55AE561B0DC34C6C8F5AF6647AB5013194D32A6F8EC4FE92CE81CCA1FDE852719EF6B65E59105AD99CD6659C85F99F9CC8F71CE3FA0AFB3FFC3B3ADE157029E82FB2D73FDB5A5489F64FB7E79087DA797E2CFD5F076254AAD1CA28F7E2BB54D79B36FA4EE9D5E9C347D6D732D4B4D2AABBEA3AF5D60BD152ECD9C691BE1A24CF2D61A844AF22C32FFF2AE1A58FFE04ABA0F0731514373182F8EA2845C8DB6FAEAA98A0A78BADE4E86C0ACB8FBDA3F8F709F6EB78660E8D292487041C1FEF36CEE0F06EC026B02519CA12A86A79D5CF1D3C53EEBEBDAA3DC11E92B1D97A0E57971C8F5C7084FA642605C1E3C8A71EAD2FB108A0D283F67ECE06DD751CC82FBA55A555AA1E1BE680B136CA843E4730857E15E64BD088D040A50548554A978EB0794CCAEC5B593E5D90A4C31368EF834C01113226CF956B8420022E66E42456A722CFE28111300A152E28B713DED6065DA7343317100CC40890E92EF19AC8ABDA716EFF7CFCA0A1CADABF1ABAC3F890CC9F09EF70ACDF337B31B28683516D33F17E0F09C344BC829D06DC7C9C3FB1A18E0DBCDCFB8DD912A1BCE4E729459C4BA4C7B3C0F3CF922BB00EBA3548B68C7A99B33262F996BBC4FFAB1329627A268F587CA81CBEA3A36B0BACBA65B560BF6FE689733569F629EC7FFE04A1FD4761059902EED4077B5E885968B305D321FBD541F1E948AB5BD5871D48CADC26AE467B803EA4D2661F597CE1EB38C64526DD36EF542993D5F111974304F0F5829C9ACA74BCD83A37BF1B234029C75D0F61488AD7409F794F1B80D7B77388BCD3EBC4BD9EF55A83EA360C22F415390DC06A1ADD51CD152E36ECC35A7E1328F7170488EF657B759570D6ECFFAB8489E5977CD8A2B02DFE89BFF034BE64838A143ED4DCC844517FD0CEF487D92EDFCEDB4C06E51BE8B13B8F0CD6DC724E9FAD3DBCC7C971A7B0034B0815695AC4CB60D69470C40E88568668C405DD02D77A5C02695C2C265A2E4532C5096778FB85842E94DBE3F911F580F330092E21E916731D9B87C4CBD07A1AEFC981C4934FF6FFA4182128DEA530992823265553AE79FCB1BDA879A1A9771293F8E471EB8A1DE330D6C09FE113115D516B38689616AF7D2F57BB425E07D06D54739094FD0C301D1C44669D89528789162204FB0A86979FC3B323371AC2C1001735BC54B78E23B62E3229DAB6D39DE7ECDDB140E4C35296DFA4D19CDA08123CA64CD40CD11E55F94E4DDEBD98F1A77442825E121346AC1C9645208706A8C2C437E1F1B7A906C9A294B665393E8FB91CB7D8DCA8D4824711CAF670DD23EB1B7A27E05DFA868DEED086C54F2A2F8F7A0123F4B929CD446402B87287BCB8B65A4F9B47BE53B97B9E0F7116C82A2C82C7EA472544805640A9278FA64AF9A2754C25BF0D90AC010A5138534782337A50D55E8389D6333CCC0E235E491A1B3BACF3838615428E16B75215999DAE1B4C526CCB3A3E21ADECE2BEE31720D7AA74FA45131D328E4F0B0E1C8E92E95E26467CCF181A85B06B85B3BF31C3B47C68C38B3E88C70455B53A3D3967D7F405812B7B1FB2CC7675C44E29DEF0153C251FE6F1B97F1A39C61D5144F8969A333DF1FAF6225D15F9E7A5E12BC3485D30314530DA8DC1C5EEC5F9DBC3D01F34377DF77617CEF0DDC8F33377C1982F9CEDF2E051A3D4F7CB998A8AD90ADC966A75E7B1B380F57691753F23A7B3E960EFDFE93473B8E0EB4EE0B010068C4A44E603472E0C9C1E7AAA5FC34261FB801D1D6E50C76CF6CC583D1DD3AED12A009FF0B132F8A0A919606F3037240EBE691579B4A43A975C7872E5502539638E1EF91C8836D0B6B1FC0F264F198D186F718736B3754F0403AE3F4C20BB0897D35FA0C7E12F863993735399C0BEDDA6386AB07B66D39855E109E99023399EC033F0E00404CF4045080F87A9B6049CD3974A3D34AEFDE4797DB8F6613BF99F243065AC9CCD0AAA0ACAA98382422B4B6819E1D5BFC68D43F5B5F07C7E65E553061CF7BD98321A9E79128FD5B04BDA4B15A610C891762D503294EAAA453B4246029F2B3621341030BC99AD07BFD86949FBA75A3713332CB3CF4FAD56FC7B73A34216B5A4A8E54CBCDDF2CC861E24BFDD880B842E871759DE406C018F96E21373F9A4E2B902A7822FCF4F8883A133AF1470E3277AD2DBFC193440970068901307ADD2AA3ADE28279A3FC82084DACBE5EBB35AA9D21A69D0F6CB55DB7AD786A7B4CE3B3573720967269731D13D4F935FB820AE9B75F87D21FAFE481B7C88502F92C7DD43D8820901232143123D09A527012DFD146DA71A4ACF0759AA5C45A47A009EE83060B1D8DFFCC76E0A63C16D54FC1AF78EDF14412EC34825655CF2A61B3998A89907A2D5945E7BBEF665FFFEB9133015AD11CA4B83E2E5308C88787829F9DF51F329CAC39743B0FB51BE1EC07A2A9EF8C6DA15408D29EA6C49C259B39B3567CFB3A2147AC366A7AD6B25912DFAA2290258852FF916D75BD63EA7B1A086315F4FA5577C69D9FC9636009E92F8B34F68168E61071BF8A5B0B825DB9C0029EADB39F4590E5467217AA2A42646104AC478C672E46D0F59E5738B71A22D7868B3790D75C1F64993E2764376B352D5B1757821D5E55E4A2321D5E69F0DA59CEA1D083F9083D2B744767738AC5BAFE607074B8837073B3A24C1602CF9471F897E6D986BA910BAE371E10F48EE6AB149F0F92C117DDCDE905DAFF0A04652F3ADE083ECF0212DB20FC91DE439D61589B7A6F35B621BD4928654163E5651CFC4AD85627C753209082BF784E4A500FCEB6DE0D42487C3A2DAA68968FF41D317B1A2AF0DF488B9653B73F21144F8DC91E489218B2D36F9FEA18604287CFC81D957E118BF00B53163AD22FCCC255AAE29199835A3A348108BB3FF5F02CB96CA77B0A7303583F2814F3C3D6BD7FCED72963406AB794A67D0AC072CAB415ECE6AB102C68F00347064434B915A84544D14833DE91FC0BE1BFD4C8E8F2F9676F261F7C913A3D672B9356B5D256157289539E0F5E49584143A2960148D20C26EE08FD1CF0C7D84529E393A6917E6A2CF896C0BAC5929E3AE627187BE2D6AB10AA429CBF74BE614C05A26542A5E9146A3C374310D633C5419875966921868B07F31966052138E6C17339380C9E6DA273EB27D958A235A3935883DEF940E074364E2D9981F635EEB3EA92A7698F64F55E557B89E20C0FD14AC9F8406219A01C998E013F3FF8AD1711721298EAEDE031B5673F9614C77401F61FF6133924BD203D0B77851E9E8FAD29F2C45A598445B0F2F3D49FA1CEAC02E0780A9DBBD6DA909095E7AB80D8EE6C46BDAEC6790E07CCF841E21B8438F6E8615829BD02C564FD82E1A77783440896882C705565D2966696F2B7358B55C7B988B80F3D4D8C7BD3A7EFBF1BBE6A3B2DD2D44D0968C461ABEDDF3066D0C95B3ED63C1C1DC5DF95B90D45EA22628C8FBEDAEADA7496047C763E30318A51DAF7B96EC7FC2710D311AC36126AC862AD3351EE92C205D7C5AB14217537947D69FB81B1CE6F363320314C4C15E3D437075681FE954223A2AE8BE02A9865735892FE465B202BF9C979F46FCA4840A49987CA584490D270CD8158AEE58E2088C9972FF5076E4F08043CA5457A06EF54C86E6D66D9FE2C8DD74CD0BF40819D6156EF2736EB21FA6943D1692C20483C34B0C6C6EE3A781B62567A8FBA7BFEF1CE107CC48CB119DFACC59D0C5D6B27123519C19A3E1FAEA875BAFA071A41B8758CF2F4B35EB6CDC97E1CC04D26C03570949C5C75DE3BF7B27C32EE4B4622EF1B2366CC30A332DE066688B806AABD73A7F0918F1561D68A7C2F084CB5EB48491B525CB2E02825A405A38020CE7DDE806B38D7DD601A3A818802BA8F669CBBBCB79DF0E4756791AEEE9FEAA07AE9E3AF0CE7456792DFEEB75CE6BCF21DCA204314E78C097A241EF6BDA93261C06291737A31AAE5D7E9E46F56E256784AC78AB42D15C104E19DCF26541C3B21CB70A1E25E4E4B866BFE10D7BAA017DC7A12BB093873C7576212B17EE9D046FF964A0D0951D8A1E5952AE4BF3EFE2525DD2406365B5FAE66DB5ED9E57D26870A63BCB5C5F2D91AA07D811C4C8B3EBAF681159A713A4AFC39C922BA3D3A9A331AB2DE6EB6C1BDFA5FC9315CC84ED41F589D51C9C1B57379E42F767CE9294FB83A4B9D1357EF956A9C075901D52DB9A0A0A4C9F0A45AA89BA53540C12E027C875534D61592273570B088B8A3EC9A35175A1B999FA295850F040C33C909988AFF9E817FF96D57261EDAC64C876484E63266406CBC7B5CFC95FEC2C7EEB5B7AC07E884733501AEFA0A02374C2AADAA24486F1AA710E05E42346F0B0A05EED43594F6115CA1AA4C96EC5F83D9AADADAB5F6E49C831F35D845D5BB9F347A21D7DC7B46C7475677E3A3A06132522EC0D2D730441AB41E7DF0BD0CD950E899722E9AF5FA5E76EC876DA58CD880A130B7C14C840AB68BD7E1D7B3AD3A13FE81963D1C206A189AAD70B2DD49F63CF2E755E78CD3C94E4E4FBDCE8DCD844285D5C6326211CC2A5F1D224F198C0119CEC7D3867B9F0828BEF3C1A2064FE8FC0F7578376B3239A359D4DE10EE2AE8A2AD140954993DE788816808EAE2FEE7CEECC0EC2F1B069587D8BB3592477AA12D6FF0594C29E20AAB4D7DFE76940FF473AAEA344F135B7B77FBE6EB661145AA0320A9BFC1F3EEEB60A6554A2CEE1C017082AC2A8354DEAD995DA07C2D69EFE79282711947C2D8E1E0DE84C7636BFBF71EA4BDEE91674587853C7F0F905CD6E46ABDEE3673E8C9E4E205B70CACD76AF44B305E51750EDB5D9176CDA183CFF46E81ABB831EB878C3124877570E2E300133E7DFDA6140A4F40FAE79EFA4EA9EDCB920508C8306D081D7990371A33ED51106BED2B67ED4D1C76F1FF2C347E8046EFF33B3E04909376CDCA9D20DD758A2FC62A6B22147757D5178FE3C954CA32357B46FB6E4CB87A0EE0A836C29A317A23BA2D8D465DC12460C6FC10EC5215D4DCF6593FE61B45F6F9A6D4F7A07370731DC7A4E51889699454A44DFBBB2EEB741C9546E4DB11A548C9BDFE9651AA4A9F4CDE7E5ACC949C860F172D9905E66C8E4DFC3D7BBED1C6675850CA81952468ABC76380DA64F10D85889FC377B01E4C2F061579B7E411D9F7F94718ED267516FBB5233FFECD4A75FEF6066A828E95CFC13324B29916E46C3B1A6C1CD3256DA562FE4D63FFEC6E47258DA26A13261C4B1AD2A1A2216D4F478B5297D24AA4FBF2F09038FA9AC54F8DA9F2F9530F8F2F2DB9175EC62B8F4AE75E1204077F436569C14F6623870248E50DF9CC09F7CD3173CC9284C61742F0A6FDBCD50401727DED4A1016924BD4F7032493861A04ED6D79B784E468E9E224C65D0B5E76FEDE40BC5F5A1A0FCE7E8E80C3C81CE7C8ED87EFC3D65C65289EE4A9F804B7E623D0AFA511B1111BE45BB1A672B02D08626F2DB1C7B955845ACD1F9879D467B8839FD04C83986452AEBC421E7C792A46D6E0BED4F69918BDEECA4FD879DD104EDA7F9420F1B367A2183516F7A5144801862E2CB342CBD76701F9995D0A6C7E5C63B49D9C4ABA2D05411B1A184B2FC6B63F4C641D463CA028BE41160AB48B001D48A1EFA2C98FD49113423F5F4192697658C966FFC413D83B5D174DC918B0EAEC7DA42E2DD412C0DEE39C00D57258D4B7078A942C67B07AF96FFE8FC70320F448A2663197EE38150C087AF4315E6B33AE73D48990F37331BC54C41D0FCC00D3E7ED178D6CD7D255C6079E6FC010323A242C056AC1F0580329F65E33F19AC88A142155231BCE2579F17847B46EED7ADDC5D9C785C67BDABE026B2F25999294DC00CCF96517D7DA6FA68E659CA67CB2AF56ECCF58EA1D75BE63DD25516B0A34BEE8BB623B145AEB7F6357CFF5064951A67F149CD76966E9CE4B441724E2EEFA25134CC4E58D865EFF1DFD5053C4846E6023E7D3215E9108AA959B1383EBE391827FD03550FFDC55D76450788D49771A9E0F8D47ADAB2E6CD7B268E4BAF5E4CFC9533BF5F93989DCD6A8DAEA0D65DBAF4D9BCD785E09381F90572308D9C5D003A50C1CA96A57DDC78525FE1AABEFEA3CE8C3D600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /cid1278 putdup 34 /cid2229 putdup 35 /cid5466 putdup 36 /cid1352 putdup 37 /cid6532 putdup 38 /cid1793 putdup 39 /cid4550 putdup 40 /cid5606 putdup 41 /cid7209 putdup 42 /cid7240 putdup 43 /cid1474 putdup 44 /cid3130 putdup 45 /cid2399 putdup 46 /cid1701 putdup 47 /cid4541 putdup 48 /cid3096 putdup 49 /cid7707 putdup 50 /cid8004 putdup 51 /cid7771 putdup 52 /cid3211 putdup 53 /cid1750 putdup 54 /cid4782 putdup 55 /cid44 putdup 56 /cid85 putdup 57 /cid82 putdup 58 /cid81 putdup 59 /cid66 putdup 60 /cid48 putdup 61 /cid68 putreadonly def/$SubFontArray [/AAAAAP+PingFangHK-Regular findfont ] def/CharProcs 31 dictdup /cid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /cid44 {(\001) 0 $SP} putdup /cid48 {(\002) 0 $SP} putdup /cid66 {(\003) 0 $SP} putdup /cid68 {(\004) 0 $SP} putdup /cid81 {(\005) 0 $SP} putdup /cid82 {(\006) 0 $SP} putdup /cid85 {(\007) 0 $SP} putdup /cid1278 {(\010) 0 $SP} putdup /cid1352 {(\011) 0 $SP} putdup /cid1474 {(\012) 0 $SP} putdup /cid1701 {(\013) 0 $SP} putdup /cid1750 {(\014) 0 $SP} putdup /cid1793 {(\015) 0 $SP} putdup /cid2229 {(\016) 0 $SP} putdup /cid2399 {(\017) 0 $SP} putdup /cid3096 {(\020) 0 $SP} putdup /cid3130 {(\021) 0 $SP} putdup /cid3211 {(\022) 0 $SP} putdup /cid4541 {(\023) 0 $SP} putdup /cid4550 {(\024) 0 $SP} putdup /cid4782 {(\025) 0 $SP} putdup /cid5466 {(\026) 0 $SP} putdup /cid5606 {(\027) 0 $SP} putdup /cid6532 {(\030) 0 $SP} putdup /cid7209 {(\031) 0 $SP} putdup /cid7240 {(\032) 0 $SP} putdup /cid7707 {(\033) 0 $SP} putdup /cid7771 {(\034) 0 $SP} putdup /cid8004 {(\035) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/PingFangSC-Regular cguidfix
/F1.1/PingFangSC-Regular renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /W put
dup 34 /i put
dup 35 /k put
dup 36 /p put
dup 37 /e put
dup 38 /d put
dup 39 /a put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<



0C0000001C2BBF00130024001F001A0012000C0000001C2B00BF000E0030002500200017000C0000001C2BBF000F0034002B00200017000C0000001C2BBF0010002A0025001A0012000C0000001C2B00BA00140004001B2BB8000D20457D691844B8000A2B00BA00010002000C2B01BA00030002000C2B01BE00030028002000190012000B00122BBE00040024001D00170011000A00122B00BE00010033002A00210017000E00122BBE0002002A0022001B0013000C00122B00BA0005000400112BB8000020457D691844B800002B00
00>] def
/CharStrings 10 dict dup begin
/.notdef 0 def
/W 1 def
/a 2 def
/d 3 def
/e 4 def
/i 5 def
/k 6 def
/p 7 def
/uni2B90 8 def
/uni2B91 9 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1018 -481 1437 1141}def
/UniqueID 4258367 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B4F1C51BADFF3495C2924BE71970B75EDF2A199B50F98194813A33F0031D51718A2986D693660B31148EB7E847AF413293AC0BB72B526878421A7FC76052172227BCD5D22EE96DD8463A8FCD6A731AA5644FA92294E21F29A21A9454CCD9C6593047CFB0CB4D7A6E6BDBA700ADE31D2629A5075126DCD697A9839DE409F0A7CCBF604AFC4CD1A360D3F4DE8579145E4E13C33AF5639AC465E82636AB1A893BD0EA59E96CA4D8E87E5394308600DF2D18DFD024C87951FDDBC7E5D04D0B7AB3D65763056CBFAA23D4F361B84A499B385A82473C02C34A4F9FD72CF5A4651B67CB416A04902A6243BF739BE9611027881CA4C964DFBBC698C9653B50371D19FA9ECC6570D62920B254D9BCE5E0A1591120EE673180F1DFA0B80C57F9555291414DF1253FE7ABE617260323C91D187BEB3D9EC1AF68D3456D0A5540EE1384AC2280021711F7FEC1B6675BE363E9327257063A0531CE82A29A238B7E298FEEE2205FB89168E2412AB8CE8AB90596A2CB4A9036ABE85EAD6E7F674B8CD3EBC017DEF17F5D9C7DBCE665FC13A687D880A90019F301417B47784A6B9FFB27D20C2E69D1A23EE97461E6E53894F71B05F4E7303A799322ED48E0E32DEA9B00CB37ABA76ECE40B22B9F2803BCC4743F317EEC85462738552D4FFB562CAF4A7E33A936255D0D2CE8A4933E31775F2E9C64EE04C644B0F146AAF0B5D8D414334891DACD60B01B32E5BFD3F276D8500988651D07F86C997E0BE23C83BA00943A36FCB5758A56
C4C24F34609AFE721CC8039CB3B4D7BE08CD579E49112455E84039AB2AD2F5C8E9074E0ABEA8849F0981A9DA5178AF4CA9DF48189074D6837FB003F58403E5B1978830035A944288E7C4929573F04A579CE27F0EE374F00DB958F7141AE52B919C51BA448F6FADBBB13A1CB7D3066ED8AE6160DC43BDD206E6EFF60C43077B9E89A6099AA043DDB6D945BB1DCA02CC76517449E9DE30235FA9AEDA1EE149ED869B15FCD723E92220FF85918355C36760D5FCECC3AEE7DB98CFCA2B7DAAE068BCB5516352FB6BF96CEF1144FEA4BCD619A1A3D165284D7DC3C100267192F9DC8D2CE4346EB8AD44332D8D988FE60AD216727EA327F7CB0CD6D05CB7D18BA1AFBE620B312BF2C65DB305441ABFD4118EE6915DB3000F58951A555BC34E5A1EE5950A54483D40D52287C6721635E29E5FE0D4FD06CFF79E4FE8B0B2362DDD4C3C9D15540ADC2D333DA531B5A87226DF05389BCBCFB429EE606836479B00E902C21FF2EB13EA630E0F7B324ECE29D29522C81636B9F33348C09ED383D8C9589644F49EE01AEAF4E966BA12927CF3E41AB3D5DCD19671AAF903D1265023B5B7DE5FBA580CC6F559D7ED8A49711B96AE3502E209091628D50F249D085E51998D80BA4E226984FD97D9AB0E603458EB425BBF2ABC1AD9D46B59D83B77B74576A70A6EE9A66A239E701DAB71A5BF97E7F8A14943C4CB3D3579DF4A456134AADE1B2E6E4D6DF9BD85049223AC1E6CB9E13BBBDE51CF151EBE62243D4A89C21EEC472B51C6A1ED14FD7A8E2E200C3EC809484EB503383CFCAE8EDCE79FE168E96E92041C6BF0B9678ACBB3094A4C33E0C5131853724DE6BDDE12EA8C229B8728FE905D881B5D6E986F1F1DC5E4CCDC91E05C05F7F02A8653CBE46CC599832C31A07FA33233521879015666190A07EDA1672D960E01150DDC4C154FDB6A5FDEE92A942F1EEDB0ECD279D00F557B69D70F15BF04E4A602E1F17A6C252907782F8B78E84D30B96378C251920510A8E4A9FD0BD49441DD254207496463AEBF9B5AF7B3ECADE0BF1E751D054DC4868E188778EDE3A8CAA5B3073F852220E698023009DC1D8E1934E56B16D0D8D115E037DA5CFE123661652E9DB1EC5DAB11025B2D2FC82AECB303902FB4B44757E2AD022AAA3275F5F24D4E26E3C2FCBD286C4E3BB98349F79B6A2FD2308C2197ECDF0E21F02EF40297453FAAA1829B457EBA20EA2CD865F730CB421F60520204CDC27DD5F95A0E873EA89E3CA3DF8A1AC3411AACE02B366EBA975AC920A494CDF7C4DC67C946EC9728DC1428F917D68F33E49D20543D27D2F70165A8B36D10678EC8E2C18A2BF5493D3ECD354296A3DC7D6A7D292895F0E548AE3523694798BADC6945C09A9BE98EA353F076C1E6681E71D8A95B6A5F9873AEFC50D80F58275F7BBBF00463225BB4AD00F099E8BB5B94CCADD399B4774BD3C1BB
2A90EB394C21FC4911066CFA93DCB55D0E86D379012279FF3EEFF5CDD733F3CC685B3839648DD5C03102716BECE2A18F3C30BD517E9B3A722922656D1EB6689CF432D502F8A6912ED5513EB358B8D3DC3A3EC6024731676EEC39BD520FF190
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F2.1/HelveticaNeue-Bold renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /I put
dup 34 /r put
dup 35 /o put
dup 36 /n put
dup 37 /underscore put
dup 38 /M put
dup 39 /a put
dup 40 /space put
dup 41 /parenleft put
dup 42 /two put
dup 43 /zero put
dup 44 /eight put
dup 45 /fi put
dup 46 /l put
dup 47 /m put
dup 48 /parenright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<

206A61645258238A592FFD2DB800192C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8001A2C2020456944B001602020457D691844B001602DB8001B2CB8001A2A2DB8001C2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8001D2C4B535845441B2121592D00020033000101CC02C8000300070065B800142BB800082FB800002FB8000810B80006D0B800062FB900020003F4B8000010B900040003F4B80009DC00B800014558B800042F1BB90004000A3E59B800014558B800052F1BB9000500043E59B8000410B900000002F4B8000510B900020002F4303101211121131121110199FECD013333FE67029AFD950299FD3902C70001002FFF3B010D02DB000F005DBA0004000B00032BB8000410411B0006000400160004002600040036000400460004005600040066000400760004008600040096000400A6000400B6000400C60004000D5D410500D5000400E5000400025D00B800072FB800002F303117332E0135343637230E0115141E02CC41473D3C48414E4F16293AC573E27E7BE07267F0764278726F0001FFF7FF3B00D402DB000F0061BA0004000D00032BB8000410410500DA000D00EA000D00025D411B0009000D0019000D0029000D0039000D0049000D0059000D0069000D0079000D0089000D0099000D00A9000D00B9000D00C9000D000D5DB80011DC00B800092FB800002F303107333E0135342E0227231E0115140609404E4F16293A2440463D3CC567EF764278736F3873E37E7AE10002002AFFF5020202C50017003300CBB800342FB800352FB8003410B80018D0B800182FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8003510B80026DCB8000EDC410500DA000E00EA000E00025D411B0009000E0019000E0029000E0039000E0049000E0059000E0069000E0079000E0089000E0099000E00A9000E00B9000E00C9000E000D5D00BA0013001F00032BB8001310BA002D000700032BB8002D10303113343E0433321E0415140E0223222E0227141E0433323E0435342E0423220E0484010911213224243221110901051B3C36363C1B055A04101E344F37384E341E100404101E344F37374F341E1004015D1A3F3F3C2D1C1C2D3C3F3F1A2863573C3C57632727545047361F1F36475054272754504836202036485054000000010018000001EE02C5002B0091B800



01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 18 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/zero 4 def
/two 5 def
/eight 6 def
/I 7 def
/M 8 def
/underscore 9 def
/a 10 def
/l 11 def
/m 12 def
/n 13 def
/o 14 def
/r 15 def
/fi 16 def
/uni2B91 17 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91BC64A62485D7C863002D39D4194FF17CC8AA420E752C449BD1094F4BB8C06574757F39367BFF08D6528710F607E872A15AE740157C43EA8355EC809B842B0E990C72A2354701935B262A094161EA2B5CA73E941FE1313AA281508C7C6C32FACCCAA6F30FCCC6CD4E9E5553B2E92ADB5AC3E117CE40D0DA8BFFA89ACE3C18B7EBABFE9C708C3A648FB8AB67F68563178084710B613C2FDD7458523FD30873CF3BE8D2ABFE51EB293F0D5CB8E1DDF0AEAB449AE8CE4B1AD54F46C2FEAC03DFEF4607897EB775C6DB5F63CCCFB93CD78B1CC2E6B815F19BD9878F674B441EE0D107430380EA3BCCCEBD98D767DB08FA4995C7A627764677418F7A029A2BCB03C3BCE6C19270F99E159DA71DA0DDAAC69C633BF326531A0436544071D28FE9A24086F810B8A20004A7D8FDDDCA139711C39E314A4653221CAAE741E5E47A7C53BA67414B36217619BDEE76D2A30F9CB60B7B3A6ADACEBA44CE286118CBBF484C8B75A91D91E7657B149F7FF9E2BB79FF68E86F5965C8A1B1E52DCA2CED34F77CD51E76B6619859D55B0072F9FA1FFFD752BE0FAEBA4716DD4528946F99A0FCE306B4273F9F16F1DAB5809A02200889783884F83907AB63B9E1D03A2D7B37D27023907FCC083E5F3B28510A5A21E450865120BDA144465A8A2F72A66D8E25EB95C92086D6518443FF34CF12D34395A455CDDCB8C23CB5D61014D1C1B65D4C43B6AB5B220ED739AFC3195249393F17551AB6242AADFB685CAFF657F64135121D99EB93
DF6215BDED56E2FDDE9D1CC4463B893A4D583EA978A9978111E8B7F55EDFFC394F56B95D54FC4D6379B427433C0E0FA0AD5D664F5CCB652C85A69D9C484E0F4AED25D68E7BD932543AD4C935FAE026F320E94F8BBC2FFC4E2A95C1E4FB7F512AA6E20BD917CCB5DF347AF942A4B4965FD59D4064FA34AFA9ADBFA6625BE915F228C24AD9419FF69951C8135F6B39CD218CE0D61A48F770DF1DDCC17CCFAB10ABA953C78BBF511AB62925395BF17BCA15523A0BD6EE4492416569163D12B7FA31FAF8CDB98DFA1E56B6153AE2881B5126CED0CB4494DAEF96B7DBB4477BE34947527F66DBBBAA70F1500F80F992688AD784283CE5E294F94ADC62389EF81A147C419B6776D2C0C3F12C3CECBC128E11012DAFF659FD7475C915BDB2B466035C49F5DAF3490FD619EA93872E19B2A10A4130426315BABA30577332D99BD59C0F11FE7F8389950BD8DF0372A830B5155814B4F2166CC2A3E59E49F04D3DF9359D608793C452EDF41364358C34C99E3BB9D24AFB11E35302227CC7D236F9570F1FB4F8B2D264B498181173B4C8D7C2C3A4D82D7E99AC96304EDDFECF99BCC4755434799D8D8F3FE4CEE4478387E0D5D0431A3C8C72ADB77E5FC2E10DA6C342849D43C50E7D1E9F688150A5C395CF41F5E4AFDA859308FB936913B79B76E293299DE8A3BFD665E94F7AACEED0F1E28CBAA993B6CEAF64C50935B33D16D859F2E9EE6124E5C4A3C06AD11C3D1F4C63522365315DB5D014FE42433633E79FCDAE6D95DB2DA33FBEB48CD24181833F9B4E91F9259620FE0A3961FFEA4E538B09A2BEADEEDCB5EB128FC3EB24B555935001A4AD097A93BF7B05A6A288F2816C44A2668E0E77C6262DA74F9E0C4D04B5AFD16E52637ED505061279EAD4E7D3193E0ED79A62CED0F674EDF7CB73EB0BAC52D632CC565FDCC3BC5884DF11CF2DC105E99B89E53C0C584B2CCB0CF7A470D928ED478AFF67B4F617ACBCFCC47F71FCF19F33BB690918BEC92BFF6B75D22DFD8E680FF9D778D0FA8078BEFF0D39AD63EB2C8161DFDA3480F66B38CD5611BC923CC37E977C1142DEEE1430ED79A59DD780538590E70E2893D242A1508347A6A6A946CC8A9A5AC77890D698EBCA7884DF35E058EF4B6F64A2164BB619FBF0BFB1488921AEFE311C9054FAAF7AB763CE9D8B6E2813DFF60CE15633E6449FEC2D473F21CC913787FFBCB247E043F159FFCF287477D23DC0A6472755E551BC4191B5C901F6F42C650FFFA83F014B32685990B60FDA91046797B836E417F37914F5BB989D95E06017E22D011AADE7DAC11B250D8EFA2E9F922A49FDD53B862916D505A56EC77E4B8DA98C9D66B43083109F0F1C62C50AA168A99CADDF63A8EA6594BC4A87E3F11E18FA84C2E217BA6D669C5D444F27ECCA85F1F71A231865B83E41656D8589E8A6760A8B50700C5795932E52BC9763D112
95310D14E948836F335CD6DF7BC712FDB489F43C42747267E3DECB08BA54E6EA6D5632C413220D9851B4FEAE5F7ECE843ACA0C5230850AC63325A03933A1001A7B868B8BC18DFDCF6830DF308AAA214327AB21D3B81A5C4ABD857B7F70F1040C9FC5D12B3D606B3D5C742440FF9022EFBA3DE118CADDC9860732120F1BFD2031C68A8081974F0974BB7528A34B4E548CAD53F41D00F0CA5DB797C8E637A3F75BB8316679130A9B8F593EDC3DA8FC523350CD44D63120F01482C2AFED100A75D8513CF388BFC2F0851E394AE93CA1CC468F83540D08F6F466B4F1EA90C4326459D6A5D9373C31C00982AE488BCEEA499897E9FBC036522D38DF8E7B837E67308D4C6E82549A1862D61817EA61C39B7FF7F9AB3F8787A99B28115E3B59488D7B0A59D2108149263A91FC76FBA1B9F231FA4465C5292D2E31AAF2267CA9A8911434A40E38843E6AE5CEAD64F537F4AC21079670303C81C4F66ED807D3B575686EDB656E2B1AFFE2126FFEA4809BAC89D6D773536D5EA42AB9B974C80463222958790C911E29598E79D7CFF65F476CE35DF4EBCFC69343FFC9560333F63F0A3DFC22243E03416C4B089E92E14621A7BC8C41F0C82733A2CDE04F3799A604EE5AC3C6EC784C293DAC74F99FAE1CA930C5AD5535148461D34FBA8F29F4CA8D10C12E5B54C2AA60F71F094220A3C316A444E2276916DA8B650E42B3EDBE39A8C4BF7E174DADA60073F8D09E06B9DB942A29C59C3667306C8926B5CD10012DA214A19BA0D68FB793E65FEEAD921311A0821143164A6D4B23FD33ED9ED119CF459136128E98987887CE6FB77EF309A21D20CC9B663C19BF78D2468AAC7C32A3BE629D96BC52F7931C23B7820FA2BAB71E1B345E6821B0F2652E19065639F284D860CC845F86218347B683FC7FC9EE790ACD41C806B3C377A1D16BB0E738FF2D1C86F3B58D6ADDF23964306DACA20117BD508339D21EE5400D4BF9A7002E56E3122881AB78AA41B974DF167C6D324394E767A976A6A057F7C8CC6C93EAD6D08F5C4CC57B951D5145A57FAD260F4F9A4EFB886415817C564D2B021FEA355555A49AE7C007ACD083C592088D4CFC5E010BF0FC19DD07F0BC72E9FF3F4AA471D2607A6432FA5645A0C883D407716D73DDED3B3B5018B6C95FA08F9C92A680D5CE95D3276FD00674F86A79E79B806DC5C90978A3225FC980E4A4DA1F65643BB760A88746B1D30B005EBB5AA401902A93E5E74DE7DB9638550550B3AA054798666F26B700658122B75D3FAE9B28E99DADAB890CCFAAD56F99685BA8B5557E5B1032117B86ED937CC7C5CAA06180C2F5DF10D1730900EEC9CAFF458EAEB57203AE5A20F834CA08403EC94821852ADDBAB4257B055F96036B23ACA47319FD8DC7466173CFDA019CFE0E968A23980CF1A244816CDE7A762120195FC157249913E82FD02FF7C1231CB6
B6CD9ED644853B2422C68938178A01EC70636C447A32C3D9969EB50C988C772C95E9F52BDD396B5F553F2B1D259E38FE423A1B5BDC65005EBE1CE1D3987513533F80ED1E620BF263A7D640B0D0280777B8D2E27A60A941CB8A7765EB6871DDA0C53D3ED298F35171D2989EAD6181FF821931D00C7041614B849C90686D345866EB64692DC92B1AADB071A30DEC147A3ABFDFCF61511A45C1AC8B5DBE3F313C7609BDBA38E53175589DD7E68C7E52A24F27A2E7E8D4BD118CCE86DE73D1D0E3043D05FCF920990F82DE659304823D7F3E4A90652D21BD9DDA662236B76BA2B811F3A2C03F3EB34C6041C608BB70796CF5DCDCED8FA8B252AE00F0AEA2E51F08120B2A1294ED7B4458D0B5AA99CC12315CEEF727D55FFF153F7F5C1E1D04DF55E7E947CCEED862824C669BA38B75FF524572F585B141B936
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F3.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs4 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 985.04999 299.97 rc
0 299.97 m
985.04999 299.97 l
985.04999 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1772.1 5099.2427 m
3530.5876 5099.2427 l
3530.5876 -1111.77 l
-1772.1 -1111.77 l
h
-1772.1 5099.2427 m
f
1 0.75 0.75 sc
0.99000001 298.98001 m
142.56 298.98001 l
142.56 242.55 l
0.99000001 242.55 l
h
0.99000001 298.98001 m
f
2 J
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
0 3725 m
143 3725 l
143 3782 l
0 3782 l
h
0 3725 m
S
/Cs1 SC
0 sc
0 i
0.99000001 0 0 -0.99000001 71.775002 270.76501 cm
/F1.1[ 30 0 0 -30 0 0]sf
-30 11 m
(!")[ 30.000000 0.000000 ] xS
/Cs2 SC
1 0.75 0.75 sc
CM
142.56 298.98001 m
284.13 298.98001 l
284.13 242.55 l
142.56 242.55 l
h
142.56 298.98001 m
f
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
143 3725 m
286 3725 l
286 3782 l
143 3782 l
h
143 3725 m
S
/Cs1 SC
0 sc
0 i
0.99000001 0 0 -0.99000001 213.345 270.76501 cm
-30 11 m
(#$)[ 30.000000 0.000000 ] xS
/Cs2 SC
1 0.75 0.75 sc
CM
284.13 298.98001 m
453.91501 298.98001 l
453.91501 242.55 l
284.13 242.55 l
h
284.13 298.98001 m
f
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
286 3725 m
457.5 3725 l
457.5 3782 l
286 3782 l
h
286 3725 m
S
/Cs1 SC
0 sc
0 i
0.99000001 0 0 -0.99000001 369.02249 270.76501 cm
-45 11 m
(%&')[ 30.000000 30.000000 0.000000 ] xS
/Cs2 SC
1 0.75 0.75 sc
CM
0.99000001 242.55 m
142.56 242.55 l
142.56 186.12 l
0.99000001 186.12 l
h
0.99000001 242.55 m
f
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
0 3782 m
143 3782 l
143 3839 l
0 3839 l
h
0 3782 m
S
/Cs1 SC
0 sc
0 i
0.99000001 0 0 -0.99000001 71.775002 214.33501 cm
-30 11 m
(\(")[ 30.000000 0.000000 ] xS
/Cs2 SC
1 0.75 0.75 sc
CM
142.56 242.55 m
284.13 242.55 l
284.13 186.12 l
142.56 186.12 l
h
142.56 242.55 m
f
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
143 3782 m
286 3782 l
286 3839 l
143 3839 l
h
143 3782 m
S
2.0202019 w
0 J
0 i
/Cs1 SC
0 sc
0.99000001 0 0 -0.99000001 213.345 214.33501 cm
-45 16.161615 m
44 16.161615 l
S
-45 11 m
(\)*+)[ 30.000000 30.000000 0.000000 ] xS
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
284.13 242.55 m
453.91501 242.55 l
453.91501 186.12 l
284.13 186.12 l
h
284.13 242.55 m
f
1 w
2 J
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
286 3782 m
457.5 3782 l
457.5 3839 l
286 3839 l
h
286 3782 m
S
0 i
1 0.75 0.75 sc
CM
0.99000001 186.12 m
142.56 186.12 l
142.56 129.69 l
0.99000001 129.69 l
h
0.99000001 186.12 m
f
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
0 3839 m
143 3839 l
143 3896 l
0 3896 l
h
0 3839 m
S
/Cs3 SC
0 sc
0 i
0.99000001 0 0 -0.99000001 71.775002 157.905 cm
-45 11 m
(,-.)[ 30.000000 30.000000 0.000000 ] xS
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
142.56 186.12 m
284.13 186.12 l
284.13 129.69 l
142.56 129.69 l
h
142.56 186.12 m
f
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
143 3839 m
286 3839 l
286 3896 l
143 3896 l
h
143 3839 m
S
0 i
1 0.75 0.75 sc
CM
284.13 186.12 m
453.91501 186.12 l
453.91501 129.69 l
284.13 129.69 l
h
284.13 186.12 m
f
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
286 3839 m
457.5 3839 l
457.5 3896 l
286 3896 l
h
286 3839 m
S
/Cs3 SC
0 sc
0 i
0.99000001 0 0 -0.99000001 369.02249 157.905 cm
-45 11 m
(/0')[ 30.000000 30.000000 0.000000 ] xS
/Cs2 SC
1 0.75 0.75 sc
CM
0.99000001 129.69 m
142.56 129.69 l
142.56 73.260002 l
0.99000001 73.260002 l
h
0.99000001 129.69 m
f
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
0 3896 m
143 3896 l
143 3953 l
0 3953 l
h
0 3896 m
S
/Cs1 SC
0 sc
0 i
0.99000001 0 0 -0.99000001 71.775002 101.475 cm
-30 11 m
(\(")[ 30.000000 0.000000 ] xS
/Cs2 SC
1 0.75 0.75 sc
CM
142.56 129.69 m
284.13 129.69 l
284.13 73.260002 l
142.56 73.260002 l
h
142.56 129.69 m
f
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
143 3896 m
286 3896 l
286 3953 l
143 3953 l
h
143 3896 m
S
/Cs1 SC
0 sc
0 i
0.99000001 0 0 -0.99000001 213.345 101.475 cm
-60 11 m
(1234)[ 30.000000 30.000000 30.000000 0.000000 ] xS
/Cs2 SC
1 0.75 0.75 sc
CM
284.13 129.69 m
453.91501 129.69 l
453.91501 73.260002 l
284.13 73.260002 l
h
284.13 129.69 m
f
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
286 3896 m
457.5 3896 l
457.5 3953 l
286 3953 l
h
286 3896 m
S
/Cs1 SC
0 sc
0 i
0.99000001 0 0 -0.99000001 369.02249 101.475 cm
-45 11 m
(56')[ 30.000000 30.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
926.09222 250.27016 m
1003.803 193.24388 1003.803 100.78612 926.09222 43.759846 c
848.38184 -13.266713 722.38855 -13.266713 644.67816 43.759846 c
566.96741 100.78612 566.96741 193.24388 644.67816 250.27016 c
722.38855 307.29672 848.38184 307.29672 926.09222 250.27016 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
934.44672 3774.2019 m
1012.9424 3831.8042 1012.9424 3925.1958 934.44672 3982.7981 c
855.95135 4040.4006 728.68542 4040.4006 650.19006 3982.7981 c
571.69434 3925.1958 571.69434 3831.8042 650.19006 3774.2019 c
728.68542 3716.5994 855.95135 3716.5994 934.44672 3774.2019 c
S
/Cs1 SC
0 sc
0 i
0.99000001 0 0 -0.99000001 785.38519 236.11501 cm
/F2.1[ 30 0 0 -30 0 0]sf
-69.93 10.564896 m
(!"#"$%&"')[ 28.320000 7.740000 17.220000 7.740000 18.330000 17.220000 18.330000 7.740000 0.000000 ] xS
/Cs4 SC
0.69043177 0.6904543 0.96474361 sc
CM
923.05273 180.0762 m
950.69611 166.73785 950.69611 145.11214 923.05273 131.77379 c
895.40948 118.43538 850.59094 118.43538 822.94769 131.77379 c
795.30432 145.11214 795.30432 166.73785 822.94769 180.0762 c
850.59094 193.41463 895.40948 193.41463 923.05273 180.0762 c
f
0.60000002 i
/Cs2 SC
0 0 0 sc
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
931.37646 3845.1047 m
959.29907 3858.5779 959.29907 3880.4221 931.37646 3893.8953 c
903.45398 3907.3684 858.1828 3907.3684 830.26031 3893.8953 c
802.33771 3880.4221 802.33771 3858.5779 830.26031 3845.1047 c
858.1828 3831.6316 903.45398 3831.6316 931.37646 3845.1047 c
S
/Cs1 SC
0 sc
0 i
0.99000001 0 0 -0.99000001 873.00018 155.925 cm
/F3.1[ 20 0 0 -20 0 0]sf
-46.68 -4.5599976 m
(!"#$%&'$%\()[ 5.180000 6.300000 11.480000 11.120000 10.000000 17.420000 10.740000 11.120000 10.000000 0.000000 ] xS
-48.349998 19 m
(\)*++,%-./0)[ 5.180000 11.120000 11.120000 11.120000 11.120000 10.000000 10.360000 4.440000 17.060000 0.000000 ] xS
/Cs4 SC
0.69043177 0.6904543 0.96474361 sc
CM
783.10242 114.73621 m
807.26617 101.39786 807.26617 79.772141 783.10242 66.433792 c
758.93872 53.095379 719.76172 53.095379 695.59802 66.433792 c
671.4342 79.772141 671.4342 101.39786 695.59802 114.73621 c
719.76172 128.07462 758.93872 128.07462 783.10242 114.73621 c
f
0.60000002 i
/Cs2 SC
0 0 0 sc
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
790.01251 3911.1047 m
814.42041 3924.5779 814.42041 3946.4221 790.01251 3959.8953 c
765.60474 3973.3684 726.03198 3973.3684 701.62427 3959.8953 c
677.21637 3946.4221 677.21637 3924.5779 701.62427 3911.1047 c
726.03198 3897.6316 765.60474 3897.6316 790.01251 3911.1047 c
S
/Cs1 SC
0 sc
0 i
0.99000001 0 0 -0.99000001 739.35022 90.584999 cm
/F1.1[ 20 0 0 -20 0 0]sf
-42.470001 7 m
(789:;<=:)[ 4.740000 7.300000 11.720000 11.180000 10.000000 17.640000 11.180000 0.000000 ] xS
4 w
0.60000002 i
/Cs2 SC
0.97553027 0.33357233 0.21612141 sc
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
218.24904 3827.3154 m
791.06738 3863.7856 l
S
0 i
CM
796.79309 160.77698 m
784.44867 166.32455 l
783.84479 156.83975 l
h
796.79309 160.77698 m
f
0 J
0 j
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
803.84155 3864.5991 m
791.37238 3858.9954 l
790.76239 3868.5759 l
h
803.84155 3864.5991 m
S
1 J
1 j
0.60000002 i
0.29041481 0.74392813 0.31420156 sc
220 3828 m
668.67786 3919.7292 l
S
0 i
CM
675.3963 103.65994 m
663.93292 110.85384 l
662.0293 101.54245 l
h
675.3963 103.65994 m
f
0 J
0 j
0.99000001 0 0 -0.99000001 0.99000001 3986.73 cm
681.21844 3922.293 m
669.63928 3915.0264 l
667.71643 3924.4319 l
h
681.21844 3922.293 m
S
ep
end
%%Trailer
%%EOF
