%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 425.000000 151.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G1314) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 421 150
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 421 150
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /A put
dup 34 /two put
dup 35 /W put
dup 36 /h put
dup 37 /a put
dup 38 /t put
dup 39 /space put
dup 40 /i put
dup 41 /s put
dup 42 /e put
dup 43 /c put
dup 44 /o put
dup 45 /n put
dup 46 /d put
dup 47 /l put
dup 48 /g put
dup 49 /r put
dup 50 /v put
dup 51 /U put
dup 52 /S put
dup 53 /question put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 23 dict dup begin
/.notdef 0 def
/space 1 def
/two 2 def
/question 3 def
/A 4 def
/S 5 def
/U 6 def
/W 7 def
/a 8 def
/c 9 def
/d 10 def
/e 11 def
/g 12 def
/h 13 def
/i 14 def
/l 15 def
/n 16 def
/o 17 def
/r 18 def
/s 19 def
/t 20 def
/v 21 def
/uni2B91 22 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92615E2133941906A02CAE799EFE07355B68024211C14942A28E4AFD6CA90DB6CC37EBFFD27C5109C5DB1728FDDE5D5B0EAF50C7752C47B454F8DE7AA420C3207CB8FDB7DF2DA1D08ED655F709C0A11FFC0ECAB94F4D0857F0BF136CB03191048C6BD3F631695BE12C098974C21B831A142AFDF9E5F34CAFB24D5E965447E93C5448C17916007AF971F78F77827D7CCF87745D5F91F9769CEDF98D5710B4CF26FE1187948878959A05E385D7B5E29F805B6F9ECF8EF0E424282FBDD58216EFB3BEBD637B4DA6155EC032EE9B0FA97485712A73DB1F5F6AFDAEDED75A03DA13175B65595EDADF1644A3559EAFFFA6C57CF44C14D17BC664D767E64CFB595DA93363AD47458842C22FD02E8D5C7F2AE206AC660AE09A720009BD7B0C8CFF5E50319CE750BE11179AFA1532B23612B06DC588733D43435654987AB8EAECC026DAB4C9814C75FB12357CE4A3D27E46248BEDA669DC02B4A7CF27E6C69C30DB2FAA198F6981B95B49ECB8984E6F16D72DB79CC58354563515FD96C756601F6D8F43CF345C7215C77BDDCD551EF750D4784F7624E6E14DFDEC77D946CB913AA609D6AC74F4C089D2A1F2F3311C62CBA4030E2CCFC1CA8463F049746E0C307DF408E09BA07E06D9D5F00376E2035A6E980CFC1D5605DBC20FF69FF0BB4DAC5A6DC47849802436F976D2E076F8E5A1A8D5DB173EEFEB9B43FB12E42C37692B141DC5389C217F7F679E843495537D4679DCBCD7CDD81B4885E5552F64EB5F8AFE52B9B6000F
659C873F3B0427A3F1F21122C2E77D930B3D392AA3CB07CDF4D1665AACFD3E3CA8466D1964A24E23D2FFF97A8AE96F1FCE9F827FC18F2B7A42F24E04ABFB90E4AAFF0043258DEE354C6A962294494BDED59A8A4E4195A220856E519EAEE005294610F63B83E96BC3F520FDAC9546F5A12CE848FF86C6B8FCFFA5B29E13DB25788603711F79F9AF3211A940A4AAB60CA03B5FF7FC941FC35E4560966C98DB7F8DAA13407F0C2E03E2FCB2678FC919BB0732422916F454256631A720DE3F5D65CBD5EE14DAD9987866342D587223C407D11ADF4F2E3331385556D7A9C801D470D8E925DB9C5B2E741716D9D616D1FFC98BA32A6B62EAFFE89A97D955F9E7D67446B2B4D165BB637FF6E2ABD4F74DE8FF6609DCF8FF4789E5AB496EFEAB84725641F51BAFD61292946890AC6C3BDA12F761196A81760ABC42A4E15DA79825BB63B362EF1888B35AC59EF436D0E9C9E962565704A7EF9A872BCC68AFFC15730F8D3B8FCA259FBE9571F8AC73EE2645286E119B58D0873034BFECBEFC9270D3CE3E8DCD1AFF51B8DD475172A60CD318F29631466071D28EDF32B9CBE6638A84B6A65EFC0316B8B9731BBFD9C905347B8F661EB19FFBDDBA6010BBBA00182C9583C8E78C3ADD90CDC46D84613E02003AC2417738534634F5A96C0686B565B627A59DD1E3F5ED26746AEBF1D3566EFE10F2A601EACCFC7D4EDE545528F1CB88F295AD6301F359BFA254B4FFE54B5BBEE742F6F455E52E5418447895C5B706FCBFE3B6766018A0B9EFAA25489ABBC0B6B9FE2DC4EBEA8B9D4AE82ED5DD107BA9174AFD2240D836E5166E98DF7B621BA8ACE4E23ADD5D308E6A801DBD07FCFEBE2E5C444FE62B953474B28FE01391760982E675D1BF557A954D08F08B7D08107B755D67844DBBA043D3C1AEDC034424408C12F8B337DF93F8E0B86CA867C5FAB72A4F2CD8683E5BED72847FA7B3AE1543DD7C4F83E50D8CD1D44BC61310EF45FBB2EADD9CB4C75938DF76C042A89B74A4AFFFED1ED6BE03703C47D17CD541205D3271D4813DAFAA4726B9AAD1A46105FA10D5877A0C14940FD838C2A71DD37D4C0E4E2F4E5EC689BAD08958FD3218DFB7338F04BB4367F3246376C5B98097C10414021A51D297EBA183EB97110B033F8A48343C3F52476830F9E975655CEB793BF7FD9D82495C1671A19994CB58AAEE85EB18D8F4A4088E63379BF6009A36A0CCE1532C4681C0F6BD30BD5D1D55924E44052FB792A688D6EA2AFC9976D50607186DDD125E734FAB91117F47EDA9EF783BF0A1580D9BAEC8E6DC5CD312884E75411AFF6E874DD25567C8BB992F5593F66A7BA8097F197F6A43D9F5A4679ED2B8F9F0C1141A8133D60AE929650A9DAE78163384C6E12DFD9634619A91A77CA7060E23D0A89F6F13B599DB619DD7F42CBE8665FEE4D53F6FF031BF67A642FA9AE7289E4E0952
B09D503B9DF9395401B892113B1CC9AB8A582149A05D311F884A312F21E7424B3B87A60F0191F2BB92B5CBF1CB66DD270860F3DB17BF86F3561E7FFE664E16E208B4508D9C3022D55C99DEAADDE7C52BC29BC084906B40CA8B8700640EE7F5CEEFBFC2392C123528F3D95BCF5D499D14FC717CF4CBF3276E79C694AFAEF71CB166932BB8948B6F373C5E5B99FA2E73FE03CE1CE16C53A482762E27B579DD8DF6130F7A136DE0888DFCE9BC16B679C197175FDFFA71624A5E965E435CBF0E755FD237E28AB815D6321D102F7EA8D5A75C20F9D67251605ACB6197DB279A7E20F69CBD0CC2F39F25FB160562EFC6E4066778E6F95AD0F1A8FB29AB575E7B434E2B0CFE8646CC9F2A705CDC8314E451F754371DB2671049BF5354D0E93365E4FE13FAD1480719BA57A4B8864CC17DE842343A9DF7755332171A6C77ACEA6D4472EDE84D01F077A5EE2AE2940492BE493F2C6B11EDA2A81221A67B8E5A68F6E66F76B7A88BDE3B9D201AB51E3477658944A321B6B66D974C11C64D697DB028558F2EAA186BC2B9129B7CC2CFAE6CA19CDEE354361CC25FF931CE18267534854598EFB41260598CEF51BB06C3EA5F3DAD5475771E5EB4AD1C2F25D3DB4DF8A9B016849902D37BD97974DA4412590F9C966510F075DC8B83D2F4D80ED4B385E35E657725027C6DBF2555EB5B16A864938D60D3276D8B381AD9775B45D214C5708B783F0E741838D9CD9E0BD4AC301DA5B27B4F4AC1442AD04A9FC24863510478D7FE33474516B137F1BCD27A3D791FAA4E22D8FEA4D0DD3E30F9A63010B1A4AACEDBD79568C765C2B33B17F374E5FD7DAAA1510E61BFD6160FB2890E07B6FDA23F24BBBBE83D92B64FE2C573941B226991E3FEFAA8A219A4650CB5CE625DFB1C8501880D3E0D2AB857CAFC975534E58555AC581B16F6856EF67CAA7BE6D4FB807BFFC1179D308FEA1C8D8A0A6AE48441317FD6A9FA815EFA12298980B80F2DEB8616D072A0F3EB264F080C6A4796EAEE7CD8CB977FCEB8949C766D39F71418F4CE5A4E7513CFBD7D4C5DB8239DB0487EA845FA96E1AB49D364A3D764A2EA6EC70043CD4381CCBA6BA8DF044C3FD768BB822836ABC56E3039FB3D6B417D124BC431A105CD44AB5177683F70B01C2EF5D27D65A464552D42D73BF45AC0EBDBFCC08AA525FE09214A8C9E9909C2F4CC48303B25A8FCDD3D8AAB1E5C6BEDABD34DDA446D3BA6FCD43562EAFEF4A577BD9C296E0D14B07B15BD69880FAD4BCDB3CB43B14439D2715616CDECB4917C1068A6CC3974F6513814788D47E8219144870BF3D80D266085FD3041856E54BF339F28ACD63B6107D9B924E4A977154D5A8B43B3EED7A3775B08698AA1296682A70C95998272EF8CC44B4FACCBA1C78B03C7EF0273525A5C9206597E98A9897EA5EF6582B71D002631CA8E5E9635CBC7438822EF854737
D99FCEB5EE854B97D975136A495B41AACD2D6AF47C95C1797E1B4542C6211C055982F2756C72068E8FAD949472BCB02E0C6333B0AE18E0FE10BD0B9B12073DB6AFF5F9B9955285DFDCCFE7DA36780A1F9CB957DB6FB926CD1C57833C4E2D460670C9AE06236E83FB2FE65BD5EB43019DB5CE650AFDEBFF0F36789FF7BAAB12E5299EECB50E042FD830293050B95B6F6C911AAA440A6D808C52F4AA54E4E603A29A038F3B82D00D37094EC5CF0766AC47DE79C7151984B2B94C7EFFDEC5BCBC05154D15655825A7DDC62751F9B8E801DD30F1F82BAA47F65B4666DB962BA4DC2BA9A3CCBEF213125AE307E8945B64D4A6C4F2EC35345E25B1231814FEB33A2E4ED2DDE65DC09CE5AE9C11175D76CCBDCE4B44013BCD0275C481C8E0D1F1C79E7BDA469072003C8141027C46264E86DD9C6EC31C555B2110BEAC29E46C9844F168D02D0DDB903D5DCBB189A03957171D0539C38FB28C438F685BB79ABA59186D405A7C17E3BF376B870A5936D165DC6183FC0880A4203F88C4285EE5E0D63DA6FEE397199FB1D713B46D77AB2F74B68C33A9B133397F036660B377AAB523E2940D197A65E8D60695EAA49677628DCD88DE4F6137D56F39FF78CD9F032FF516586D4308D6ECA634D7C644B063BD42DDD90767F5E2A88DD53E62DBBA4A8DD5C3C40C0FB2306723A7F143B793BC47974F2D2BC04CB74A0B8038728B69FC37FD48AD91C9261019F7C40F6174FD40E08DBED96FD8686B277991654942B01C0BF38443CFE80A54C2B392323BEA278444B37D0F906A1235482D29C33F960DEE1CF40B0140C40D0586273E65133789929C17B01047FD0F2EE02A2CFB155135307FAF0506A26E1BD314713FA9BFAADFFA169B2EB9A93FEEAC526CFDB7010EB36D150F580EBF90F9FC13A049AABE6DFC77E21186B9B78535ABC47B064C267F26325DCC2318A6A399815DD4296BC3CD920FC9AFAF29E55323D12BCBCD758CF474B4CA70AF7EB254F82DA9A916170257FCC1AA8B46D48CCDBEF3B2D230F77495FBE26C6B73775B6ED10658F2225B7B2D3D7467B75146F458E80A81F7AF47FED1B6311C923638A8A06625C4D22A1894622D2F3D4028C9A7B04DA4F4D162FB6EDB29EB1E9E6A4643E14BA186A45513AF0B60EF26C6E864087DC4A666313A92027476E1674512FC73C7C0DD5E373D74E44B70DBC5B4D7CF4FBB9ABD2CA3C6A1C546742D396045F20FA2AB8A2B2A0049C69E54042F74C32FEB72279C47E0D28484A3999FB4F7B5B0B469EDCF7E5E8ADDBF25907920BE3128CA397DEF75646024CE17FFD3074EBF69DE99CFCCFB44902DF5C036C46D854B969C451ECCD28055CD4F7A87DDC47604B764C1E53AB6C5AC91ED46524EBD3D42C8586F88BFCAEF44718781C15C9158AC39AB2B0BBBCE61EE1C6A80DECDD8EB0F9644EDBFB51B6AABC2CA0DE600EB9D09A432
D97678B0A5D2C46AEC446B487B86D444518128F081F032AFE0EE3E2F5F353AB7E20A2F55CD02716344EF4DE67DC0457C3D00CD81D4AFE826EE02749E359D716635FA386544E01904C5BEF2E03171F8FEE96E33DF8DEEF9209C1F89BE01F3DB160EE85FE94D452D19B2C525BC9CC2B6CD0BC7FA8A4C4C001C8D2C100A4B80BEC9ADA81549CF0EC33E98A324C7A4FACE90E935ECC3EAD852BD8D69C3C058964907B08FA5EB6B9DCBFB6331AB43D3E20BD56A7D6FE5D98E538427BDBCD67C7EE816FF863B5B4F47C85E318F6EE97D78DE226F568BC099F5433EE17F23FD25C88C97A669A7FFFEBC1CAF9FD3434DF50D15282FB8E5018EBE10A68100F86B2DD25F8F064333DC69798BF3DD1877B6AE44AEEF20B2CE01052E7F518512AB7C5F180FC35C4D78E8923F11B01E5E74EC027175D8E15CEB46C6732EECEE0AB94D443592F39FB02E818332B388ED6485533E478377028733CCDF51C83BA43ACF80086052BF9F24239D649B0510CDA0DEFE24FD2E3FF92C5521A81F8BB445412C5AF7D28508FE8129F9E92A1E65C0564D56743BE151A6898DBD08D99CABB873179D286EDC53942103DF30F258DEB2EF5C02DBF138721DBCB2768E411F61FB33E7CFB63AB6575778FA49877999C77E6D3ED84CDC540A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Italic
%!FontType1-1.0: HelveticaNeue-Italic 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Italic def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /i put
dup 34 /s put
dup 35 /A put
dup 36 /l put
dup 37 /e put
dup 38 /n put
dup 39 /g put
dup 40 /t put
dup 41 /h put
dup 42 /M put
dup 43 /a put
dup 44 /x put
dup 45 /N put
dup 46 /c put
dup 47 /o put
dup 48 /d put
dup 49 /underscore put
dup 50 /b put
dup 51 /y put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -993 1 index div -481 2 index div 1511 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





00020001B8000A2B00BA00020001000C2B01BA00030003000C2B01BF000400410035002A001E0012000000122BBF0005003A00300025001B0010000000122B00BF000200450039002C00200013000000122BBF0003004E0040003200240016000000122B00BA0006000400112BB8000120457D691844B800002B0000
00>] def
/CharStrings 21 dict dup begin
/.notdef 0 def
/A 1 def
/M 2 def
/N 3 def
/underscore 4 def
/a 5 def
/b 6 def
/c 7 def
/d 8 def
/e 9 def
/g 10 def
/h 11 def
/i 12 def
/l 13 def
/n 14 def
/o 15 def
/s 16 def
/t 17 def
/x 18 def
/y 19 def
/u20BC 20 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-993 -481 1511 1077}def
/UniqueID 4265036 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92633B2598E0B1EDFA3C2732C9D3498122A5E23C1999619F9F2A05B051C0B681D7A669278A38299D677C1FC1646D5F70F41769F40488B752C651952952EEFC3B692AC48AA6900E677208777F92318A3B072D3D96A3A6A6457AE6DA12F995D33CC741496596E12E2895EEB49D1ED42DAFCFC4C12AD245FF1F1F1EAD169E2A7CC1683B27569505C8F601AB528C31DF6DA504A38632E865A5386EC92FA978646E1630C7A4274AADEA8CCA1C9D73CDB2114F4BCC92C4710275F824AF6BA5E50223411914691DF4A66C6A5A5BD1BFDD3DDD593A7DB5A5E9EB37E5DEF3A5070AD643428E862EC46442FD3CF940CD9E4502427688E7B8D3A56FBFDFBAF1B78BC37C48CFE73D08ED5A7583ADBBAC022C7A4C78E645AA2D61A5916AA812A71E883622EDE3F87AE73ECDD226910B07AB2B1D2A279994846DCA9815FEB45F22604D50E4A9F8A439371E4BA4AFAE53112AC10807CDDFD79E0910594D8B0092E8C8FF11AC5FF0CD9E54343F8BCA1863EBE56B2E762C6F65D228EE559310FB9D702B96F254849E543F4D592F1FA97915B5E5DEB3FCF6561C004E4D010398032D95CF86F55ED1B9BDED79BDE1B037A6BF5568312FDA12B1F2F980AC607E3644FE42A1B8D7CB5232E2D05B1EEF90F3EB502EC0063EA792E6FDA3182CA32844F95A714AF84FEE314542387F816C376B9B9031643D351D0CAA493B5AD161934C4418897B9A46529013FD1B298E7E497E5BB502CCDB636B2EF831955B93D1B5B90DF481D28A9D80759A1D

6C6B291969E9BAE67BF33DBA8F126752D7C8324B2B13D400D8062DEFACA4DE0391D7B98CA9DFD6F22CEEE85B0111E891CC48B2401FECADE9AC319FC2817F6C016C02979521F1BC57304494A2A0DB9BE32CA275889B17D0290EE2059FC90ED32942C5DAAD55938E44865E8F1A013B1B2137D67B80D01582B191505E3505DDBEA1C4FC229E6591BA04236FA09001CFDE0D177CE8F06ACD27A03BBB76719AFD9295CDFD265430D79299C12DE7DF4B3EBA43D7734944D3D3D6E35F3164577072C2C3F358463B3ECE778FA7F14721F60B137AE37B131F6C5E2488BE01BB882A217B50016673208F7ADF7C3525341A12E1D91A187EB874211B6F4BB74A0CC0A8DFBC9322284CF26773325DF5582A9C0876E110C0D2F83DCFFE1D47123BD79A4B4C2D128D80DC3EDBF82DFF23CD5D89F6F08B7E0753FB4C605D2A679CB05A0C58EB3D9CFFFB8B6E2D9060AC7D73A63ABF8418D24F87952C332F6D8EDF3933DEFED609E2F6117080A965EEA5770960991B25FDA2148A542CD3952E21E66BAEFA472D93C7846C4F2478419E0B2AFC8A105107F1B11F7787DE4A4130CE27D787EF7DC8DCC8B4F0135351AA0BB4CA3BB6CE68F184EBC53E7AFA8623C06C4163140BABE5A975627E7E509F2C6E607DAEF882FE1BDF5D6FFC30DEE1FCD7D8EAA51D1CC852E1D708CB59FA342A43451C474D96BA2C14E7623B8FF4088B34DAC4647EF7E1FDD6E8B8E47A7B8829DFF689CC630D6A5AF6FD9E4E3626F8713571A86B6FC6762C217AC1DAE7C94CB93BC333DA8206C6FD7678CB3276CFEA371FD987219A34829F93E95DB01CE89EFADF8D98471A686073A444240EB83C313CE948C2E37156D23F4F295D63C49FAD5E4988D77882AAD8D3841F0FED152B025E51AB881081D857CFD81C2A3C7317F4D215FF3CF5273E80BA61E123EE19AE35B53F182B9C26C27FB4A04CE9248D29EA4D2F150B54D69E6679852D85D960082BF774C7BC331C9957F64E2C720ADBAAC9DB7F3B5F8573FCFD2975C1266498C1C784FA64535093FD1C32E1026BDB611A3DD5BEA450555F98CA851D67FF3DB52D257660D6EBE3E3DFF67D43E4CABAD02F4FD92166E41B0F709BC9F763B88D5B562A41DCFAE574B3894071E68507EFA023CE9AEA283D9EA6663B094B1022E0C20EAF6AC6D9FE1C5A3F98DB3A0647336A5C680F4625B59BB0C35277143D258D49AF292C031F3089DF27A0CF4BCCE1BE7BA96B41EECE17003C5C280781FB51170059DACFAC5D45E4A4EA72B23BF988A324D802A793C8A0862AFF43120CDB100D5AAFC693736CE2BA8E7AE43F546D89B933C8652432DBC9BF0CE72F2A71196BCE330FDB0EEF446433CF7E4D46F642E1F15F423B333A439E011054D3977EE994E13CD7AE20FA70DD5A8FB12B3685D3F6E7C64392F1623EDD78BD3977E629534216A456E49F805CDFE7FFDB08FC6A42
0423690E24858AF6E719800E308A4BE84E72CE9029A68D8662311FCCF754CC857B1E0BF88B9EF6297B76C975CD0FE2013AA52330D175D6A2E038F592AA28A3EFA1B80F89658A05A8F717E31599C8B3AB143113B0B2AC4D4415056C532B662DC77AE37811DDD630B3A2DDD24D752611F4BFF6D9E180C82512470B636D393D02D13676BE1CC024B87EA5F1BB5947CC4817AA0F2534B1262E767A4246575A2FC329F8AA552774E33B08950CD07E26D92F179E23433CDD1C6F9073C769FE0CC2291098414C25CE9CA8CD6EEFA1EBEB112BFF38A097B3F1D4EA26895F88C2EAF8FDE1EEB4672D75BCE157429545404D93F8C336FCA682457D81F587F7F18E3B2731712D9E49D4DD90B865824FE6343183376C1B557E6D4201CBDB04092BBE587074010EE38885FB8A54C0CABC0145E24D04DA0ED79639E6BCCCAE33DD882E2BBD09F80B8EF0CD3F4D1DCA69A48D8BC6AC50D33F092F7ADCF905AB9FCDD9A565100768996F2916A4DF5F9145A484D0F157983E78D5DA4460F66683B2DE396FFFCC2EF5D4BEE63A5D5BB0038BCD0238B3EF6EFC5DBB4B235EE37AEAA0BC8B90C0D50F5A8EB2FCFE16FB67C103DB012E371D7F533859E1762AA8DC680CDF91A6D06B7301550A835D0DDE2ECE290E9FABCBDA6B47E7F6F23AA56C255E07DEBF35EA0A72EFFED9E551E8C9274A7C32910A37E087472BA078F2D8DE09746798AB65C0D7EA4985DF7F626A3FB35FCAE9D4DB1E153FE29096F3C92D094496804E98FD5FCDFA1A779A77A67E809CB711BB3271D0F0EA6FC153B88A58908CFB1CECA55B80CB8A1F6A1D61542007DBD2C3685E37F764CA4500D616A72D154EE04599C6CAD084E4163AFE5256420105CC9A7453E2857B0C8C0F54FE906D9431F5B9562E930741377A7DC1902DF81E1200B5543C5BE096F61BCFB2B3923FA0F7547935965B824DA7CFFF56A71015E562C464FA50CF2455444037A5A7F5F00EAA0994E0855DC5DDC13D65F85EBEC06E949D6716B363DE8C37832EA5AFFADE1417795F2D8EF257A7879A17C687E1F59531166968B5626A5E24B476D4068922541F5E3D056053F2C996508846DA77B04FEC71EEC93089B65F175C76FD579CE2ABDC9FD446E358F4CAB18C5540B8CD2CDB631D62226C729602FD60445B983AFA92AA7770E709AD69D2BA11F8EEEFA423D3858887FB949B413C3628A61640A92F3209F7369C30709C563D36CBB221F236D39BB20A340F5639A84783F005F5444158630BD7288D88E64F41FCDE0C8F5851CE4FB98AA4C387D37AEE1C5DC113300CAF2DC6F56836BD7C5CA9041677D8364DF2360C3270FED6B6C6DC58D8DCF47FB63257CD202DD5F600FC623C73C355718A2A31CC7B155FC1AFD0987C5161106E5BA70243B5BE788C85D03B3C281263542FC24D67FB99BB206E8E6B60F96D0137EF7693410D6288B613EE3919
FB4388194586F5570AB5DF56D592FCD122AA4A0086CC9D6EA4DF74C394B2371B4CDA306C464A23EDE592F31D3CC4C3791BB6D7244677A5188EBC0440F5A420F6BA780FECD82755A0C0B2186D5D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Italic cguidfix
/F2.1/HelveticaNeue-Italic renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /r put
dup 34 /i put
dup 35 /v put
dup 36 /e put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/e 1 def
/i 2 def
/r 3 def
/v 4 def
/uni2B90 5 def
/uni2B91 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-1018 -481 1437 1141}def
/UniqueID 4258367 def
currentdict currentfile eexec


0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F3.1/HelveticaNeue-Bold renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 420.75 149.49001 rc
0 149.49001 m
420.75 149.49001 l
420.75 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1127 1535 m
1505 1535 l
1505 -1839 l
-1127 -1839 l
h
-1127.3625 1535.38 m
f
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 -409.86002 3071.97 cm
571.07068 2959.0605 m
647.83838 2959.0605 l
647.83838 3012.5959 l
571.07068 3012.5959 l
h
570.5 2958.8799 m
S
[] 0 d
608.76013 3023.0007 m
615.59436 3029.8347 615.59436 3040.9153 608.76013 3047.7493 c
601.92596 3054.5835 590.84558 3054.5835 584.01141 3047.7493 c
577.17725 3040.9153 577.17725 3029.8347 584.01141 3023.0007 c
590.84558 3016.1665 601.92596 3016.1665 608.76013 3023.0007 c
S
/Cs1 SC
0 sc
0 i
0.99000001 0 0 -0.99000001 180.56192 66.948753 cm
/F1.1[ 23 0 0 -23 0 0]sf
-7.4520001 8.1780014 m
(!)s
0.60000002 i
/Cs2 SC
0 0 0 sc
0.99000001 0 0 -0.99000001 -409.86002 3071.97 cm
596.46289 3017.8752 m
596.51001 3007.1848 l
S
0 i
CM
180.71985 102.77707 m
177.71497 94.870239 l
183.65491 94.844055 l
h
180.71985 102.77707 m
f
0 J
0 j
0.99000001 0 0 -0.99000001 -409.86002 3071.97 cm
596.54529 2999.1848 m
593.51007 3007.1714 l
599.51001 3007.198 l
h
596.54529 2999.1848 m
S
1 1 1 sc
CM
180.79382 134.53 m
195.76263 119.56118 l
180.79382 104.59236 l
165.825 119.56118 l
h
180.79382 134.53 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 -409.86002 3071.97 cm
596.62 2967.1111 m
611.74005 2982.2312 l
596.62 2997.3511 l
581.5 2982.2312 l
h
596.62 2967.1111 m
S
/Cs1 SC
0 sc
0 i
0.99000001 0 0 -0.99000001 205.425 105.5175 cm
/F2.1[ 18 0 0 -18 0 0]sf
-12.33 6.2480011 m
(!"#)[ 3.996000 8.658000 0.000000 ] xS
[
4
4
] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
0.99000001 0 0 -0.99000001 -409.86002 3071.97 cm
415.51514 2959.0605 m
562.98987 2959.0605 l
562.98987 3064.1111 l
415.51514 3064.1111 l
h
415 2958.8799 m
S
[] 0 d
578.88599 3035.2871 m
464.60236 3034.7126 l
S
0 i
CM
42.176445 67.644348 m
50.081417 64.634575 l
50.111275 70.574501 l
h
42.176445 67.644348 m
f
0 J
0 j
0.99000001 0 0 -0.99000001 -409.86002 3071.97 cm
456.60248 3034.6724 m
464.58728 3037.7126 l
464.61746 3031.7126 l
h
456.60248 3034.6724 m
S
/Cs1 SC
0 sc
0.99000001 0 0 -0.99000001 99 53.99625 cm
-24.84 6.2480011 m
($%&'\(\))[ 3.996000 9.666000 10.008000 10.332000 5.670000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
35.56633 79.152542 m
41.87212 72.846786 41.87212 62.623146 35.56633 56.31739 c
29.260574 50.011604 19.036934 50.011604 12.731178 56.31739 c
6.4253902 62.623146 6.4253902 72.846786 12.731178 79.152542 c
19.036934 85.458328 29.260574 85.458328 35.56633 79.152542 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 -409.86002 3071.97 cm
449.9256 3023.0479 m
456.29507 3029.4175 456.29507 3039.7444 449.9256 3046.1138 c
443.55612 3052.4832 433.22922 3052.4832 426.85977 3046.1138 c
420.4903 3039.7444 420.4903 3029.4175 426.85977 3023.0479 c
433.22922 3016.6785 443.55612 3016.6785 449.9256 3023.0479 c
S
438.34692 3018.271 m
438.29645 3000.2681 l
S
0 i
CM
24.031265 109.62463 m
21.08349 101.69633 l
27.023468 101.713 l
h
24.031265 109.62463 m
f
0 J
0 j
0.99000001 0 0 -0.99000001 -409.86002 3071.97 cm
438.27402 2992.2681 m
435.29645 3000.2764 l
441.29642 3000.2595 l
h
438.27402 2992.2681 m
S
1 1 1 sc
CM
13.5 136.5 m
34.469456 136.5 l
36.948292 136.5 38.960102 130.71162 38.960102 123.88062 c
38.960102 117.04963 36.948292 111.5 34.469456 111.5 c
13.513109 111.5 l
11.034273 111.5 9.0224638 117.04963 9.0224638 123.88062 c
9.0224638 130.71162 11.034273 136.5 13.5 136.5 c
h
13.513109 136.25563 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 -409.86002 3071.97 cm
427.63635 2965.1211 m
448.81763 2965.1211 l
451.3215 2965.1211 453.35364 2970.968 453.35364 2977.8682 c
453.35364 2984.7681 451.3215 2990.3738 448.81763 2990.3738 c
427.6496 2990.3738 l
425.14572 2990.3738 423.11359 2984.7681 423.11359 2977.8682 c
423.11359 2970.968 425.14572 2965.1211 427.63635 2965.1211 c
h
427.6496 2965.3682 m
S
/Cs1 SC
0 sc
0 i
0.99000001 0 0 -0.99000001 23.991282 123.88062 cm
/F1.1[ 23 0 0 -23 0 0]sf
-6.3940001 8.1780014 m
(")s
0.99000001 0 0 -0.99000001 65.834999 94.596565 cm
/F2.1[ 17 0 0 -17 0 0]sf
-30.379 5.762001 m
(*+,#\(-)[ 14.790000 8.823000 8.177000 11.339000 5.355000 0.000000 ] xS
[
4
4
] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
0.99000001 0 0 -0.99000001 -409.86002 3071.97 cm
655.91919 3012.5959 m
837.73737 3012.5959 l
837.73737 3064.1111 l
655.91919 3064.1111 l
h
655.34906 3012.4167 m
S
/Cs1 SC
0 sc
0 i
0.99000001 0 0 -0.99000001 297.34558 53.625 cm
/F2.1[ 18 0 0 -18 0 0]sf
-53.847 6.2480011 m
(./&\(+!&%0123)[ 9.666000 10.332000 10.008000 5.670000 9.342000 3.996000 10.008000 9.666000 10.674000 9.000000 10.674000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
361.5 78.5 m
386.5 78.5 l
386.5 53.5 l
361.5 53.5 l
h
361.28662 78.931877 m
f
[] 0 d
0.60000002 i
0 0 0 sc
0.99000001 0 0 -0.99000001 -409.86002 3071.97 cm
779.15149 3023.707 m
804.40405 3023.707 l
804.40405 3048.9597 l
779.15149 3048.9597 l
h
778.93597 3023.2708 m
S
613.88574 3035.4104 m
769.03601 3035.7253 l
S
0 i
CM
359.40561 66.585869 m
351.49167 69.57193 l
351.47961 63.631943 l
h
359.40561 66.585869 m
f
0 J
0 j
0.99000001 0 0 -0.99000001 -409.86002 3071.97 cm
777.03595 3035.7415 m
769.04205 3032.7253 l
769.02991 3038.7253 l
h
777.03595 3035.7415 m
S
/Cs1 SC
0 sc
0.99000001 0 0 -0.99000001 208.395 15.46875 cm
/F1.1[ 17 0 0 -17 0 0]sf
-204.0425 5.762001 m
(#$%&'\(\)'&$*')[ 15.742000 9.452000 9.129000 5.355000 4.726000 3.774000 8.500000 4.726000 5.355000 9.452000 9.129000 0.000000 ] xS
1.010101 w
-113.9765 7.5757575 m
-30.17034 7.5757575 l
S
-21.165236 7.5757575 m
1.5245 7.5757575 l
S
-113.9765 5.762001 m
(\)*+,-.'/,-0*\)&)[ 8.500000 9.129000 9.129000 9.758000 9.452000 10.081000 4.726000 3.774000 9.758000 9.452000 9.758000 9.129000 8.500000 0.000000 ] xS
2.5244999 5.762001 m
(')s
7.2505002 7.5757575 m
38.975498 7.5757575 l
S
7.2505002 5.762001 m
(1\(2*1)[ 5.661000 3.774000 8.500000 9.129000 0.000000 ] xS
39.975498 5.762001 m
('\(-'&$*')[ 4.726000 3.774000 9.452000 4.726000 5.355000 9.452000 9.129000 0.000000 ] xS
91.315498 7.5757575 m
193.5905 7.5757575 l
S
91.315498 5.762001 m
(3-\(&*.'4&%&*\))[ 12.274000 9.452000 3.774000 5.355000 9.129000 10.081000 4.726000 11.016000 5.355000 9.129000 5.355000 9.129000 0.000000 ] xS
194.5905 5.762001 m
(5)s
0.99000001 0 0 -0.99000001 208.395 133.64999 cm
/F3.1[ 17 0 0 -17 0 0]sf
-18.105 6.2534409 m
(!"#$!)[ 6.613000 4.386000 8.840000 9.758000 0.000000 ] xS
0.99000001 0 0 -0.99000001 401.37054 65.725739 cm
/F1.1[ 17 0 0 -17 0 0]sf
-11.645 5.762001 m
(34)[ 12.274000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
