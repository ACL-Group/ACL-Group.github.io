%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: revised description.pdf
%%Creator: Adobe Acrobat 9.4.3
%%For: Jerry
%%CreationDate: 2011/5/15, 17:31:20
%%BoundingBox: -1 0 586 475
%%HiResBoundingBox: 0 0 585.9670 474.0878
%%CropBox: 0 0 585.9670 474.0878
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1061 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2011-05-15T17:30:41+08:00"
   xmp:CreatorTool="Acrobat PDFMaker 9.1 Visio 版"
   xmp:ModifyDate="2011-05-15T17:31:08+08:00"
   xmp:MetadataDate="2011-05-15T17:31:08+08:00"
   pdf:Producer="Acrobat Distiller 9.4.2 (Windows)"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:bb114bb0-30ca-47bc-a00a-4a2ff0f9f868"
   xmpMM:InstanceID="uuid:23712e6c-4b8d-4490-9d1a-9b13a035c063">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Jerry</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -474.088 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-5 0 mo
-1.52588e-5 474.088 li
585.967 474.088 li
585.967 0 li
cp
clp
[1 0 0 1 -5.59398 0 ]ct
4.5016 lw
0 lc
0 lj
2 ml
[] 0 dsh
false sadj
25.5773 443.446 mo
25.5773 45.0797 li
false sop
.750179 .679652 .670191 .901488 cmyk
@
25.5773 443.446 mo
578.43 443.446 li
@
25.5773 188.248 mo
578.43 188.248 li
@
25.5773 45.0797 mo
575.616 46.4864 li
@
221.179 443.446 mo
223.993 46.4864 li
@
365.819 443.446 mo
365.819 46.4864 li
@
9.65541 449.456 mo
20.27 455.211 li
22.0604 451.758 25.1936 449.137 28.9023 447.986 cv
18.3517 442.742 li
14.5151 443.51 11.3179 446.003 9.65541 449.456 cv
cp
20.7176 438.906 mo
31.3321 444.149 li
37.087 441.272 li
26.5364 435.964 li
20.7176 438.906 li
cp
41.4352 441.783 mo
30.8206 436.476 li
28.9023 437.179 li
37.087 441.272 li
37.087 443.957 li
41.4352 441.783 li
cp
20.27 457.129 mo
41.4352 446.579 li
41.4352 441.783 li
28.9023 447.986 li
25.1936 449.137 22.0604 451.758 20.27 455.211 cv
20.27 457.129 li
0 .990631 1 .000396735 cmyk
ef
.239787 lw
1 lc
1 lj
10 ml
9.65541 449.456 mo
20.27 455.211 li
22.0604 451.758 25.1936 449.137 28.9023 447.986 cv
18.3517 442.742 li
14.5151 443.51 11.3179 446.003 9.65541 449.456 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
20.7176 438.906 mo
31.3322 444.149 li
37.087 441.272 li
26.5364 435.964 li
20.7176 438.906 li
cp
@
41.4352 441.783 mo
30.8206 436.476 li
28.9023 437.179 li
37.087 441.272 li
37.087 443.957 li
41.4352 441.783 li
cp
@
20.27 457.129 mo
41.4352 446.579 li
41.4352 441.783 li
28.9023 447.986 li
25.1936 449.137 22.0604 451.758 20.27 455.211 cv
20.27 457.129 li
cp
@
18.3517 442.742 mo
20.7176 438.906 li
31.3322 444.149 li
28.9023 447.986 li
18.3517 442.742 li
cp
31.3322 444.149 mo
37.087 441.272 li
39.9645 442.487 li
28.9023 447.986 li
31.3322 444.149 li
.895628 .7673 0 0 cmyk
ef
18.3517 442.742 mo
20.7176 438.906 li
31.3322 444.149 li
28.9023 447.986 li
18.3517 442.742 li
cp
.750179 .679652 .670191 .901488 cmyk
@
31.3322 444.149 mo
37.087 441.272 li
39.9645 442.486 li
28.9023 447.986 li
31.3322 444.149 li
cp
@
23.595 454.764 mo
23.595 453.421 24.2984 452.334 25.0657 452.334 cv
25.833 452.334 26.5364 453.421 26.5364 454.764 cv
26.5364 456.106 25.833 457.129 25.0657 457.129 cv
24.2984 457.129 23.595 456.106 23.595 454.764 cv
cp
34.7211 448.497 mo
34.7211 447.154 35.3606 446.067 36.1279 446.067 cv
36.9592 446.067 37.5986 447.154 37.5986 448.497 cv
37.5986 449.84 36.9592 450.927 36.1279 450.927 cv
35.3606 450.927 34.7211 449.84 34.7211 448.497 cv
0 0 0 0 cmyk
ef
.720426 lw
23.595 454.764 mo
23.595 453.421 24.2984 452.334 25.0657 452.334 cv
25.833 452.334 26.5364 453.421 26.5364 454.764 cv
26.5364 456.106 25.833 457.129 25.0657 457.129 cv
24.2984 457.129 23.595 456.106 23.595 454.764 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
34.7211 448.497 mo
34.7211 447.154 35.3606 446.067 36.1279 446.067 cv
36.9592 446.067 37.5986 447.154 37.5986 448.497 cv
37.5986 449.84 36.9592 450.927 36.1279 450.927 cv
35.3606 450.927 34.7211 449.84 34.7211 448.497 cv
cp
@
9.65541 449.456 mo
9.65541 451.886 li
20.27 457.129 li
20.27 455.211 li
9.65541 449.456 li
0 0 0 0 cmyk
ef
.239787 lw
9.65541 449.456 mo
9.65541 451.886 li
20.27 457.129 li
20.27 455.211 li
9.65541 449.456 li
cp
.750179 .679652 .670191 .901488 cmyk
@
193.428 190.806 mo
199.631 194.195 li
200.718 192.149 202.508 190.614 204.746 189.975 cv
198.48 186.842 li
196.242 187.289 194.387 188.76 193.428 190.806 cv
cp
199.95 184.54 mo
206.153 187.673 li
209.542 186.01 li
203.339 182.877 li
199.95 184.54 li
cp
212.1 186.266 mo
205.897 183.133 li
204.746 183.581 li
209.542 186.01 li
209.542 187.545 li
212.1 186.266 li
cp
199.631 195.346 mo
212.1 189.08 li
212.1 186.266 li
204.746 189.975 li
202.508 190.614 200.718 192.149 199.631 194.195 cv
199.631 195.346 li
0 .990631 1 .000396735 cmyk
ef
193.428 190.806 mo
199.631 194.195 li
200.718 192.149 202.508 190.614 204.746 189.975 cv
198.48 186.842 li
196.242 187.289 194.387 188.76 193.428 190.806 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
199.95 184.54 mo
206.153 187.673 li
209.542 186.01 li
203.339 182.877 li
199.95 184.54 li
cp
@
212.1 186.266 mo
205.897 183.133 li
204.746 183.581 li
209.542 186.01 li
209.542 187.545 li
212.1 186.266 li
cp
@
199.631 195.346 mo
212.1 189.08 li
212.1 186.266 li
204.746 189.975 li
202.508 190.614 200.718 192.149 199.631 194.195 cv
199.631 195.346 li
cp
@
198.48 186.842 mo
199.95 184.54 li
206.153 187.673 li
204.746 189.975 li
198.48 186.842 li
cp
206.153 187.673 mo
209.542 186.01 li
211.268 186.714 li
204.746 189.975 li
206.153 187.673 li
.895628 .7673 0 0 cmyk
ef
198.48 186.842 mo
199.95 184.54 li
206.153 187.673 li
204.746 189.975 li
198.48 186.842 li
cp
.750179 .679652 .670191 .901488 cmyk
@
206.153 187.673 mo
209.542 186.01 li
211.268 186.714 li
204.746 189.975 li
206.153 187.673 li
cp
@
201.613 193.939 mo
201.613 193.108 201.996 192.533 202.444 192.533 cv
202.956 192.533 203.339 193.108 203.339 193.939 cv
203.339 194.707 202.956 195.346 202.444 195.346 cv
201.996 195.346 201.613 194.707 201.613 193.939 cv
cp
208.135 190.231 mo
208.135 189.463 208.519 188.824 208.966 188.824 cv
209.478 188.824 209.861 189.463 209.861 190.231 cv
209.861 190.998 209.478 191.637 208.966 191.637 cv
208.519 191.637 208.135 190.998 208.135 190.231 cv
0 0 0 0 cmyk
ef
.720426 lw
201.613 193.939 mo
201.613 193.108 201.996 192.533 202.444 192.533 cv
202.956 192.533 203.339 193.108 203.339 193.939 cv
203.339 194.707 202.956 195.346 202.444 195.346 cv
201.996 195.346 201.613 194.707 201.613 193.939 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
208.135 190.231 mo
208.135 189.463 208.519 188.824 208.966 188.824 cv
209.478 188.824 209.861 189.463 209.861 190.231 cv
209.861 190.998 209.478 191.637 208.966 191.637 cv
208.519 191.637 208.135 190.998 208.135 190.231 cv
cp
@
193.428 190.806 mo
193.428 192.213 li
199.631 195.346 li
199.631 194.195 li
193.428 190.806 li
0 0 0 0 cmyk
ef
.239787 lw
193.428 190.806 mo
193.428 192.213 li
199.631 195.346 li
199.631 194.195 li
193.428 190.806 li
cp
.750179 .679652 .670191 .901488 cmyk
@
213.251 216.128 mo
220.412 220.028 li
221.627 217.726 223.737 215.936 226.295 215.169 cv
219.133 211.588 li
216.576 212.099 214.401 213.762 213.251 216.128 cv
cp
220.732 208.966 mo
227.957 212.547 li
231.858 210.565 li
224.696 206.984 li
220.732 208.966 li
cp
234.799 210.884 mo
227.638 207.304 li
226.295 207.815 li
231.858 210.565 li
231.858 212.355 li
234.799 210.884 li
cp
220.412 221.371 mo
234.799 214.209 li
234.799 210.884 li
226.295 215.169 li
223.737 215.936 221.627 217.726 220.412 220.028 cv
220.412 221.371 li
0 .990631 1 .000396735 cmyk
ef
213.251 216.128 mo
220.412 220.028 li
221.627 217.726 223.737 215.936 226.295 215.169 cv
219.133 211.588 li
216.576 212.099 214.401 213.762 213.251 216.128 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
220.732 208.966 mo
227.957 212.547 li
231.858 210.565 li
224.696 206.984 li
220.732 208.966 li
cp
@
234.799 210.884 mo
227.638 207.303 li
226.295 207.815 li
231.858 210.565 li
231.858 212.355 li
234.799 210.884 li
cp
@
220.412 221.371 mo
234.799 214.209 li
234.799 210.884 li
226.295 215.169 li
223.737 215.936 221.627 217.726 220.412 220.028 cv
220.412 221.371 li
cp
@
219.133 211.588 mo
220.732 208.966 li
227.957 212.547 li
226.295 215.169 li
219.133 211.588 li
cp
227.957 212.547 mo
231.858 210.565 li
233.84 211.396 li
226.295 215.169 li
227.957 212.547 li
.895628 .7673 0 0 cmyk
ef
219.133 211.588 mo
220.732 208.966 li
227.957 212.547 li
226.295 215.169 li
219.133 211.588 li
cp
.750179 .679652 .670191 .901488 cmyk
@
227.957 212.547 mo
231.858 210.565 li
233.84 211.396 li
226.295 215.169 li
227.957 212.547 li
cp
@
222.714 219.708 mo
222.714 218.813 223.162 218.11 223.673 218.11 cv
224.249 218.11 224.696 218.813 224.696 219.708 cv
224.696 220.604 224.249 221.371 223.673 221.371 cv
223.162 221.371 222.714 220.604 222.714 219.708 cv
cp
230.195 215.488 mo
230.195 214.593 230.643 213.826 231.219 213.826 cv
231.73 213.826 232.178 214.593 232.178 215.488 cv
232.178 216.383 231.73 217.087 231.219 217.087 cv
230.643 217.087 230.195 216.383 230.195 215.488 cv
0 0 0 0 cmyk
ef
.720426 lw
222.714 219.708 mo
222.714 218.813 223.162 218.11 223.673 218.11 cv
224.249 218.11 224.696 218.813 224.696 219.708 cv
224.696 220.604 224.249 221.371 223.673 221.371 cv
223.162 221.371 222.714 220.604 222.714 219.708 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
230.195 215.488 mo
230.195 214.593 230.643 213.826 231.219 213.826 cv
231.73 213.826 232.178 214.593 232.178 215.488 cv
232.178 216.383 231.73 217.087 231.219 217.087 cv
230.643 217.087 230.195 216.383 230.195 215.488 cv
cp
@
213.251 216.128 mo
213.251 217.79 li
220.412 221.371 li
220.412 220.028 li
213.251 216.128 li
0 0 0 0 cmyk
ef
.239787 lw
213.251 216.128 mo
213.251 217.79 li
220.412 221.371 li
220.412 220.028 li
213.251 216.128 li
cp
.750179 .679652 .670191 .901488 cmyk
@
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: ZQYXUN+SimSun-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (ZQYXUN+SimSun-GBK-EUC-H)
%%Title: (ZQYXUN+SimSun-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /ZQYXUN+SimSun-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -145 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28762 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 3 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
36 <001C60D8A8C9B7A73DB9D2D67B03BABA16DE71088E91FDA0365C2DC5F0B4
E238C107979A1BB6C942939C3841566B30D37A08137C1E84B536C3470D5FC886
B167970ABECCA7AC50839057124E257C720FD39309BA1A816166D7E735D90459
C18987BA30E000006CD065F37B91215EF51643DE4E333253E6C5E54C9253984B> |
21 <001C60D8A8C9B7A73DB9C40DC66A19F12FCC46A7E640D743ED53FA7295A4
3DE3EC7E9B681DA33149D24718CE5D426133EBD66F9D5E8289C5FC680EB1BD55
11E9F35487E00F68F96BABBC437694A499B7C213A6D37AB8AE4738C346FD7C7D
FC770F44C2FBE794D1804AE6C00B62E884CB9F85DCC57FE56A5E45A5D60D298F
4F6BF4F3E8DF96B64F237001E04644A1F2D9FB96DBDA12E110EC8C42272DB826
1CAE0449E62177813A4A3994D81F50552CF9F0C33E903AA9F82919DB8C7F47A2
D644C25D1DA098B0> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /ZQYXUN+SimSun-GBK-EUC-H-Identity-H /Identity-H 0 [/ZQYXUN+SimSun-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/ZQYXUN+SimSun-GBK-EUC-H-Identity-H findfont [18.032 0 0 -18.032 0 0 ]msf
214.977 241.513 mo
(\000$\000\025)
[9.01601 0 ]xsh
355.844 365.307 mo
362.494 368.952 li
363.581 366.778 365.563 365.115 367.865 364.412 cv
361.279 361.087 li
358.913 361.598 356.931 363.133 355.844 365.307 cv
cp
362.75 358.721 mo
369.4 362.046 li
372.981 360.192 li
366.394 356.931 li
362.75 358.721 li
cp
375.73 360.511 mo
369.08 357.186 li
367.865 357.634 li
372.981 360.192 li
372.981 361.854 li
375.73 360.511 li
cp
362.494 370.167 mo
375.73 363.517 li
375.73 360.511 li
367.865 364.412 li
365.563 365.115 363.581 366.778 362.494 368.952 cv
362.494 370.167 li
0 .990631 1 .000396735 cmyk
ef
355.844 365.307 mo
362.494 368.952 li
363.581 366.778 365.563 365.115 367.865 364.412 cv
361.279 361.087 li
358.913 361.598 356.931 363.133 355.844 365.307 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
362.75 358.721 mo
369.4 362.046 li
372.981 360.192 li
366.394 356.931 li
362.75 358.721 li
cp
@
375.73 360.511 mo
369.08 357.186 li
367.865 357.634 li
372.981 360.192 li
372.981 361.854 li
375.73 360.511 li
cp
@
362.494 370.167 mo
375.73 363.517 li
375.73 360.511 li
367.865 364.412 li
365.563 365.115 363.581 366.778 362.494 368.952 cv
362.494 370.167 li
cp
@
361.279 361.087 mo
362.75 358.721 li
369.4 362.046 li
367.865 364.412 li
361.279 361.087 li
cp
369.4 362.046 mo
372.981 360.192 li
374.835 360.959 li
367.865 364.412 li
369.4 362.046 li
.895628 .7673 0 0 cmyk
ef
361.279 361.087 mo
362.75 358.721 li
369.4 362.046 li
367.865 364.412 li
361.279 361.087 li
cp
.750179 .679652 .670191 .901488 cmyk
@
369.4 362.046 mo
372.981 360.192 li
374.835 360.959 li
367.865 364.412 li
369.4 362.046 li
cp
@
364.604 368.632 mo
364.604 367.801 364.988 367.161 365.499 367.161 cv
366.011 367.161 366.394 367.801 366.394 368.632 cv
366.394 369.463 366.011 370.167 365.499 370.167 cv
364.988 370.167 364.604 369.463 364.604 368.632 cv
cp
371.51 364.732 mo
371.51 363.9 371.893 363.197 372.405 363.197 cv
372.917 363.197 373.3 363.9 373.3 364.732 cv
373.3 365.563 372.917 366.202 372.405 366.202 cv
371.893 366.202 371.51 365.563 371.51 364.732 cv
0 0 0 0 cmyk
ef
.720426 lw
364.604 368.632 mo
364.604 367.801 364.988 367.161 365.499 367.161 cv
366.011 367.161 366.394 367.801 366.394 368.632 cv
366.394 369.463 366.011 370.167 365.499 370.167 cv
364.988 370.167 364.604 369.463 364.604 368.632 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
371.51 364.732 mo
371.51 363.9 371.893 363.197 372.405 363.197 cv
372.917 363.197 373.3 363.9 373.3 364.732 cv
373.3 365.563 372.917 366.202 372.405 366.202 cv
371.893 366.202 371.51 365.563 371.51 364.732 cv
cp
@
355.844 365.307 mo
355.844 366.842 li
362.494 370.167 li
362.494 368.952 li
355.844 365.307 li
0 0 0 0 cmyk
ef
.239787 lw
355.844 365.307 mo
355.844 366.842 li
362.494 370.167 li
362.494 368.952 li
355.844 365.307 li
cp
.750179 .679652 .670191 .901488 cmyk
@
28.3908 47.6374 mo
34.5933 51.0264 li
35.6803 48.9802 37.5346 47.4456 39.7087 46.7422 cv
33.5062 43.6729 li
31.2682 44.1205 29.3499 45.5912 28.3908 47.6374 cv
cp
34.913 41.371 mo
41.1155 44.5042 li
44.5684 42.7777 li
38.302 39.7085 li
34.913 41.371 li
cp
47.1261 43.0974 mo
40.8597 39.9642 li
39.7087 40.4118 li
44.5684 42.7777 li
44.5684 44.3763 li
47.1261 43.0974 li
cp
34.5933 52.1774 mo
47.1261 45.9109 li
47.1261 43.0974 li
39.7087 46.7422 li
37.5346 47.4456 35.6803 48.9802 34.5933 51.0264 cv
34.5933 52.1774 li
0 .990631 1 .000396735 cmyk
ef
28.3908 47.6374 mo
34.5933 51.0264 li
35.6803 48.9802 37.5346 47.4456 39.7087 46.7422 cv
33.5062 43.6729 li
31.2682 44.1205 29.3499 45.5912 28.3908 47.6374 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
34.913 41.3709 mo
41.1155 44.5042 li
44.5684 42.7777 li
38.3019 39.7084 li
34.913 41.3709 li
cp
@
47.1261 43.0974 mo
40.8597 39.9642 li
39.7087 40.4118 li
44.5684 42.7777 li
44.5684 44.3763 li
47.1261 43.0974 li
cp
@
34.5933 52.1774 mo
47.1261 45.9109 li
47.1261 43.0974 li
39.7087 46.7422 li
37.5346 47.4456 35.6803 48.9802 34.5933 51.0264 cv
34.5933 52.1774 li
cp
@
33.5062 43.6729 mo
34.913 41.371 li
41.1155 44.5042 li
39.7087 46.7422 li
33.5062 43.6729 li
cp
41.1155 44.5042 mo
44.5684 42.7777 li
46.2309 43.4811 li
39.7087 46.7422 li
41.1155 44.5042 li
.895628 .7673 0 0 cmyk
ef
33.5062 43.6729 mo
34.913 41.371 li
41.1155 44.5042 li
39.7087 46.7422 li
33.5062 43.6729 li
cp
.750179 .679652 .670191 .901488 cmyk
@
41.1155 44.5042 mo
44.5684 42.7777 li
46.2309 43.4811 li
39.7087 46.7422 li
41.1155 44.5042 li
cp
@
36.5755 50.7067 mo
36.5755 49.9394 36.9592 49.2999 37.4707 49.2999 cv
37.9183 49.2999 38.302 49.9394 38.302 50.7067 cv
38.302 51.5379 37.9183 52.1774 37.4707 52.1774 cv
36.9592 52.1774 36.5755 51.5379 36.5755 50.7067 cv
cp
43.0977 47.0619 mo
43.0977 46.2946 43.4814 45.6552 43.9929 45.6552 cv
44.4405 45.6552 44.8242 46.2946 44.8242 47.0619 cv
44.8242 47.8292 44.4405 48.4687 43.9929 48.4687 cv
43.4814 48.4687 43.0977 47.8292 43.0977 47.0619 cv
0 0 0 0 cmyk
ef
.720426 lw
36.5755 50.7067 mo
36.5755 49.9394 36.9592 49.2999 37.4707 49.2999 cv
37.9183 49.2999 38.302 49.9394 38.302 50.7067 cv
38.302 51.5379 37.9183 52.1774 37.4707 52.1774 cv
36.9592 52.1774 36.5755 51.5379 36.5755 50.7067 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
43.0977 47.0619 mo
43.0977 46.2946 43.4814 45.6552 43.9929 45.6552 cv
44.4405 45.6552 44.8242 46.2946 44.8242 47.0619 cv
44.8242 47.8292 44.4405 48.4687 43.9929 48.4687 cv
43.4814 48.4687 43.0977 47.8292 43.0977 47.0619 cv
cp
@
28.3908 47.6374 mo
28.3908 49.0442 li
34.5933 52.1774 li
34.5933 51.0264 li
28.3908 47.6374 li
0 0 0 0 cmyk
ef
.239787 lw
28.3908 47.6374 mo
28.3908 49.0442 li
34.5933 52.1774 li
34.5933 51.0264 li
28.3908 47.6374 li
cp
.750179 .679652 .670191 .901488 cmyk
@
381.805 48.5965 mo
371.126 53.9038 li
362.366 49.5557 li
373.044 44.1844 li
381.805 48.5965 li
cp
374.068 42.0104 mo
363.389 47.3816 li
357.506 44.4402 li
368.185 39.133 li
374.068 42.0104 li
cp
349.769 43.2253 mo
360.448 37.918 li
365.819 40.0921 li
357.506 44.4402 li
355.588 46.1667 li
349.769 43.2253 li
cp
371.126 58.7635 mo
349.769 48.085 li
349.769 43.2253 li
371.126 53.9038 li
371.126 58.7635 li
.789425 .534295 0 0 cmyk
ef
381.805 48.5965 mo
371.126 53.9038 li
362.366 49.5557 li
373.044 44.1844 li
381.805 48.5965 li
cp
.750179 .679652 .670191 .901488 cmyk
@
374.068 42.0104 mo
363.389 47.3816 li
357.506 44.4402 li
368.185 39.1329 li
374.068 42.0104 li
cp
@
349.769 43.2253 mo
360.448 37.918 li
365.819 40.0921 li
357.506 44.4402 li
355.588 46.1667 li
349.769 43.2253 li
cp
@
371.126 58.7635 mo
349.769 48.085 li
349.769 43.2253 li
371.126 53.9038 li
371.126 58.7635 li
cp
@
376.497 45.9109 mo
374.068 42.0104 li
363.389 47.3816 li
365.819 51.2182 li
376.497 45.9109 li
cp
363.389 47.3816 mo
357.506 44.4402 li
355.588 46.1667 li
365.819 51.2182 li
363.389 47.3816 li
.789425 .534295 0 0 cmyk
ef
376.497 45.9109 mo
374.068 42.0104 li
363.389 47.3816 li
365.819 51.2182 li
376.497 45.9109 li
cp
.750179 .679652 .670191 .901488 cmyk
@
363.389 47.3816 mo
357.506 44.4402 li
355.588 46.1667 li
365.819 51.2182 li
363.389 47.3816 li
cp
@
366.267 55.8221 mo
366.267 54.5433 365.627 53.4562 364.796 53.4562 cv
364.028 53.4562 363.389 54.5433 363.389 55.8221 cv
363.389 57.1649 364.028 58.252 364.796 58.252 cv
365.627 58.252 366.267 57.1649 366.267 55.8221 cv
cp
355.076 49.5557 mo
355.076 48.2129 354.437 47.1259 353.67 47.1259 cv
352.838 47.1259 352.199 48.2129 352.199 49.5557 cv
352.199 50.8985 352.838 51.9855 353.67 51.9855 cv
354.437 51.9855 355.076 50.8985 355.076 49.5557 cv
.789425 .534295 0 0 cmyk
ef
.720426 lw
366.267 55.8221 mo
366.267 54.5433 365.627 53.4562 364.796 53.4562 cv
364.028 53.4562 363.389 54.5433 363.389 55.8221 cv
363.389 57.1649 364.028 58.252 364.796 58.252 cv
365.627 58.252 366.267 57.1649 366.267 55.8221 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
355.076 49.5557 mo
355.076 48.2129 354.437 47.1259 353.67 47.1259 cv
352.838 47.1259 352.199 48.2129 352.199 49.5557 cv
352.199 50.8985 352.838 51.9856 353.67 51.9856 cv
354.437 51.9856 355.076 50.8985 355.076 49.5557 cv
cp
@
381.805 48.5965 mo
381.805 53.4562 li
371.126 58.7635 li
371.126 53.9038 li
381.805 48.5965 li
.789425 .534295 0 0 cmyk
ef
.239787 lw
381.805 48.5965 mo
381.805 53.4562 li
371.126 58.7635 li
371.126 53.9038 li
381.805 48.5965 li
cp
.750179 .679652 .670191 .901488 cmyk
@
375.474 54.8629 mo
372.597 56.3336 li
372.597 54.8629 li
375.474 53.4562 li
375.474 54.8629 li
.789425 .534295 0 0 cmyk
ef
380.846 51.9855 mo
377.904 53.4562 li
377.904 51.9855 li
380.846 50.5149 li
380.846 51.9855 li
ef
70.913 45.2076 mo
64.6465 48.3408 li
59.595 45.7831 li
65.7975 42.6498 li
70.913 45.2076 li
cp
66.373 41.371 mo
60.1066 44.5042 li
56.7176 42.7777 li
62.984 39.7085 li
66.373 41.371 li
cp
52.1776 42.0743 mo
58.4441 38.9411 li
61.5773 40.22 li
56.7176 42.7777 li
55.6306 43.8008 li
52.1776 42.0743 li
cp
64.6465 51.1543 mo
52.1776 44.9518 li
52.1776 42.0743 li
64.6465 48.3408 li
64.6465 51.1543 li
ef
70.913 45.2076 mo
64.6465 48.3408 li
59.595 45.7831 li
65.7975 42.6498 li
70.913 45.2076 li
cp
.750179 .679652 .670191 .901488 cmyk
@
66.373 41.3709 mo
60.1066 44.5042 li
56.7176 42.7777 li
62.984 39.7084 li
66.373 41.3709 li
cp
@
52.1776 42.0743 mo
58.4441 38.9411 li
61.5773 40.22 li
56.7176 42.7777 li
55.6306 43.8008 li
52.1776 42.0743 li
cp
@
64.6466 51.1543 mo
52.1776 44.9518 li
52.1776 42.0743 li
64.6466 48.3408 li
64.6466 51.1543 li
cp
@
67.7798 43.6729 mo
66.373 41.371 li
60.1066 44.5042 li
61.5773 46.7422 li
67.7798 43.6729 li
cp
60.1066 44.5042 mo
56.7176 42.7777 li
55.6306 43.8008 li
61.5773 46.7422 li
60.1066 44.5042 li
.789425 .534295 0 0 cmyk
ef
67.7798 43.6729 mo
66.373 41.371 li
60.1066 44.5042 li
61.5773 46.7422 li
67.7798 43.6729 li
cp
.750179 .679652 .670191 .901488 cmyk
@
60.1066 44.5042 mo
56.7176 42.7777 li
55.6306 43.8008 li
61.5773 46.7422 li
60.1066 44.5042 li
cp
@
61.8331 49.4918 mo
61.8331 48.6605 61.4494 48.0211 61.0018 48.0211 cv
60.4902 48.0211 60.1066 48.6605 60.1066 49.4918 cv
60.1066 50.2591 60.4902 50.8985 61.0018 50.8985 cv
61.4494 50.8985 61.8331 50.2591 61.8331 49.4918 cv
cp
55.3108 45.7831 mo
55.3108 45.0157 54.9272 44.3763 54.4796 44.3763 cv
53.968 44.3763 53.6483 45.0157 53.6483 45.7831 cv
53.6483 46.5504 53.968 47.1898 54.4796 47.1898 cv
54.9272 47.1898 55.3108 46.5504 55.3108 45.7831 cv
.789425 .534295 0 0 cmyk
ef
.720426 lw
61.8331 49.4918 mo
61.8331 48.6605 61.4494 48.0211 61.0018 48.0211 cv
60.4902 48.0211 60.1066 48.6605 60.1066 49.4918 cv
60.1066 50.2591 60.4902 50.8985 61.0018 50.8985 cv
61.4494 50.8985 61.8331 50.2591 61.8331 49.4918 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
55.3108 45.7831 mo
55.3108 45.0157 54.9272 44.3763 54.4796 44.3763 cv
53.968 44.3763 53.6483 45.0157 53.6483 45.7831 cv
53.6483 46.5504 53.968 47.1898 54.4796 47.1898 cv
54.9272 47.1898 55.3108 46.5504 55.3108 45.7831 cv
cp
@
70.913 45.2076 mo
70.913 48.0211 li
64.6465 51.1543 li
64.6465 48.3408 li
70.913 45.2076 li
.789425 .534295 0 0 cmyk
ef
.239787 lw
70.913 45.2076 mo
70.913 48.0211 li
64.6465 51.1543 li
64.6465 48.3408 li
70.913 45.2076 li
cp
.750179 .679652 .670191 .901488 cmyk
@
67.2043 48.9163 mo
65.5417 49.7475 li
65.5417 48.9163 li
67.2043 48.0211 li
67.2043 48.9163 li
.789425 .534295 0 0 cmyk
ef
70.3375 47.1898 mo
68.675 48.0211 li
68.675 47.1898 li
70.3375 46.3586 li
70.3375 47.1898 li
ef
233.393 183.581 mo
227.126 186.714 li
222.011 184.156 li
228.277 181.023 li
233.393 183.581 li
cp
228.853 179.744 mo
222.586 182.877 li
219.197 181.151 li
225.464 178.018 li
228.853 179.744 li
cp
214.657 180.447 mo
220.924 177.314 li
223.993 178.593 li
219.197 181.151 li
218.046 182.174 li
214.657 180.447 li
cp
227.126 189.527 mo
214.657 183.261 li
214.657 180.447 li
227.126 186.714 li
227.126 189.527 li
ef
233.393 183.581 mo
227.126 186.714 li
222.011 184.156 li
228.277 181.023 li
233.393 183.581 li
cp
.750179 .679652 .670191 .901488 cmyk
@
228.853 179.744 mo
222.586 182.877 li
219.197 181.151 li
225.464 178.018 li
228.853 179.744 li
cp
@
214.657 180.447 mo
220.924 177.314 li
223.993 178.593 li
219.197 181.151 li
218.046 182.174 li
214.657 180.447 li
cp
@
227.126 189.527 mo
214.657 183.261 li
214.657 180.447 li
227.126 186.714 li
227.126 189.527 li
cp
@
230.259 181.982 mo
228.853 179.744 li
222.586 182.877 li
223.993 185.115 li
230.259 181.982 li
cp
222.586 182.877 mo
219.197 181.151 li
218.046 182.174 li
223.993 185.115 li
222.586 182.877 li
.789425 .534295 0 0 cmyk
ef
230.259 181.982 mo
228.853 179.744 li
222.586 182.877 li
223.993 185.115 li
230.259 181.982 li
cp
.750179 .679652 .670191 .901488 cmyk
@
222.586 182.877 mo
219.197 181.151 li
218.046 182.174 li
223.993 185.115 li
222.586 182.877 li
cp
@
224.313 187.801 mo
224.313 187.034 223.929 186.394 223.481 186.394 cv
222.97 186.394 222.586 187.034 222.586 187.801 cv
222.586 188.632 222.97 189.272 223.481 189.272 cv
223.929 189.272 224.313 188.632 224.313 187.801 cv
cp
217.79 184.156 mo
217.79 183.325 217.407 182.749 216.959 182.749 cv
216.448 182.749 216.064 183.325 216.064 184.156 cv
216.064 184.923 216.448 185.563 216.959 185.563 cv
217.407 185.563 217.79 184.923 217.79 184.156 cv
.789425 .534295 0 0 cmyk
ef
.720426 lw
224.313 187.801 mo
224.313 187.034 223.929 186.394 223.481 186.394 cv
222.97 186.394 222.586 187.034 222.586 187.801 cv
222.586 188.632 222.97 189.272 223.481 189.272 cv
223.929 189.272 224.313 188.632 224.313 187.801 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
217.79 184.156 mo
217.79 183.325 217.407 182.749 216.959 182.749 cv
216.448 182.749 216.064 183.325 216.064 184.156 cv
216.064 184.923 216.448 185.563 216.959 185.563 cv
217.407 185.563 217.79 184.923 217.79 184.156 cv
cp
@
233.393 183.581 mo
233.393 186.394 li
227.126 189.527 li
227.126 186.714 li
233.393 183.581 li
.789425 .534295 0 0 cmyk
ef
.239787 lw
233.393 183.581 mo
233.393 186.394 li
227.126 189.527 li
227.126 186.714 li
233.393 183.581 li
cp
.750179 .679652 .670191 .901488 cmyk
@
229.684 187.289 mo
228.021 188.121 li
228.021 187.289 li
229.684 186.394 li
229.684 187.289 li
.789425 .534295 0 0 cmyk
ef
232.817 185.563 mo
231.091 186.394 li
231.091 185.563 li
232.817 184.732 li
232.817 185.563 li
ef
375.155 334.998 mo
368.888 338.067 li
363.773 335.574 li
370.039 332.44 li
375.155 334.998 li
cp
370.615 331.161 mo
364.348 334.295 li
360.959 332.568 li
367.226 329.435 li
370.615 331.161 li
cp
356.419 331.865 mo
362.686 328.732 li
365.819 330.01 li
360.959 332.568 li
359.808 333.591 li
356.419 331.865 li
cp
368.888 340.945 mo
356.419 334.678 li
356.419 331.865 li
368.888 338.067 li
368.888 340.945 li
ef
375.155 334.998 mo
368.888 338.067 li
363.773 335.574 li
370.039 332.44 li
375.155 334.998 li
cp
.750179 .679652 .670191 .901488 cmyk
@
370.615 331.161 mo
364.348 334.295 li
360.959 332.568 li
367.226 329.435 li
370.615 331.161 li
cp
@
356.419 331.865 mo
362.686 328.732 li
365.819 330.01 li
360.959 332.568 li
359.808 333.591 li
356.419 331.865 li
cp
@
368.888 340.945 mo
356.419 334.678 li
356.419 331.865 li
368.888 338.067 li
368.888 340.945 li
cp
@
372.021 333.399 mo
370.615 331.161 li
364.348 334.295 li
365.819 336.533 li
372.021 333.399 li
cp
364.348 334.295 mo
360.959 332.568 li
359.808 333.591 li
365.819 336.533 li
364.348 334.295 li
.789425 .534295 0 0 cmyk
ef
372.021 333.399 mo
370.615 331.161 li
364.348 334.295 li
365.819 336.533 li
372.021 333.399 li
cp
.750179 .679652 .670191 .901488 cmyk
@
364.348 334.295 mo
360.959 332.568 li
359.808 333.591 li
365.819 336.533 li
364.348 334.295 li
cp
@
366.075 339.218 mo
366.075 338.451 365.691 337.812 365.243 337.812 cv
364.732 337.812 364.348 338.451 364.348 339.218 cv
364.348 339.986 364.732 340.625 365.243 340.625 cv
365.691 340.625 366.075 339.986 366.075 339.218 cv
cp
359.552 335.574 mo
359.552 334.742 359.169 334.103 358.721 334.103 cv
358.21 334.103 357.826 334.742 357.826 335.574 cv
357.826 336.341 358.21 336.98 358.721 336.98 cv
359.169 336.98 359.552 336.341 359.552 335.574 cv
.789425 .534295 0 0 cmyk
ef
.720426 lw
366.075 339.218 mo
366.075 338.451 365.691 337.812 365.243 337.812 cv
364.732 337.812 364.348 338.451 364.348 339.218 cv
364.348 339.986 364.732 340.625 365.243 340.625 cv
365.691 340.625 366.075 339.986 366.075 339.218 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
359.552 335.573 mo
359.552 334.742 359.169 334.103 358.721 334.103 cv
358.21 334.103 357.826 334.742 357.826 335.573 cv
357.826 336.341 358.21 336.98 358.721 336.98 cv
359.169 336.98 359.552 336.341 359.552 335.573 cv
cp
@
375.155 334.998 mo
375.155 337.812 li
368.888 340.945 li
368.888 338.067 li
375.155 334.998 li
.789425 .534295 0 0 cmyk
ef
.239787 lw
375.155 334.998 mo
375.155 337.812 li
368.888 340.945 li
368.888 338.067 li
375.155 334.998 li
cp
.750179 .679652 .670191 .901488 cmyk
@
371.446 338.643 mo
369.783 339.538 li
369.783 338.643 li
371.446 337.812 li
371.446 338.643 li
.789425 .534295 0 0 cmyk
ef
374.579 336.98 mo
372.853 337.812 li
372.853 336.98 li
374.579 336.085 li
374.579 336.98 li
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: ZQYXUN+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/ZQYXUN+SimSun-GBK-EUC-H 4 GetGlyphDirectory
22 <001C60D8A8C9B7A73DB691F1F492A12A1AD970B57BB40C7B83E4ADDE6D04
415C8D07338B694E1B6536A65BBC322B80C5564E2B0096FF26D0C221A1918414
063D2A5D19E693094A776EABE510FA0F4CDBD4E5EF437243F96A1361AB4C3EF9
738520EB9A39239487A0AAD2A4BE77FCBBA53CE286A931AFD5C53C56CCAB2B7E
22EC2725AE5D53EE5C0805AD435450E1C909201A1B5A895A0C5B7C224EB7BD29
024C444FDBC67C47741571559797CB4724D0E4774F21A1DCC042166E7B9109B8
678C9E52EBF01CAA709A576B29CEEBD17C87A5A378CECECA1C70D6825A283DBC
4149ED90762AFC90C00311F03062B97501F450E1A1943A8CBD85B5873802E865
204094F69510145770CB02B8757CA4E4> |
23 <001C60D8A8C9B7A73DB9DE1B8EE62A1035D520FDDE7347DE754DA40CA921
0161A14706ED21E0C20738AB3E04296AE73BB643797B2B2E4C68171E1F718335
307B410848E0962E661F9269B126BBF27D221C91C6E5ABDBA29A518469343FB4
15> |
37 <001C60D8A8C9B7A73DB9BF769AE369657D1B0F7247A75E7E0F995EE1EF75
369258FF953DAE669D70FBC5C1F916F62E5AE51933C872290F79AC44408C1C4F
A774AD63AE7B68F0AD7622D336B55A63099CB9C6DBF0CC88A3A91BB3292ED5F2
720DB928FAE07B6238FBBDB3558014DFC6973D22E6D396639025FCC2580E08DA
F107720367B5D1901A18A3046201140F46EAF9142F13FBB4AA903B5AD0F80B17
91875BFFA735E041CD6EB9BC92C58F9C717DCFE9BA955B9F38C53E35796C3087
677D7D1FBF1BF1DD24370ABA3460628C06B430774955E848C0E59690E1> |
20 <001C60D8A8C9B7A73DB9873C4F791E79ACF81EB19D63BA2E94321160B0EE
CE1160759126177329F8F00C47A8A8F4A33D8FBA50DC1553DA219B007F3C368E
FE0E3D89022F9962E4AED1DF1DE74F2DB52F8805EE1738AD59A4DE7E4CBB52EB
00> |
!
end
end end
%ADOEndSubsetFont
/ZQYXUN+SimSun-GBK-EUC-H-Identity-H findfont [18.032 0 0 -18.032 0 0 ]msf
190.87 175.204 mo
(\000$\000\026)
[9.01601 0 ]xsh
34.9116 19.2449 mo
(\000$\000\027)
[9.016 0 ]xsh
338.318 339.674 mo
(\000%\000\024)
[9.01599 0 ]xsh
234.85 172.337 mo
(\000%\000\025)
[8.95299 0 ]xsh
46.2898 75.9736 mo
(\000%\000\026)
[9.016 0 ]xsh
6.83582 470.063 mo
(\000$)sh
381.09 33.4542 mo
(\000%)sh
365.819 372.533 mo
353.286 372.533 343.119 362.366 343.119 349.833 cv
343.119 337.364 353.286 327.197 365.819 327.197 cv
378.288 327.197 388.455 337.364 388.455 349.833 cv
388.455 362.366 378.288 372.533 365.819 372.533 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
212.675 203.851 mo
200.142 203.851 189.975 193.684 189.975 181.151 cv
189.975 168.618 200.142 158.451 212.675 158.451 cv
225.208 158.451 235.375 168.618 235.375 181.151 cv
235.375 193.684 225.208 203.851 212.675 203.851 cv
cp
@
221.179 223.673 mo
208.647 223.673 198.48 213.506 198.48 201.037 cv
198.48 188.504 208.647 178.337 221.179 178.337 cv
233.712 178.337 243.879 188.504 243.879 201.037 cv
243.879 213.506 233.712 223.673 221.179 223.673 cv
cp
@
48.2132 67.7795 mo
35.6803 67.7795 25.5773 57.6125 25.5773 45.0797 cv
25.5773 32.5468 35.6803 22.3799 48.2132 22.3799 cv
60.746 22.3799 70.913 32.5468 70.913 45.0797 cv
70.913 57.6125 60.746 67.7795 48.2132 67.7795 cv
cp
@
2.16021 lw
[41.0494 10.8021 15.1236 10.8021 15.1236 10.8021 ] 0 dsh
17.0728 196.753 mo
17.0728 443.446 li
17.0728 328.284 li
0 .990631 1 .000396735 cmyk
@
12.341 329.435 mo
17.0728 320.099 li
21.7407 329.435 li
12.341 329.435 li
ef
213.442 216.831 mo
213.442 436.22 li
213.442 334.742 li
@
208.774 335.893 mo
213.442 326.558 li
218.11 335.893 li
208.774 335.893 li
ef
[41.0494 10.8021 15.1236 10.8021 ] 0 dsh
215.488 451.95 mo
25.5773 451.95 li
112.348 451.95 li
@
111.197 447.282 mo
120.533 451.95 li
111.197 456.618 li
111.197 447.282 li
ef
[41.0494 10.8021 15.1236 10.8021 15.1236 10.8021 ] 0 dsh
365.819 451.95 mo
232.497 451.95 li
290.941 451.95 li
@
289.79 447.282 mo
299.126 451.95 li
289.79 456.618 li
289.79 447.282 li
ef
378.799 372.533 mo
378.799 447.858 li
378.799 418.38 li
@
374.132 419.531 mo
378.799 410.195 li
383.467 419.531 li
374.132 419.531 li
ef
17.0728 60.6818 mo
17.0728 180.831 li
17.0728 128.909 li
@
12.341 130.124 mo
17.0728 120.724 li
21.7407 130.124 li
12.341 130.124 li
ef
34.0817 37.982 mo
11.3819 37.982 li
14.5151 37.982 li
@
13.3641 33.3141 mo
22.6998 37.982 li
13.3641 42.6498 li
13.3641 33.3141 li
ef
189.975 196.753 mo
34.0817 196.753 li
103.844 196.753 li
@
102.693 192.085 mo
112.028 196.753 li
102.693 201.421 li
102.693 192.085 li
ef
[15.1236 10.8021 ] 0 dsh
229.684 37.982 mo
357.251 37.982 li
301.684 37.982 li
.874174 .544579 0 .00030518 cmyk
@
302.835 42.6498 mo
293.499 37.982 li
302.835 33.3141 li
302.835 42.6498 li
ef
69.2505 37.982 mo
215.488 37.982 li
150.586 37.982 li
@
151.737 42.6498 mo
142.401 37.982 li
151.737 33.3141 li
151.737 42.6498 li
ef
215.488 168.426 mo
215.488 54.9909 li
215.488 103.524 li
@
220.22 102.309 mo
215.488 111.708 li
210.821 102.309 li
220.22 102.309 li
ef
235.375 181.151 mo
365.883 181.151 li
308.782 181.151 li
@
309.997 185.819 mo
300.597 181.151 li
309.997 176.483 li
309.997 185.819 li
ef
356.803 178.657 mo
356.803 69.1862 li
356.803 115.737 li
@
361.471 114.522 mo
356.803 123.922 li
352.071 114.522 li
361.471 114.522 li
ef
356.931 324.319 mo
355.844 188.248 li
356.355 248.099 li
@
361.023 246.884 mo
356.419 256.284 li
351.624 246.948 li
361.023 246.884 li
ef
470.814 181.151 mo
365.883 181.151 li
410.132 181.151 li
@
408.981 176.483 mo
418.316 181.151 li
408.981 185.819 li
408.981 176.483 li
ef
564.235 37.982 mo
371.446 37.982 li
459.688 37.982 li
@
458.473 33.3141 mo
467.872 37.982 li
458.473 42.6498 li
458.473 33.3141 li
ef
[41.0494 10.8021 15.1236 10.8021 15.1236 10.8021 ] 0 dsh
116.249 335.701 mo
116.249 378.224 li
116.249 365.115 li
0 .990631 1 .000396735 cmyk
@
111.581 366.33 mo
116.249 356.931 li
120.98 366.33 li
111.581 366.33 li
ef
102.053 364.156 mo
108.064 364.156 li
108.064 349.769 li
102.053 349.769 li
cp
0 0 0 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
/ZQYXUN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0213 0 0 ]msf
102.053 360.511 mo
(\000$)sh
[15.1236 10.8021 ] 0 dsh
138.949 335.701 mo
138.949 378.224 li
138.949 365.115 li
.874174 .544579 0 .00030518 cmyk
@
134.281 366.33 mo
138.949 356.931 li
143.616 366.33 li
134.281 366.33 li
ef
124.753 364.156 mo
130.764 364.156 li
130.764 349.769 li
124.753 349.769 li
cp
0 0 0 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
/ZQYXUN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0213 0 0 ]msf
124.753 360.511 mo
(\000%)sh
4.5016 lw
0 lc
0 lj
2 ml
[] 0 dsh
90.7354 379.63 mo
90.7354 334.295 li
.750179 .679652 .670191 .901488 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: ZQYXUN+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/ZQYXUN+SimSun-GBK-EUC-H 4 GetGlyphDirectory
53 <001C60D8A8C9B7A73DB6A73AE7F79D269BC5F1C750E476EB45A442457064
AC92835C47807DC55E6B45878884B5263F05895D8D2352ADD99F703138B8CFEE
6DCD8E13FC7C982219BDF3501033EBF5250FC2EB5A98D54ECD7D491ADFE17D7D
67DD1116A98D73EDCBC00AFA91276C254D57D1C516154F074CC0A257F325AA20
153AA07B1324E21080D3A45D8C734E6F6ABF53095DDC95E0FFE752944B1E8AD7
37B8EF1690DBD6F8D6B7F29F6AA25F9511A98C442C8D3919B14E30009F52CFFC
3E860F41> |
82 <001C60D8A8C9B7A73DB69981D0C259376C8A5DD6859FA4C644174BA1BD93
78F08BC6C5746C8458A0F5EDE6F68F6FE26D9C5EB4C467C31A5FE9E90E9C2A36
375CB86A13DDC85D1181B4F95BD95E297453C2C6FDF82458BD6B7FC4C12762A2
F00ECB6B5D5B25661F7C0083F60573172BA4A0B97A5807D9A9EE9E0EA705666F
4A2711E064C01F> |
68 <001C60D8A8C9B7A73DB98653E05A9FC5B5EAD8DF8918156B7D8947B72958
6A5D71329F6C61A9A77AF57C287F000D704E2B1B8CE249B18DAE67C644BB1230
47F50A6EBCD98C07AA66C4DD0A76B159CD29A711636C3E8E96322D91698FC417
EE3AF0100BFDDAD67B2B21BC41C61402F09AAFDEE7C5AD30CCB232A8E6E155DC
86AE132158E832A6F89E6610BEA8A0F39564C0D8550E916722019256CE98C6F8
5F19B9209778C83C794FC8FCC2A636A7723F212BA81A84D9872C4C2FD1780D4C
0FEF29C2CA6714F970CE098037D79A9F77359866B81A5DE84625B772E4DD2669
7EBD5449FC251873E5600E23E1D84B36167C98937F9631E4A9D2B4C07FC06858
BF43> |
71 <001C60D8A8C9B7A73DB9DE1BCDD5A807EE39F8633609A4C4F16F008DC407
3956B2C1B613960FF999659DC8B51CF2AF3898B79A73796D4AB8F60B4FFFB8C6
5DA62D8C6465F03752C32EA337C501E07BCFBE25277D880FFFCBCCBD2DCBEA7D
49F89E2FC8D0F3091ABAA3FE7CD0F6BF51D014897054208A250549C4A7BAFB58
C317A7C24E6596ABBB30409DB93B5CAA7D0EB99024D96D46DD14CDF99ED1D25E
FB7C84EF910636F16E0DA5E7D5FC5E9E9EB1C73F45CB1C28E243DC84EDAB8A20
A2BC5C3C7BC51B21903D7DFF4A4256FE25EBC7C7FA> |
!
end
end end
%ADOEndSubsetFont
/ZQYXUN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0213 0 0 ]msf
58.8916 353.413 mo
(\0005\000R\000D\000G)
[6.01065 6.01065 5.95049 0 ]xsh
.239787 lw
1 lc
1 lj
10 ml
36.8952 402.33 mo
206.984 402.33 li
206.984 201.037 li
36.8952 201.037 li
cp
.750179 .679652 .670191 .901488 cmyk
@
gsave
482.451 188.376 mo
476.249 191.51 li
471.133 188.952 li
477.336 185.819 li
482.451 188.376 li
cp
477.911 184.54 mo
471.709 187.673 li
468.256 186.01 li
474.522 182.877 li
477.911 184.54 li
cp
463.716 185.243 mo
469.982 182.174 li
473.116 183.453 li
468.256 186.01 li
467.169 186.97 li
463.716 185.243 li
cp
476.249 194.323 mo
463.716 188.121 li
463.716 185.243 li
476.249 191.51 li
476.249 194.323 li
eclp
463.716 182.11 mo
467.808 182.11 li
467.808 186.202 li
463.716 186.202 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 458.122 291.978 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
467.808 182.11 mo
471.901 182.11 li
471.901 186.202 li
467.808 186.202 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 462.214 291.978 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
471.901 182.11 mo
475.993 182.11 li
475.993 186.202 li
471.901 186.202 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 466.307 291.978 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
475.993 182.11 mo
480.085 182.11 li
480.085 186.202 li
475.993 186.202 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 470.399 291.978 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
480.085 182.11 mo
484.178 182.11 li
484.178 186.202 li
480.085 186.202 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 474.491 291.978 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
463.716 186.202 mo
467.808 186.202 li
467.808 190.295 li
463.716 190.295 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 458.122 287.885 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
467.808 186.202 mo
471.901 186.202 li
471.901 190.295 li
467.808 190.295 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 462.214 287.885 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
471.901 186.202 mo
475.993 186.202 li
475.993 190.295 li
471.901 190.295 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 466.307 287.885 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
475.993 186.202 mo
480.085 186.202 li
480.085 190.295 li
475.993 190.295 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 470.399 287.885 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
480.085 186.202 mo
484.178 186.202 li
484.178 190.295 li
480.085 190.295 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 474.491 287.885 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
463.716 190.295 mo
467.808 190.295 li
467.808 194.387 li
463.716 194.387 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 458.122 283.793 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
467.808 190.295 mo
471.901 190.295 li
471.901 194.387 li
467.808 194.387 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 462.214 283.793 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
471.901 190.295 mo
475.993 190.295 li
475.993 194.387 li
471.901 194.387 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 466.307 283.793 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
475.993 190.295 mo
480.085 190.295 li
480.085 194.387 li
475.993 194.387 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 470.399 283.793 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
480.085 190.295 mo
484.178 190.295 li
484.178 194.387 li
480.085 194.387 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 474.491 283.793 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
0 lc
[.239787 .960213 ] 0 dsh
482.451 188.376 mo
476.249 191.51 li
471.133 188.952 li
477.336 185.819 li
482.451 188.376 li
cp
@
477.911 184.54 mo
471.709 187.673 li
468.256 186.01 li
474.522 182.877 li
477.911 184.54 li
cp
@
463.716 185.243 mo
469.982 182.174 li
473.116 183.453 li
468.256 186.01 li
467.169 186.97 li
463.716 185.243 li
cp
@
476.249 194.323 mo
463.716 188.121 li
463.716 185.243 li
476.249 191.51 li
476.249 194.323 li
cp
@
gsave
479.318 186.842 mo
477.911 184.54 li
471.709 187.673 li
473.116 189.975 li
479.318 186.842 li
cp
471.709 187.673 mo
468.256 186.01 li
467.169 186.97 li
473.116 189.975 li
471.709 187.673 li
eclp
467.105 184.476 mo
471.197 184.476 li
471.197 188.568 li
467.105 188.568 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 461.511 289.612 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+t?SmLko&2U7tXfLko&2.OnFuLko&2U7tXfLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
471.197 184.476 mo
475.29 184.476 li
475.29 188.568 li
471.197 188.568 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 465.603 289.612 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+t?SmLko&2U7tXfLko&2.OnFuLko&2U7tXfLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
475.29 184.476 mo
479.382 184.476 li
479.382 188.568 li
475.29 188.568 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 469.696 289.612 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+t?SmLko&2U7tXfLko&2.OnFuLko&2U7tXfLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
467.105 188.568 mo
471.197 188.568 li
471.197 192.661 li
467.105 192.661 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 461.511 285.52 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+t?SmLko&2U7tXfLko&2.OnFuLko&2U7tXfLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
471.197 188.568 mo
475.29 188.568 li
475.29 192.661 li
471.197 192.661 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 465.603 285.52 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+t?SmLko&2U7tXfLko&2.OnFuLko&2U7tXfLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
475.29 188.568 mo
479.382 188.568 li
479.382 192.661 li
475.29 192.661 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 469.696 285.52 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+t?SmLko&2U7tXfLko&2.OnFuLko&2U7tXfLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
479.318 186.842 mo
477.911 184.54 li
471.709 187.673 li
473.116 189.975 li
479.318 186.842 li
cp
@
471.709 187.673 mo
468.256 186.01 li
467.169 186.97 li
473.116 189.975 li
471.709 187.673 li
cp
@
gsave
473.371 192.661 mo
473.371 191.893 472.988 191.254 472.54 191.254 cv
472.092 191.254 471.709 191.893 471.709 192.661 cv
471.709 193.428 472.092 194.067 472.54 194.067 cv
472.988 194.067 473.371 193.428 473.371 192.661 cv
cp
466.849 188.952 mo
466.849 188.185 466.465 187.545 466.018 187.545 cv
465.57 187.545 465.187 188.185 465.187 188.952 cv
465.187 189.719 465.57 190.359 466.018 190.359 cv
466.465 190.359 466.849 189.719 466.849 188.952 cv
eclp
gsave
-19.183 -336.768 mo
615.133 -336.768 li
615.133 560.547 li
-19.183 560.547 li
cp
clp
465.123 187.481 mo
469.215 187.481 li
469.215 191.574 li
465.123 191.574 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 459.529 286.607 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6r^1d&J;%C77F5V&J;%C<)flt&J;%C77F5V&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
469.215 187.481 mo
473.307 187.481 li
473.307 191.574 li
469.215 191.574 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 463.621 286.607 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6r^1d&J;%C77F5V&J;%C<)flt&J;%C77F5V&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
473.307 187.481 mo
477.4 187.481 li
477.4 191.574 li
473.307 191.574 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 467.713 286.607 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6r^1d&J;%C77F5V&J;%C<)flt&J;%C77F5V&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
465.123 191.574 mo
469.215 191.574 li
469.215 195.666 li
465.123 195.666 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 459.529 282.514 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6r^1d&J;%C77F5V&J;%C<)flt&J;%C77F5V&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
469.215 191.574 mo
473.307 191.574 li
473.307 195.666 li
469.215 195.666 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 463.621 282.514 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6r^1d&J;%C77F5V&J;%C<)flt&J;%C77F5V&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
473.307 191.574 mo
477.4 191.574 li
477.4 195.666 li
473.307 195.666 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 467.713 282.514 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6r^1d&J;%C77F5V&J;%C<)flt&J;%C77F5V&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
grestore
472.988 192.277 mo
473.243 191.893 li
473.691 192.149 li
473.435 192.597 li
472.988 192.277 li
cp
472.092 192.98 mo
471.773 193.428 li
471.389 193.108 li
471.645 192.724 li
472.092 192.98 li
cp
466.465 188.632 mo
466.721 188.185 li
467.169 188.44 li
466.913 188.888 li
466.465 188.632 li
cp
465.57 189.335 mo
465.251 189.719 li
464.867 189.463 li
465.123 189.016 li
465.57 189.335 li
f
gsave
482.451 188.376 mo
482.451 191.254 li
476.249 194.323 li
476.249 191.51 li
482.451 188.376 li
eclp
476.185 188.312 mo
480.277 188.312 li
480.277 192.405 li
476.185 192.405 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 470.591 285.775 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lo=<R+sL#eMMbD6+sL#eW2N]r+sL#eMMbD6+sL#e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
480.277 188.312 mo
484.37 188.312 li
484.37 192.405 li
480.277 192.405 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 474.683 285.775 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lo=<R+sL#eMMbD6+sL#eW2N]r+sL#eMMbD6+sL#e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
476.185 192.405 mo
480.277 192.405 li
480.277 196.497 li
476.185 196.497 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 470.591 281.683 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lo=<R+sL#eMMbD6+sL#eW2N]r+sL#eMMbD6+sL#e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
480.277 192.405 mo
484.37 192.405 li
484.37 196.497 li
480.277 196.497 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 474.683 281.683 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lo=<R+sL#eMMbD6+sL#eW2N]r+sL#eMMbD6+sL#e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
482.451 188.376 mo
482.451 191.254 li
476.249 194.323 li
476.249 191.51 li
482.451 188.376 li
cp
@
gsave
478.806 192.085 mo
477.08 192.916 li
477.08 192.085 li
478.806 191.254 li
478.806 192.085 li
eclp
477.016 191.19 mo
481.108 191.19 li
481.108 195.282 li
477.016 195.282 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 471.422 282.898 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&Q,R.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
479.126 191.957 mo
478.806 192.277 li
478.423 191.957 li
478.806 191.573 li
479.126 191.957 li
cp
477.528 191.446 mo
478.039 191.573 li
477.911 192.085 li
477.4 191.957 li
477.528 191.446 li
f
gsave
481.876 190.359 mo
480.213 191.254 li
480.213 190.359 li
481.876 189.527 li
481.876 190.359 li
eclp
480.149 189.463 mo
484.242 189.463 li
484.242 193.556 li
480.149 193.556 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 474.555 284.624 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFuLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
482.259 190.231 mo
481.876 190.614 li
481.556 190.231 li
481.876 189.911 li
482.259 190.231 li
cp
480.661 189.719 mo
481.172 189.847 li
481.045 190.359 li
480.533 190.231 li
480.661 189.719 li
f
gsave
581.691 41.8186 mo
575.489 44.9518 li
570.373 42.3941 li
576.576 39.2609 li
581.691 41.8186 li
cp
577.151 37.982 mo
570.949 41.1152 li
567.496 39.3888 li
573.762 36.2556 li
577.151 37.982 li
cp
562.956 38.6854 mo
569.222 35.5522 li
572.355 36.8311 li
567.496 39.3888 li
566.409 40.4119 li
562.956 38.6854 li
cp
575.489 47.7653 mo
562.956 41.4989 li
562.956 38.6854 li
575.489 44.9518 li
575.489 47.7653 li
eclp
562.892 35.4882 mo
566.984 35.4882 li
566.984 39.5806 li
562.892 39.5806 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 557.298 438.599 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
566.984 35.4882 mo
571.076 35.4882 li
571.076 39.5806 li
566.984 39.5806 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 561.39 438.599 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
571.076 35.4882 mo
575.169 35.4882 li
575.169 39.5806 li
571.076 39.5806 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 565.482 438.599 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
575.169 35.4882 mo
579.261 35.4882 li
579.261 39.5806 li
575.169 39.5806 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 569.575 438.599 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
579.261 35.4882 mo
583.353 35.4882 li
583.353 39.5806 li
579.261 39.5806 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 573.667 438.599 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
562.892 39.5806 mo
566.984 39.5806 li
566.984 43.6729 li
562.892 43.6729 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 557.298 434.507 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
566.984 39.5806 mo
571.076 39.5806 li
571.076 43.6729 li
566.984 43.6729 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 561.39 434.507 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
571.076 39.5806 mo
575.169 39.5806 li
575.169 43.6729 li
571.076 43.6729 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 565.482 434.507 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
575.169 39.5806 mo
579.261 39.5806 li
579.261 43.6729 li
575.169 43.6729 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 569.575 434.507 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
579.261 39.5806 mo
583.353 39.5806 li
583.353 43.6729 li
579.261 43.6729 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 573.667 434.507 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
562.892 43.6729 mo
566.984 43.6729 li
566.984 47.7653 li
562.892 47.7653 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 557.298 430.415 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
566.984 43.6729 mo
571.076 43.6729 li
571.076 47.7653 li
566.984 47.7653 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 561.39 430.415 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
571.076 43.6729 mo
575.169 43.6729 li
575.169 47.7653 li
571.076 47.7653 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 565.482 430.415 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
575.169 43.6729 mo
579.261 43.6729 li
579.261 47.7653 li
575.169 47.7653 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 569.575 430.415 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
579.261 43.6729 mo
583.353 43.6729 li
583.353 47.7653 li
579.261 47.7653 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 573.667 430.415 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
562.892 47.7653 mo
566.984 47.7653 li
566.984 51.8577 li
562.892 51.8577 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 557.298 426.322 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
566.984 47.7653 mo
571.076 47.7653 li
571.076 51.8577 li
566.984 51.8577 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 561.39 426.322 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
571.076 47.7653 mo
575.169 47.7653 li
575.169 51.8577 li
571.076 51.8577 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 565.482 426.322 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
575.169 47.7653 mo
579.261 47.7653 li
579.261 51.8577 li
575.169 51.8577 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 569.575 426.322 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
579.261 47.7653 mo
583.353 47.7653 li
583.353 51.8577 li
579.261 51.8577 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 573.667 426.322 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
581.691 41.8186 mo
575.489 44.9518 li
570.373 42.3941 li
576.576 39.2609 li
581.691 41.8186 li
cp
@
577.151 37.982 mo
570.949 41.1152 li
567.496 39.3887 li
573.762 36.2555 li
577.151 37.982 li
cp
@
562.956 38.6854 mo
569.222 35.5522 li
572.355 36.831 li
567.496 39.3888 li
566.409 40.4118 li
562.956 38.6854 li
cp
@
575.489 47.7653 mo
562.956 41.4988 li
562.956 38.6853 li
575.489 44.9518 li
575.489 47.7653 li
cp
@
gsave
578.558 40.22 mo
577.151 37.982 li
570.949 41.1152 li
572.355 43.3533 li
578.558 40.22 li
cp
570.949 41.1152 mo
567.496 39.3888 li
566.409 40.4119 li
572.355 43.3533 li
570.949 41.1152 li
eclp
gsave
-19.183 -336.768 mo
615.133 -336.768 li
615.133 560.547 li
-19.183 560.547 li
cp
clp
566.345 37.918 mo
570.437 37.918 li
570.437 42.0104 li
566.345 42.0104 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 560.751 436.17 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~MMP84+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r+sL#e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
570.437 37.918 mo
574.529 37.918 li
574.529 42.0104 li
570.437 42.0104 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 564.843 436.17 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~MMP84+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r+sL#e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
574.529 37.918 mo
578.622 37.918 li
578.622 42.0104 li
574.529 42.0104 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 568.935 436.17 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~MMP84+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r+sL#e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
566.345 42.0104 mo
570.437 42.0104 li
570.437 46.1028 li
566.345 46.1028 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 560.751 432.077 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~MMP84+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r+sL#e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
570.437 42.0104 mo
574.529 42.0104 li
574.529 46.1028 li
570.437 46.1028 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 564.843 432.077 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~MMP84+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r+sL#e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
574.529 42.0104 mo
578.622 42.0104 li
578.622 46.1028 li
574.529 46.1028 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 568.935 432.077 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~MMP84+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r+sL#e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
grestore
578.558 40.22 mo
577.151 37.982 li
570.949 41.1152 li
572.355 43.3532 li
578.558 40.22 li
cp
@
570.949 41.1152 mo
567.496 39.3888 li
566.409 40.4118 li
572.355 43.3532 li
570.949 41.1152 li
cp
@
gsave
572.611 46.0389 mo
572.611 45.2715 572.227 44.6321 571.78 44.6321 cv
571.332 44.6321 570.949 45.2715 570.949 46.0389 cv
570.949 46.8701 571.332 47.4456 571.78 47.4456 cv
572.227 47.4456 572.611 46.8701 572.611 46.0389 cv
cp
566.089 42.3941 mo
566.089 41.5628 565.705 40.9874 565.258 40.9874 cv
564.81 40.9874 564.426 41.5628 564.426 42.3941 cv
564.426 43.1614 564.81 43.8008 565.258 43.8008 cv
565.705 43.8008 566.089 43.1614 566.089 42.3941 cv
eclp
564.362 40.9233 mo
568.455 40.9233 li
568.455 45.0157 li
564.362 45.0157 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 558.768 433.164 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~'bRIG6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
568.455 40.9233 mo
572.547 40.9233 li
572.547 45.0157 li
568.455 45.0157 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 562.861 433.164 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~'bRIG6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
572.547 40.9233 mo
576.639 40.9233 li
576.639 45.0157 li
572.547 45.0157 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 566.953 433.164 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~'bRIG6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
564.362 45.0157 mo
568.455 45.0157 li
568.455 49.1081 li
564.362 49.1081 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 558.768 429.072 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~'bRIG6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
568.455 45.0157 mo
572.547 45.0157 li
572.547 49.1081 li
568.455 49.1081 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 562.861 429.072 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~'bRIG6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
572.547 45.0157 mo
576.639 45.0157 li
576.639 49.1081 li
572.547 49.1081 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 566.953 429.072 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~'bRIG6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
572.227 45.7191 mo
572.483 45.2715 li
572.931 45.5273 li
572.675 45.9749 li
572.227 45.7191 li
cp
571.332 46.4225 mo
571.013 46.8061 li
570.629 46.5504 li
570.885 46.1028 li
571.332 46.4225 li
cp
565.705 42.0104 mo
565.961 41.6267 li
566.409 41.8825 li
566.153 42.2662 li
565.705 42.0104 li
cp
564.81 42.7138 mo
564.49 43.1614 li
564.107 42.8416 li
564.362 42.458 li
564.81 42.7138 li
f
gsave
581.691 41.8186 mo
581.691 44.6321 li
575.489 47.7653 li
575.489 44.9518 li
581.691 41.8186 li
eclp
575.425 41.7546 mo
579.517 41.7546 li
579.517 45.847 li
575.425 45.847 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 569.831 432.333 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXfLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
579.517 41.7546 mo
583.609 41.7546 li
583.609 45.847 li
579.517 45.847 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 573.923 432.333 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXfLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
575.425 45.847 mo
579.517 45.847 li
579.517 49.9394 li
575.425 49.9394 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 569.831 428.241 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXfLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
579.517 45.847 mo
583.609 45.847 li
583.609 49.9394 li
579.517 49.9394 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 573.923 428.241 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXfLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
581.691 41.8186 mo
581.691 44.6321 li
575.489 47.7653 li
575.489 44.9518 li
581.691 41.8186 li
cp
@
gsave
577.982 45.4634 mo
576.32 46.3586 li
576.32 45.4634 li
577.982 44.6321 li
577.982 45.4634 li
eclp
576.256 44.5681 mo
580.348 44.5681 li
580.348 48.6605 li
576.256 48.6605 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 570.662 429.52 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<(*ad&J;%C77F5V&J;%C<)flt&J;%C77F5V&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
578.366 45.3354 mo
577.982 45.7191 li
577.663 45.3354 li
577.982 45.0157 li
578.366 45.3354 li
cp
576.767 44.8239 mo
577.279 45.0157 li
577.151 45.4633 li
576.64 45.3354 li
576.767 44.8239 li
f
gsave
581.116 43.8008 mo
579.453 44.6321 li
579.453 43.8008 li
581.116 42.9696 li
581.116 43.8008 li
eclp
579.389 42.9056 mo
583.481 42.9056 li
583.481 46.9979 li
579.389 46.9979 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 573.795 431.182 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~W/+GR+sL#eMMbD6+sL#eW2N]r+sL#eMMbD6+sL#e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
581.499 43.6729 mo
581.116 43.9926 li
580.796 43.6729 li
581.116 43.2893 li
581.499 43.6729 li
cp
579.901 43.1614 mo
580.412 43.2893 li
580.22 43.8008 li
579.773 43.6729 li
579.901 43.1614 li
f
2.16021 lw
1 lc
[41.0494 10.8021 15.1236 10.8021 15.1236 10.8021 ] 0 dsh
450.863 451.95 mo
378.799 451.95 li
406.615 451.95 li
0 .990631 1 .000396735 cmyk
@
405.464 447.282 mo
414.799 451.95 li
405.464 456.618 li
405.464 447.282 li
ef
gsave
440.76 446.323 mo
447.794 450.16 li
449.009 447.858 451.119 446.131 453.613 445.364 cv
446.515 441.847 li
444.021 442.359 441.847 444.021 440.76 446.323 cv
cp
448.114 439.289 mo
455.211 442.806 li
459.048 440.888 li
451.95 437.307 li
448.114 439.289 li
cp
461.926 441.208 mo
454.892 437.691 li
453.613 438.138 li
459.048 440.888 li
459.048 442.614 li
461.926 441.208 li
cp
447.794 451.439 mo
461.926 444.405 li
461.926 441.208 li
453.613 445.364 li
451.119 446.131 449.009 447.858 447.794 450.16 cv
447.794 451.439 li
eclp
gsave
-19.183 -336.768 mo
615.133 -336.768 li
615.133 560.547 li
-19.183 560.547 li
cp
clp
440.696 437.307 mo
444.789 437.307 li
444.789 441.399 li
440.696 441.399 li
cp
0 .990631 1 .000396735 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 435.102 36.7806 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
444.789 437.307 mo
448.881 437.307 li
448.881 441.399 li
444.789 441.399 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 439.195 36.7806 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
448.881 437.307 mo
452.973 437.307 li
452.973 441.399 li
448.881 441.399 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 443.287 36.7806 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
452.973 437.307 mo
457.066 437.307 li
457.066 441.399 li
452.973 441.399 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 447.379 36.7806 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
457.066 437.307 mo
461.158 437.307 li
461.158 441.399 li
457.066 441.399 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 451.472 36.7806 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
461.158 437.307 mo
465.251 437.307 li
465.251 441.399 li
461.158 441.399 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 455.564 36.7806 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
440.696 441.399 mo
444.789 441.399 li
444.789 445.492 li
440.696 445.492 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 435.102 32.6883 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
444.789 441.399 mo
448.881 441.399 li
448.881 445.492 li
444.789 445.492 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 439.195 32.6883 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
448.881 441.399 mo
452.973 441.399 li
452.973 445.492 li
448.881 445.492 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 443.287 32.6883 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
452.973 441.399 mo
457.066 441.399 li
457.066 445.492 li
452.973 445.492 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 447.379 32.6883 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
457.066 441.399 mo
461.158 441.399 li
461.158 445.492 li
457.066 445.492 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 451.472 32.6883 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
461.158 441.399 mo
465.251 441.399 li
465.251 445.492 li
461.158 445.492 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 455.564 32.6883 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
440.696 445.492 mo
444.789 445.492 li
444.789 449.584 li
440.696 449.584 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 435.102 28.5959 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
444.789 445.492 mo
448.881 445.492 li
448.881 449.584 li
444.789 449.584 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 439.195 28.5959 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
448.881 445.492 mo
452.973 445.492 li
452.973 449.584 li
448.881 449.584 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 443.287 28.5959 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
452.973 445.492 mo
457.066 445.492 li
457.066 449.584 li
452.973 449.584 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 447.379 28.5959 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
457.066 445.492 mo
461.158 445.492 li
461.158 449.584 li
457.066 449.584 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 451.472 28.5959 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
461.158 445.492 mo
465.251 445.492 li
465.251 449.584 li
461.158 449.584 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 455.564 28.5959 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
440.696 449.584 mo
444.789 449.584 li
444.789 453.677 li
440.696 453.677 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 435.102 24.5036 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
444.789 449.584 mo
448.881 449.584 li
448.881 453.677 li
444.789 453.677 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 439.195 24.5036 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
448.881 449.584 mo
452.973 449.584 li
452.973 453.677 li
448.881 453.677 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 443.287 24.5036 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
452.973 449.584 mo
457.066 449.584 li
457.066 453.677 li
452.973 453.677 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 447.379 24.5036 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
457.066 449.584 mo
461.158 449.584 li
461.158 453.677 li
457.066 453.677 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 451.472 24.5036 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
461.158 449.584 mo
465.251 449.584 li
465.251 453.677 li
461.158 453.677 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 455.564 24.5036 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK6q"&T~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
grestore
.239787 lw
0 lc
[.239787 .960213 ] 0 dsh
440.76 446.323 mo
447.794 450.16 li
449.009 447.858 451.119 446.131 453.613 445.364 cv
446.515 441.847 li
444.021 442.359 441.847 444.021 440.76 446.323 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
448.114 439.289 mo
455.211 442.806 li
459.048 440.888 li
451.95 437.307 li
448.114 439.289 li
cp
@
461.926 441.208 mo
454.892 437.691 li
453.613 438.138 li
459.048 440.888 li
459.048 442.614 li
461.926 441.208 li
cp
@
447.794 451.439 mo
461.926 444.405 li
461.926 441.208 li
453.613 445.364 li
451.119 446.131 449.009 447.858 447.794 450.16 cv
447.794 451.439 li
cp
@
gsave
446.515 441.847 mo
448.114 439.289 li
455.211 442.806 li
453.613 445.364 li
446.515 441.847 li
cp
455.211 442.806 mo
459.048 440.888 li
460.966 441.655 li
453.613 445.364 li
455.211 442.806 li
eclp
446.451 439.225 mo
450.544 439.225 li
450.544 443.318 li
446.451 443.318 li
cp
.895628 .7673 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 440.857 34.8623 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~U*<T;Lko&2.OnFuLko&2U7tXfLko&2.OnFuLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
450.544 439.225 mo
454.636 439.225 li
454.636 443.318 li
450.544 443.318 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 444.95 34.8623 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~U*<T;Lko&2.OnFuLko&2U7tXfLko&2.OnFuLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
454.636 439.225 mo
458.728 439.225 li
458.728 443.318 li
454.636 443.318 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 449.042 34.8623 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~U*<T;Lko&2.OnFuLko&2U7tXfLko&2.OnFuLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
458.728 439.225 mo
462.821 439.225 li
462.821 443.318 li
458.728 443.318 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 453.134 34.8623 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~U*<T;Lko&2.OnFuLko&2U7tXfLko&2.OnFuLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
446.451 443.318 mo
450.544 443.318 li
450.544 447.41 li
446.451 447.41 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 440.857 30.77 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~U*<T;Lko&2.OnFuLko&2U7tXfLko&2.OnFuLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
450.544 443.318 mo
454.636 443.318 li
454.636 447.41 li
450.544 447.41 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 444.95 30.77 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~U*<T;Lko&2.OnFuLko&2U7tXfLko&2.OnFuLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
454.636 443.318 mo
458.728 443.318 li
458.728 447.41 li
454.636 447.41 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 449.042 30.77 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~U*<T;Lko&2.OnFuLko&2U7tXfLko&2.OnFuLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
458.728 443.318 mo
462.821 443.318 li
462.821 447.41 li
458.728 447.41 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 453.134 30.77 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~U*<T;Lko&2.OnFuLko&2U7tXfLko&2.OnFuLko&2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
446.515 441.847 mo
448.114 439.289 li
455.211 442.806 li
453.613 445.364 li
446.515 441.847 li
cp
@
455.211 442.806 mo
459.048 440.888 li
460.966 441.655 li
453.613 445.364 li
455.211 442.806 li
cp
@
gsave
450.032 449.84 mo
450.032 448.945 450.48 448.241 450.991 448.241 cv
451.567 448.241 451.95 448.945 451.95 449.84 cv
451.95 450.735 451.567 451.439 450.991 451.439 cv
450.48 451.439 450.032 450.735 450.032 449.84 cv
cp
457.449 445.684 mo
457.449 444.788 457.833 444.085 458.409 444.085 cv
458.92 444.085 459.368 444.788 459.368 445.684 cv
459.368 446.579 458.92 447.282 458.409 447.282 cv
457.833 447.282 457.449 446.579 457.449 445.684 cv
eclp
449.968 444.021 mo
454.06 444.021 li
454.06 448.114 li
449.968 448.114 li
cp
0 0 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 444.374 30.0666 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XCWiB#tWi?XCWiAKVWi?XCWiB#tWi?XCWiAHU~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
454.06 444.021 mo
458.153 444.021 li
458.153 448.114 li
454.06 448.114 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 448.466 30.0666 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XCWiB#tWi?XCWiAKVWi?XCWiB#tWi?XCWiAHU~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
458.153 444.021 mo
462.245 444.021 li
462.245 448.114 li
458.153 448.114 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 452.559 30.0666 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XCWiB#tWi?XCWiAKVWi?XCWiB#tWi?XCWiAHU~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
449.968 448.114 mo
454.06 448.114 li
454.06 452.206 li
449.968 452.206 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 444.374 25.9742 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XCWiB#tWi?XCWiAKVWi?XCWiB#tWi?XCWiAHU~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
454.06 448.114 mo
458.153 448.114 li
458.153 452.206 li
454.06 452.206 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 448.466 25.9742 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XCWiB#tWi?XCWiAKVWi?XCWiB#tWi?XCWiAHU~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
458.153 448.114 mo
462.245 448.114 li
462.245 452.206 li
458.153 452.206 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 452.559 25.9742 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XCWiB#tWi?XCWiAKVWi?XCWiB#tWi?XCWiAHU~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
449.712 449.392 mo
450.16 449.073 li
450.48 449.52 li
450.032 449.776 li
449.712 449.392 li
cp
452.334 449.712 mo
452.014 450.096 li
451.631 449.776 li
451.95 449.392 li
452.334 449.712 li
cp
449.776 450.479 mo
450.032 450.032 li
450.48 450.352 li
450.224 450.735 li
449.776 450.479 li
cp
457.13 445.236 mo
457.513 444.916 li
457.833 445.364 li
457.386 445.62 li
457.13 445.236 li
cp
459.688 445.556 mo
459.368 445.939 li
458.984 445.62 li
459.304 445.236 li
459.688 445.556 li
cp
457.13 446.323 mo
457.449 445.875 li
457.833 446.195 li
457.577 446.579 li
457.13 446.323 li
f
gsave
440.76 446.323 mo
440.76 447.922 li
447.794 451.439 li
447.794 450.16 li
440.76 446.323 li
eclp
440.696 446.259 mo
444.789 446.259 li
444.789 450.352 li
440.696 450.352 li
cp
0 0 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 435.102 27.8286 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e<E4j4~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
444.789 446.259 mo
448.881 446.259 li
448.881 450.352 li
444.789 450.352 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 439.195 27.8286 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e<E4j4~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
440.696 450.352 mo
444.789 450.352 li
444.789 454.444 li
440.696 454.444 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 435.102 23.7362 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e<E4j4~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
444.789 450.352 mo
448.881 450.352 li
448.881 454.444 li
444.789 454.444 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 439.195 23.7362 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e<E4j4~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
440.76 446.323 mo
440.76 447.922 li
447.794 451.439 li
447.794 450.16 li
440.76 446.323 li
cp
@
4.5016 lw
0 lj
2 ml
[] 0 dsh
578.43 443.446 mo
578.43 46.4864 li
@
556.178 446.067 mo
566.792 451.822 li
568.583 448.369 571.716 445.748 575.425 444.597 cv
564.874 439.289 li
561.101 440.057 557.84 442.55 556.178 446.067 cv
cp
567.24 435.453 mo
577.854 440.76 li
583.609 437.883 li
573.059 432.575 li
567.24 435.453 li
cp
587.957 438.33 mo
577.343 433.087 li
575.425 433.79 li
583.609 437.883 li
583.609 440.504 li
587.957 438.33 li
cp
566.792 453.741 mo
587.957 443.19 li
587.957 438.33 li
575.425 444.597 li
571.716 445.748 568.583 448.369 566.792 451.822 cv
566.792 453.741 li
.466072 0 .889067 0 cmyk
ef
.239787 lw
1 lc
1 lj
10 ml
556.178 446.067 mo
566.792 451.822 li
568.583 448.369 571.716 445.748 575.425 444.597 cv
564.874 439.289 li
561.101 440.057 557.84 442.55 556.178 446.067 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
567.24 435.453 mo
577.854 440.76 li
583.609 437.883 li
573.059 432.575 li
567.24 435.453 li
cp
@
587.958 438.33 mo
577.343 433.087 li
575.425 433.79 li
583.609 437.883 li
583.609 440.504 li
587.958 438.33 li
cp
@
566.792 453.74 mo
587.957 443.19 li
587.957 438.33 li
575.425 444.597 li
571.716 445.748 568.583 448.369 566.792 451.822 cv
566.792 453.74 li
cp
@
564.874 439.289 mo
567.24 435.453 li
577.854 440.76 li
575.425 444.597 li
564.874 439.289 li
cp
577.854 440.76 mo
583.609 437.883 li
586.487 439.098 li
575.425 444.597 li
577.854 440.76 li
.466072 0 .889067 0 cmyk
ef
564.874 439.289 mo
567.24 435.453 li
577.854 440.76 li
575.425 444.597 li
564.874 439.289 li
cp
.750179 .679652 .670191 .901488 cmyk
@
577.854 440.76 mo
583.609 437.883 li
586.487 439.098 li
575.425 444.597 li
577.854 440.76 li
cp
@
570.181 451.375 mo
570.181 450.032 570.821 448.945 571.588 448.945 cv
572.419 448.945 573.059 450.032 573.059 451.375 cv
573.059 452.653 572.419 453.74 571.588 453.74 cv
570.821 453.74 570.181 452.653 570.181 451.375 cv
cp
581.243 445.108 mo
581.243 443.765 581.883 442.678 582.65 442.678 cv
583.481 442.678 584.121 443.765 584.121 445.108 cv
584.121 446.451 583.481 447.474 582.65 447.474 cv
581.883 447.474 581.243 446.451 581.243 445.108 cv
.466072 0 .889067 0 cmyk
ef
.720426 lw
570.181 451.375 mo
570.181 450.032 570.821 448.945 571.588 448.945 cv
572.419 448.945 573.059 450.032 573.059 451.375 cv
573.059 452.653 572.419 453.74 571.588 453.74 cv
570.821 453.74 570.181 452.653 570.181 451.375 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
581.243 445.108 mo
581.243 443.765 581.883 442.678 582.65 442.678 cv
583.481 442.678 584.121 443.765 584.121 445.108 cv
584.121 446.451 583.481 447.474 582.65 447.474 cv
581.883 447.474 581.243 446.451 581.243 445.108 cv
cp
@
556.178 446.067 mo
556.178 448.433 li
566.792 453.741 li
566.792 451.822 li
556.178 446.067 li
.466072 0 .889067 0 cmyk
ef
.239787 lw
556.178 446.067 mo
556.178 448.433 li
566.792 453.741 li
566.792 451.822 li
556.178 446.067 li
cp
.750179 .679652 .670191 .901488 cmyk
@
2.16021 lw
[41.0494 10.8021 15.1236 10.8021 15.1236 10.8021 ] 0 dsh
569.926 378.224 mo
569.926 429.25 li
569.926 411.922 li
.466072 0 .889067 0 cmyk
@
565.258 413.073 mo
569.926 403.737 li
574.593 413.073 li
565.258 413.073 li
ef
521.712 451.95 mo
564.235 451.95 li
551.19 451.95 li
@
552.341 456.618 mo
543.005 451.95 li
552.341 447.282 li
552.341 456.618 li
ef
[.00213144 6.48171 ] 0 dsh
357.89 429.25 mo
357.251 352.71 li
357.506 382.764 li
.874174 .544579 0 .00030518 cmyk
@
362.174 381.549 mo
357.57 390.948 li
352.838 381.677 li
362.174 381.549 li
ef
488.334 434.941 mo
371.446 434.941 li
421.705 434.941 li
@
420.49 430.209 mo
429.89 434.941 li
420.49 439.609 li
420.49 430.209 li
ef
243.879 434.941 mo
351.624 434.941 li
305.904 434.941 li
@
307.119 439.609 mo
297.719 434.941 li
307.119 430.209 li
307.119 439.609 li
ef
470.686 202.444 mo
479.318 202.444 486.288 195.474 486.288 186.842 cv
486.288 178.209 479.318 171.24 470.686 171.24 cv
462.053 171.24 455.084 178.209 455.084 186.842 cv
455.084 195.474 462.053 202.444 470.686 202.444 cv
cp
479.446 180.319 mo
483.027 185.115 482.068 191.957 477.208 195.602 cv
475.354 197.009 473.052 197.776 470.686 197.776 cv
468.32 197.776 466.018 197.009 464.164 195.602 cv
479.446 180.319 li
cp
461.926 193.364 mo
458.345 188.568 459.304 181.726 464.164 178.081 cv
466.018 176.675 468.32 175.907 470.686 175.907 cv
473.052 175.907 475.354 176.675 477.208 178.081 cv
461.926 193.364 li
0 .990631 1 .000396735 cmyk
ef
571.332 56.3976 mo
579.965 56.3976 586.934 49.4278 586.934 40.7955 cv
586.934 32.2271 579.965 25.1934 571.332 25.1934 cv
562.764 25.1934 555.73 32.2271 555.73 40.7955 cv
555.73 49.4278 562.764 56.3976 571.332 56.3976 cv
cp
580.092 34.2733 mo
583.673 39.133 582.714 45.9749 577.854 49.5557 cv
576 50.9625 573.698 51.7298 571.332 51.7298 cv
568.966 51.7298 566.728 50.9625 564.81 49.5557 cv
580.092 34.2733 li
cp
562.636 47.3817 mo
558.991 42.522 560.014 35.6801 564.81 32.0992 cv
566.728 30.6925 568.966 29.9251 571.332 29.9251 cv
573.698 29.9251 576 30.6925 577.854 32.0992 cv
562.636 47.3817 li
ef
450.863 457.577 mo
458.664 457.577 464.995 451.247 464.995 443.446 cv
464.995 435.581 458.664 429.25 450.863 429.25 cv
442.998 429.25 436.668 435.581 436.668 443.446 cv
436.668 451.247 442.998 457.577 450.863 457.577 cv
cp
458.792 437.499 mo
462.053 441.847 461.158 448.113 456.81 451.375 cv
455.084 452.653 452.973 453.357 450.863 453.357 cv
448.689 453.357 446.643 452.653 444.917 451.375 cv
458.792 437.499 li
cp
442.87 449.392 mo
439.609 444.98 440.505 438.778 444.917 435.453 cv
446.643 434.174 448.689 433.534 450.863 433.534 cv
452.973 433.534 455.084 434.174 456.81 435.453 cv
442.87 449.392 li
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: ZQYXUN+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/ZQYXUN+SimSun-GBK-EUC-H 1 GetGlyphDirectory
24 <001C60D8A8C9B7A73DB970C1254639A1FB27DF05BAF012C722697CEDB342
BEA6C71FD271140918003D590AF88AF51B4CB49A5B22CCA7BC520FD663632437
025902D91FEC15DF971BB55115B3A57167EAD1AA5814ED499C7040D6B1CC9C3F
781E04C326D6DEE4AE2C2D172DF15C7BF4F0C077F41E39011D0BB402E0EABCDA
2309FE4A389179176E6AA8175818C8C68124A412A5D600BD0683385A4314FD4B
A919DB8FE9DB98187A47781D302D506490EC931E35506AF4C02BB57CA24723FF> |
!
end
end end
%ADOEndSubsetFont
/ZQYXUN+SimSun-GBK-EUC-H-Identity-H findfont [18.032 0 0 -18.032 0 0 ]msf
444.661 471.452 mo
(\000$\000\030)
[9.01599 0 ]xsh
467.363 165.287 mo
(\000%\000\027)
[8.953 0 ]xsh
565.133 26.3326 mo
(\000%\000\030)
[9.01599 0 ]xsh
gsave
255.837 433.662 mo
249.187 436.987 li
243.815 434.238 li
250.401 430.977 li
255.837 433.662 li
cp
251.041 429.57 mo
244.391 432.895 li
240.81 431.105 li
247.396 427.78 li
251.041 429.57 li
cp
236.014 430.337 mo
242.6 427.012 li
245.925 428.419 li
240.81 431.105 li
239.595 432.128 li
236.014 430.337 li
cp
249.187 439.993 mo
236.014 433.343 li
236.014 430.337 li
249.187 436.987 li
249.187 439.993 li
eclp
235.95 426.948 mo
240.043 426.948 li
240.043 431.041 li
235.95 431.041 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 230.356 47.1394 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
240.043 426.948 mo
244.135 426.948 li
244.135 431.041 li
240.043 431.041 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 234.449 47.1394 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
244.135 426.948 mo
248.227 426.948 li
248.227 431.041 li
244.135 431.041 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 238.541 47.1394 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
248.227 426.948 mo
252.32 426.948 li
252.32 431.041 li
248.227 431.041 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 242.633 47.1394 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
252.32 426.948 mo
256.412 426.948 li
256.412 431.041 li
252.32 431.041 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 246.726 47.1394 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
235.95 431.041 mo
240.043 431.041 li
240.043 435.133 li
235.95 435.133 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 230.356 43.0471 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
240.043 431.041 mo
244.135 431.041 li
244.135 435.133 li
240.043 435.133 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 234.449 43.0471 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
244.135 431.041 mo
248.227 431.041 li
248.227 435.133 li
244.135 435.133 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 238.541 43.0471 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
248.227 431.041 mo
252.32 431.041 li
252.32 435.133 li
248.227 435.133 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 242.633 43.0471 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
252.32 431.041 mo
256.412 431.041 li
256.412 435.133 li
252.32 435.133 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 246.726 43.0471 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
235.95 435.133 mo
240.043 435.133 li
240.043 439.225 li
235.95 439.225 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 230.356 38.9547 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
240.043 435.133 mo
244.135 435.133 li
244.135 439.225 li
240.043 439.225 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 234.449 38.9547 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
244.135 435.133 mo
248.227 435.133 li
248.227 439.225 li
244.135 439.225 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 238.541 38.9547 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
248.227 435.133 mo
252.32 435.133 li
252.32 439.225 li
248.227 439.225 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 242.633 38.9547 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
252.32 435.133 mo
256.412 435.133 li
256.412 439.225 li
252.32 439.225 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 246.726 38.9547 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
235.95 439.225 mo
240.043 439.225 li
240.043 443.318 li
235.95 443.318 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 230.356 34.8623 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
240.043 439.225 mo
244.135 439.225 li
244.135 443.318 li
240.043 443.318 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 234.449 34.8623 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
244.135 439.225 mo
248.227 439.225 li
248.227 443.318 li
244.135 443.318 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 238.541 34.8623 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
248.227 439.225 mo
252.32 439.225 li
252.32 443.318 li
248.227 443.318 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 242.633 34.8623 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
252.32 439.225 mo
256.412 439.225 li
256.412 443.318 li
252.32 443.318 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 246.726 34.8623 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?XG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
.239787 lw
0 lc
[.239787 .960213 ] 0 dsh
255.837 433.662 mo
249.187 436.987 li
243.815 434.238 li
250.401 430.977 li
255.837 433.662 li
cp
.750179 .679652 .670191 .901488 cmyk
@
251.041 429.57 mo
244.391 432.895 li
240.81 431.105 li
247.396 427.78 li
251.041 429.57 li
cp
@
236.014 430.337 mo
242.6 427.012 li
245.925 428.419 li
240.81 431.105 li
239.595 432.128 li
236.014 430.337 li
cp
@
249.187 439.993 mo
236.014 433.343 li
236.014 430.337 li
249.187 436.987 li
249.187 439.993 li
cp
@
gsave
252.512 432 mo
251.041 429.57 li
244.391 432.895 li
245.925 435.325 li
252.512 432 li
cp
244.391 432.895 mo
240.81 431.105 li
239.595 432.128 li
245.925 435.325 li
244.391 432.895 li
eclp
239.531 429.506 mo
243.623 429.506 li
243.623 433.598 li
239.531 433.598 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 233.937 44.5817 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E14m~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
243.624 429.506 mo
247.716 429.506 li
247.716 433.598 li
243.624 433.598 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 238.03 44.5817 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E14m~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
247.716 429.506 mo
251.808 429.506 li
251.808 433.598 li
247.716 433.598 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 242.122 44.5817 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E14m~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
251.808 429.506 mo
255.901 429.506 li
255.901 433.598 li
251.808 433.598 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 246.214 44.5817 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E14m~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
239.531 433.598 mo
243.623 433.598 li
243.623 437.691 li
239.531 437.691 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 233.937 40.4893 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E14m~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
243.624 433.598 mo
247.716 433.598 li
247.716 437.691 li
243.624 437.691 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 238.03 40.4893 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E14m~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
247.716 433.598 mo
251.808 433.598 li
251.808 437.691 li
247.716 437.691 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 242.122 40.4893 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E14m~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
251.808 433.598 mo
255.901 433.598 li
255.901 437.691 li
251.808 437.691 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 246.214 40.4893 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E14m~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
252.512 432 mo
251.041 429.57 li
244.391 432.895 li
245.925 435.325 li
252.512 432 li
cp
@
244.391 432.895 mo
240.81 431.105 li
239.595 432.128 li
245.925 435.325 li
244.391 432.895 li
cp
@
gsave
246.181 438.138 mo
246.181 437.307 245.798 436.668 245.286 436.668 cv
244.838 436.668 244.391 437.307 244.391 438.138 cv
244.391 438.97 244.838 439.673 245.286 439.673 cv
245.798 439.673 246.181 438.97 246.181 438.138 cv
cp
239.275 434.238 mo
239.275 433.407 238.892 432.767 238.38 432.767 cv
237.869 432.767 237.485 433.407 237.485 434.238 cv
237.485 435.069 237.869 435.772 238.38 435.772 cv
238.892 435.772 239.275 435.069 239.275 434.238 cv
eclp
237.421 432.703 mo
241.513 432.703 li
241.513 436.796 li
237.421 436.796 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 231.827 41.3846 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XCWiAKVWi?XCWiB#tWi?XCWiAKVWi?XCWiAHd~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
241.513 432.703 mo
245.606 432.703 li
245.606 436.796 li
241.513 436.796 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 235.919 41.3846 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XCWiAKVWi?XCWiB#tWi?XCWiAKVWi?XCWiAHd~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
245.606 432.703 mo
249.698 432.703 li
249.698 436.796 li
245.606 436.796 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 240.012 41.3846 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XCWiAKVWi?XCWiB#tWi?XCWiAKVWi?XCWiAHd~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
237.421 436.796 mo
241.513 436.796 li
241.513 440.888 li
237.421 440.888 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 231.827 37.2922 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XCWiAKVWi?XCWiB#tWi?XCWiAKVWi?XCWiAHd~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
241.513 436.796 mo
245.606 436.796 li
245.606 440.888 li
241.513 440.888 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 235.919 37.2922 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XCWiAKVWi?XCWiB#tWi?XCWiAKVWi?XCWiAHd~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
245.606 436.796 mo
249.698 436.796 li
249.698 440.888 li
245.606 440.888 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 240.012 37.2922 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XCWiAKVWi?XCWiB#tWi?XCWiAKVWi?XCWiAHd~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
245.798 437.819 mo
246.117 437.371 li
246.501 437.691 li
246.245 438.138 li
245.798 437.819 li
cp
244.774 438.33 mo
244.455 438.714 li
244.071 438.394 li
244.391 438.01 li
244.774 438.33 li
cp
238.892 433.918 mo
239.211 433.471 li
239.595 433.79 li
239.339 434.174 li
238.892 433.918 li
cp
237.869 434.43 mo
237.549 434.813 li
237.165 434.494 li
237.485 434.11 li
237.869 434.43 li
f
gsave
255.837 433.662 mo
255.837 436.668 li
249.187 439.993 li
249.187 436.987 li
255.837 433.662 li
eclp
249.123 433.598 mo
253.215 433.598 li
253.215 437.691 li
249.123 437.691 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 243.529 40.4893 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E4p6<E14e<E5ur<E14e<E4p6<E14e<E4jR~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
253.215 433.598 mo
257.307 433.598 li
257.307 437.691 li
253.215 437.691 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 247.621 40.4893 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E4p6<E14e<E5ur<E14e<E4p6<E14e<E4jR~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
249.123 437.691 mo
253.215 437.691 li
253.215 441.783 li
249.123 441.783 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 243.529 36.397 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E4p6<E14e<E5ur<E14e<E4p6<E14e<E4jR~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
253.215 437.691 mo
257.307 437.691 li
257.307 441.783 li
253.215 441.783 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 247.621 36.397 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E4p6<E14e<E5ur<E14e<E4p6<E14e<E4jR~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
255.837 433.662 mo
255.837 436.668 li
249.187 439.993 li
249.187 436.987 li
255.837 433.662 li
cp
@
gsave
251.936 437.563 mo
250.146 438.458 li
250.146 437.563 li
251.936 436.668 li
251.936 437.563 li
eclp
250.082 436.604 mo
254.174 436.604 li
254.174 440.696 li
250.082 440.696 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 244.488 37.484 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWi?Y.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
252.256 437.371 mo
251.936 437.755 li
251.552 437.371 li
251.936 437.051 li
252.256 437.371 li
cp
250.401 437.051 mo
250.849 437.179 li
250.721 437.627 li
250.274 437.499 li
250.401 437.051 li
f
gsave
255.261 435.772 mo
253.407 436.668 li
253.407 435.772 li
255.261 434.877 li
255.261 435.772 li
eclp
253.343 434.813 mo
257.435 434.813 li
257.435 438.906 li
253.343 438.906 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 247.749 39.2744 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2<E16;~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
255.581 435.581 mo
255.261 435.964 li
254.878 435.581 li
255.261 435.197 li
255.581 435.581 li
cp
253.663 435.197 mo
254.174 435.325 li
254.046 435.836 li
253.535 435.709 li
253.663 435.197 li
f
494.664 443.574 mo
488.398 446.707 li
483.283 444.149 li
489.549 441.016 li
494.664 443.574 li
cp
490.124 439.737 mo
483.858 442.87 li
480.469 441.144 li
486.735 438.01 li
490.124 439.737 li
cp
475.929 440.44 mo
482.195 437.307 li
485.265 438.586 li
480.469 441.144 li
479.318 442.167 li
475.929 440.44 li
cp
488.398 449.52 mo
475.929 443.254 li
475.929 440.44 li
488.398 446.707 li
488.398 449.52 li
.789425 .534295 0 0 cmyk
ef
1 lc
[] 0 dsh
494.664 443.574 mo
488.398 446.707 li
483.283 444.149 li
489.549 441.016 li
494.664 443.574 li
cp
.750179 .679652 .670191 .901488 cmyk
@
490.124 439.737 mo
483.858 442.87 li
480.469 441.144 li
486.735 438.01 li
490.124 439.737 li
cp
@
475.929 440.44 mo
482.195 437.307 li
485.265 438.586 li
480.469 441.144 li
479.318 442.167 li
475.929 440.44 li
cp
@
488.398 449.52 mo
475.929 443.254 li
475.929 440.44 li
488.398 446.707 li
488.398 449.52 li
cp
@
491.531 442.039 mo
490.124 439.737 li
483.858 442.87 li
485.265 445.108 li
491.531 442.039 li
cp
483.858 442.87 mo
480.469 441.144 li
479.318 442.167 li
485.265 445.108 li
483.858 442.87 li
.789425 .534295 0 0 cmyk
ef
491.531 442.039 mo
490.124 439.737 li
483.858 442.87 li
485.265 445.108 li
491.531 442.039 li
cp
.750179 .679652 .670191 .901488 cmyk
@
483.858 442.87 mo
480.469 441.144 li
479.318 442.167 li
485.265 445.108 li
483.858 442.87 li
cp
@
485.584 447.794 mo
485.584 447.026 485.201 446.387 484.753 446.387 cv
484.242 446.387 483.858 447.026 483.858 447.794 cv
483.858 448.625 484.242 449.264 484.753 449.264 cv
485.201 449.264 485.584 448.625 485.584 447.794 cv
cp
479.062 444.149 mo
479.062 443.382 478.679 442.742 478.231 442.742 cv
477.719 442.742 477.336 443.382 477.336 444.149 cv
477.336 444.916 477.719 445.556 478.231 445.556 cv
478.679 445.556 479.062 444.916 479.062 444.149 cv
.789425 .534295 0 0 cmyk
ef
.720426 lw
485.584 447.794 mo
485.584 447.026 485.201 446.387 484.753 446.387 cv
484.242 446.387 483.858 447.026 483.858 447.794 cv
483.858 448.625 484.242 449.264 484.753 449.264 cv
485.201 449.264 485.584 448.625 485.584 447.794 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
479.062 444.149 mo
479.062 443.382 478.679 442.742 478.231 442.742 cv
477.719 442.742 477.336 443.382 477.336 444.149 cv
477.336 444.916 477.719 445.556 478.231 445.556 cv
478.679 445.556 479.062 444.916 479.062 444.149 cv
cp
@
494.664 443.574 mo
494.664 446.387 li
488.398 449.52 li
488.398 446.707 li
494.664 443.574 li
.789425 .534295 0 0 cmyk
ef
.239787 lw
494.664 443.574 mo
494.664 446.387 li
488.398 449.52 li
488.398 446.707 li
494.664 443.574 li
cp
.750179 .679652 .670191 .901488 cmyk
@
490.956 447.282 mo
489.293 448.113 li
489.293 447.282 li
490.956 446.387 li
490.956 447.282 li
.789425 .534295 0 0 cmyk
ef
494.089 445.556 mo
492.362 446.387 li
492.362 445.556 li
494.089 444.725 li
494.089 445.556 li
ef
524.973 448.369 mo
518.771 451.502 li
513.655 448.945 li
519.858 445.812 li
524.973 448.369 li
cp
520.433 444.533 mo
514.231 447.666 li
510.842 446.003 li
517.044 442.87 li
520.433 444.533 li
cp
506.302 445.3 mo
512.505 442.167 li
515.638 443.446 li
510.842 446.003 li
509.691 446.963 li
506.302 445.3 li
cp
518.771 454.316 mo
506.302 448.113 li
506.302 445.3 li
518.771 451.502 li
518.771 454.316 li
.466072 0 .889067 0 cmyk
ef
524.973 448.369 mo
518.771 451.502 li
513.655 448.945 li
519.858 445.812 li
524.973 448.369 li
cp
.750179 .679652 .670191 .901488 cmyk
@
520.434 444.533 mo
514.231 447.666 li
510.842 446.003 li
517.044 442.87 li
520.434 444.533 li
cp
@
506.302 445.3 mo
512.505 442.167 li
515.638 443.446 li
510.842 446.003 li
509.691 446.963 li
506.302 445.3 li
cp
@
518.771 454.316 mo
506.302 448.113 li
506.302 445.3 li
518.771 451.502 li
518.771 454.316 li
cp
@
521.84 446.835 mo
520.433 444.533 li
514.231 447.666 li
515.638 449.968 li
521.84 446.835 li
cp
514.231 447.666 mo
510.842 446.003 li
509.691 446.963 li
515.638 449.968 li
514.231 447.666 li
.466072 0 .889067 0 cmyk
ef
521.84 446.835 mo
520.433 444.533 li
514.231 447.666 li
515.638 449.968 li
521.84 446.835 li
cp
.750179 .679652 .670191 .901488 cmyk
@
514.231 447.666 mo
510.842 446.003 li
509.691 446.963 li
515.638 449.968 li
514.231 447.666 li
cp
@
515.894 452.653 mo
515.894 451.886 515.51 451.247 515.062 451.247 cv
514.615 451.247 514.231 451.886 514.231 452.653 cv
514.231 453.421 514.615 454.06 515.062 454.06 cv
515.51 454.06 515.894 453.421 515.894 452.653 cv
cp
509.371 448.945 mo
509.371 448.177 508.988 447.538 508.54 447.538 cv
508.092 447.538 507.709 448.177 507.709 448.945 cv
507.709 449.712 508.092 450.352 508.54 450.352 cv
508.988 450.352 509.371 449.712 509.371 448.945 cv
.466072 0 .889067 0 cmyk
ef
.720426 lw
515.894 452.653 mo
515.894 451.886 515.51 451.247 515.062 451.247 cv
514.615 451.247 514.231 451.886 514.231 452.653 cv
514.231 453.421 514.615 454.06 515.062 454.06 cv
515.51 454.06 515.894 453.421 515.894 452.653 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
509.371 448.945 mo
509.371 448.177 508.988 447.538 508.54 447.538 cv
508.092 447.538 507.709 448.177 507.709 448.945 cv
507.709 449.712 508.092 450.352 508.54 450.352 cv
508.988 450.352 509.371 449.712 509.371 448.945 cv
cp
@
524.973 448.369 mo
524.973 451.247 li
518.771 454.316 li
518.771 451.502 li
524.973 448.369 li
.466072 0 .889067 0 cmyk
ef
.239787 lw
524.973 448.369 mo
524.973 451.247 li
518.771 454.316 li
518.771 451.502 li
524.973 448.369 li
cp
.750179 .679652 .670191 .901488 cmyk
@
521.329 452.078 mo
519.602 452.909 li
519.602 452.078 li
521.329 451.247 li
521.329 452.078 li
.466072 0 .889067 0 cmyk
ef
524.398 450.352 mo
522.735 451.247 li
522.735 450.352 li
524.398 449.52 li
524.398 450.352 li
ef
gsave
581.243 370.231 mo
572.739 374.515 li
565.833 370.998 li
574.338 366.778 li
581.243 370.231 li
cp
575.105 365.051 mo
566.6 369.272 li
561.933 366.97 li
570.437 362.685 li
575.105 365.051 li
cp
555.73 366.01 mo
564.235 361.726 li
568.519 363.453 li
561.933 366.97 li
560.398 368.312 li
555.73 366.01 li
cp
572.739 378.352 mo
555.73 369.847 li
555.73 366.01 li
572.739 374.515 li
572.739 378.352 li
eclp
554.899 382.892 mo
585.08 382.892 li
585.08 360.895 li
554.899 360.895 li
cp
.466072 0 .889067 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[30.1812 0 0 21.9964 549.305 91.1963 ]ct
<<
/T 1
/W 119 
/H 87 
/M[119 0 0 -87 0 87 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
eGg'O<('\R<('\R<('\R<)<A_WWB<noFV*GqXgcgYP%NV!DiRhWqr^rYOV5s!?_11WWB<qoMbiuqXgcg
YOV5s!?_11WWB<roL/dVqXgcgYOV5s!?_11WXuB+<('\R<('\R<('\R<)<A_WWB<noFV*GqXgcgYP%NV
!DiRaWWB<nr"8`:!?_11WWB<qoMbiuqXgcgYOV5s!?_11WWB<roL/dVqXgcgYOV8t!YHONoVrJ+oMe4X
6rZQR6rZQR6rZtYoVqqqnamCo+8YW0!O)1g70-3\oVqqqnamCo+8Yr9po4@uo^l)`?i'Dp!O)%c&HO!M
oVqqqp%1ZR:\s^`!O)%c&HO!Mp8Sb*Wiu%o6rZQR6rZQR6rZQR:\s^`!O)%c&HO!MoVqqqp%1ZR:\s^`
!O)%c&HO!MoVqqqo_qha;upA&oVqqqnamCo+8YW0!O)1g70-3\oVqqqnamCo+8YW0$a92%6rZQR6rZQR
6j-IW<)<A_WWB<noFV*GqXgcgYP%NV!DiRaWWB<noFV*GqXgcgYOqHd"(1o)WqNFnYOV5s!?_11WWB<r
oL/dVqXgcgYOV5s!?_11WW96ds5*d+~>

%%EndBinary
grestore
np
f
grestore
0 lc
[.239787 .960213 ] 0 dsh
581.243 370.231 mo
572.739 374.515 li
565.833 370.998 li
574.338 366.778 li
581.243 370.231 li
cp
.750179 .679652 .670191 .901488 cmyk
@
575.105 365.051 mo
566.6 369.272 li
561.933 366.97 li
570.437 362.685 li
575.105 365.051 li
cp
@
555.73 366.01 mo
564.235 361.726 li
568.519 363.453 li
561.933 366.97 li
560.398 368.312 li
555.73 366.01 li
cp
@
572.739 378.351 mo
555.73 369.847 li
555.73 366.01 li
572.739 374.515 li
572.739 378.351 li
cp
@
gsave
577.023 368.121 mo
575.105 365.051 li
566.6 369.272 li
568.519 372.341 li
577.023 368.121 li
cp
566.6 369.272 mo
561.933 366.97 li
560.398 368.312 li
568.519 372.341 li
566.6 369.272 li
eclp
560.334 364.987 mo
564.426 364.987 li
564.426 369.08 li
560.334 369.08 li
cp
.466072 0 .889067 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 554.74 109.1 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e<E4p4~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
564.426 364.987 mo
568.519 364.987 li
568.519 369.08 li
564.426 369.08 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 558.832 109.1 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e<E4p4~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
568.519 364.987 mo
572.611 364.987 li
572.611 369.08 li
568.519 369.08 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 562.925 109.1 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e<E4p4~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
572.611 364.987 mo
576.703 364.987 li
576.703 369.08 li
572.611 369.08 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 567.017 109.1 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e<E4p4~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
576.703 364.987 mo
580.796 364.987 li
580.796 369.08 li
576.703 369.08 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 571.109 109.1 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e<E4p4~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
560.334 369.08 mo
564.426 369.08 li
564.426 373.172 li
560.334 373.172 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 554.74 105.008 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e<E4p4~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
564.426 369.08 mo
568.519 369.08 li
568.519 373.172 li
564.426 373.172 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 558.832 105.008 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e<E4p4~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
568.519 369.08 mo
572.611 369.08 li
572.611 373.172 li
568.519 373.172 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 562.925 105.008 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e<E4p4~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
572.611 369.08 mo
576.703 369.08 li
576.703 373.172 li
572.611 373.172 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 567.017 105.008 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e<E4p4~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
576.703 369.08 mo
580.796 369.08 li
580.796 373.172 li
576.703 373.172 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 571.109 105.008 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e<E4p4~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
577.023 368.121 mo
575.105 365.051 li
566.6 369.272 li
568.519 372.341 li
577.023 368.121 li
cp
@
566.6 369.272 mo
561.933 366.97 li
560.398 368.312 li
568.519 372.341 li
566.6 369.272 li
cp
@
gsave
568.902 376.05 mo
568.902 374.963 568.391 374.131 567.751 374.131 cv
567.112 374.131 566.6 374.963 566.6 376.05 cv
566.6 377.137 567.112 377.968 567.751 377.968 cv
568.391 377.968 568.902 377.137 568.902 376.05 cv
cp
560.014 370.998 mo
560.014 369.975 559.503 369.08 558.863 369.08 cv
558.224 369.08 557.712 369.975 557.712 370.998 cv
557.712 372.085 558.224 372.98 558.863 372.98 cv
559.503 372.98 560.014 372.085 560.014 370.998 cv
eclp
557.648 369.016 mo
561.741 369.016 li
561.741 373.108 li
557.648 373.108 li
cp
.466072 0 .889067 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 552.054 105.072 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?dG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
561.741 369.016 mo
565.833 369.016 li
565.833 373.108 li
561.741 373.108 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 556.147 105.072 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?dG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
565.833 369.016 mo
569.925 369.016 li
569.925 373.108 li
565.833 373.108 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 560.239 105.072 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?dG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
557.648 373.108 mo
561.741 373.108 li
561.741 377.201 li
557.648 377.201 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 552.054 100.98 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?dG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
561.741 373.108 mo
565.833 373.108 li
565.833 377.201 li
561.741 377.201 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 556.147 100.98 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?dG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
565.833 373.108 mo
569.925 373.108 li
569.925 377.201 li
565.833 377.201 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 560.239 100.98 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?dG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
557.648 377.201 mo
561.741 377.201 li
561.741 381.293 li
557.648 381.293 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 552.054 96.8872 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?dG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
561.741 377.201 mo
565.833 377.201 li
565.833 381.293 li
561.741 381.293 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 556.147 96.8872 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?dG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
565.833 377.201 mo
569.925 377.201 li
569.925 381.293 li
565.833 381.293 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 560.239 96.8872 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHTWi?dG~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
568.519 375.73 mo
568.839 375.346 li
569.222 375.666 li
568.902 376.05 li
568.519 375.73 li
cp
567.112 375.218 mo
566.6 375.41 li
566.409 374.963 li
566.856 374.707 li
567.112 375.218 li
cp
567.815 377.584 mo
568.263 377.904 li
567.943 378.288 li
567.56 378.032 li
567.815 377.584 li
cp
559.631 370.742 mo
559.95 370.359 li
560.334 370.678 li
560.014 371.062 li
559.631 370.742 li
cp
558.16 370.167 mo
557.712 370.359 li
557.521 369.911 li
557.968 369.719 li
558.16 370.167 li
cp
558.927 372.597 mo
559.375 372.852 li
559.055 373.3 li
558.608 372.98 li
558.927 372.597 li
f
gsave
581.243 370.231 mo
581.243 374.131 li
572.739 378.352 li
572.739 374.515 li
581.243 370.231 li
eclp
572.675 370.167 mo
576.767 370.167 li
576.767 374.259 li
572.675 374.259 li
cp
.466072 0 .889067 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 567.081 103.921 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lm~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
576.767 370.167 mo
580.86 370.167 li
580.86 374.259 li
576.767 374.259 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 571.173 103.921 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lm~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
580.86 370.167 mo
584.952 370.167 li
584.952 374.259 li
580.86 374.259 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 575.266 103.921 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lm~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
572.675 374.259 mo
576.767 374.259 li
576.767 378.352 li
572.675 378.352 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 567.081 99.8286 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lm~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
576.767 374.259 mo
580.86 374.259 li
580.86 378.352 li
576.767 378.352 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 571.173 99.8286 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lm~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
580.86 374.259 mo
584.952 374.259 li
584.952 378.352 li
580.86 378.352 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 575.266 99.8286 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lm~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
572.675 378.352 mo
576.767 378.352 li
576.767 382.444 li
572.675 382.444 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 567.081 95.7362 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lm~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
576.767 378.352 mo
580.86 378.352 li
580.86 382.444 li
576.767 382.444 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 571.173 95.7362 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lm~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
580.86 378.352 mo
584.952 378.352 li
584.952 382.444 li
580.86 382.444 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 575.266 95.7362 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lm~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
581.243 370.231 mo
581.243 374.131 li
572.739 378.352 li
572.739 374.515 li
581.243 370.231 li
cp
@
gsave
576.256 375.282 mo
573.954 376.433 li
573.954 375.282 li
576.256 374.131 li
576.256 375.282 li
eclp
573.89 374.067 mo
577.982 374.067 li
577.982 378.16 li
573.89 378.16 li
cp
.466072 0 .889067 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 568.296 100.02 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XCWiAKVWi?XCWiB#tWi?XCWiAKVWi?XCWiB#d~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
576.576 374.835 mo
576.256 375.218 li
575.872 374.835 li
576.256 374.451 li
576.576 374.835 li
cp
573.57 375.858 mo
573.954 375.474 li
574.274 375.858 li
573.954 376.241 li
573.57 375.858 li
f
gsave
580.476 372.98 mo
578.174 374.131 li
578.174 372.98 li
580.476 371.765 li
580.476 372.98 li
eclp
578.11 371.701 mo
582.203 371.701 li
582.203 375.794 li
578.11 375.794 li
cp
.466072 0 .889067 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 572.516 102.386 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14e<E4p6<E14e<E5ur<E14e<E4p6<E14e<E5uR~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
580.86 372.533 mo
580.476 372.852 li
580.156 372.533 li
580.476 372.149 li
580.86 372.533 li
cp
577.791 373.556 mo
578.174 373.172 li
578.558 373.556 li
578.174 373.875 li
577.791 373.556 li
f
1 lc
[] 0 dsh
499.076 466.082 mo
486.544 466.082 476.377 455.979 476.377 443.446 cv
476.377 430.913 486.544 420.746 499.076 420.746 cv
511.545 420.746 521.712 430.913 521.712 443.446 cv
521.712 455.979 511.545 466.082 499.076 466.082 cv
cp
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: ZQYXUN+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/ZQYXUN+SimSun-GBK-EUC-H 2 GetGlyphDirectory
10 <001C60D8A8C9B7A73DBED71CB396DB874D9C3EC734C988D1EC69063A10B0
EA90B257C81A1FD592B4025FB44956B132C103677C2552B174659D2647EB72CE
1C434F5D6754D55802645A0DBEFD5241C87348D53F959E9A2B70> |
38 <001C60D8A8C9B7A73DB6A70B0D1171EB2B05716A57A36051BCA4F091B1BF
0612F84D61B7DDA7F028930F1B6F2F65D4AE311456C21C70A4BA6EB2BC800B64
E94AC03D8408375BA5B0562FD8565E925E5446B85D9958703FCF4B9980751B7C
CFA3061443555EC903E3ED51AA9525E0A275B8A7EC71AEDD161C9065014AC8B2
142CFB509F91EEEA059FBF2C7B9037304598731936F4AD133E75> |
!
end
end end
%ADOEndSubsetFont
/ZQYXUN+SimSun-GBK-EUC-H-Identity-H findfont [18.032 0 0 -18.032 0 0 ]msf
471.005 418.699 mo
(\000%\000\024\000\012)
[9.01599 9.01602 0 ]xsh
549.787 428.924 mo
(\000&)sh
548.128 358.076 mo
(\000&\000\025)
[9.01599 0 ]xsh
509.882 425.786 mo
(\000&\000\024)
[8.95297 0 ]xsh
237.419 406.275 mo
(\000%\000\025\000\012)
[9.01601 9.01599 0 ]xsh
2.16021 lw
[41.0494 10.8021 15.1236 10.8021 15.1236 10.8021 ] 0 dsh
161.648 335.701 mo
161.648 378.224 li
161.648 365.115 li
.466072 0 .889067 0 cmyk
@
156.98 366.33 mo
161.648 356.931 li
166.316 366.33 li
156.98 366.33 li
ef
147.453 364.156 mo
153.464 364.156 li
153.464 349.769 li
147.453 349.769 li
cp
0 0 0 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
/ZQYXUN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0213 0 0 ]msf
147.389 360.511 mo
(\000&)sh
170.153 268.369 mo
159.474 273.74 li
150.714 269.392 li
161.393 264.021 li
170.153 268.369 li
cp
162.352 261.847 mo
151.673 267.154 li
145.854 264.277 li
156.533 258.906 li
162.352 261.847 li
cp
138.117 263.062 mo
148.796 257.691 li
154.103 259.929 li
145.854 264.277 li
143.936 265.939 li
138.117 263.062 li
cp
159.474 278.6 mo
138.117 267.922 li
138.117 263.062 li
159.474 273.74 li
159.474 278.6 li
0 0 0 0 cmyk
ef
.239787 lw
[] 0 dsh
170.153 268.369 mo
159.474 273.74 li
150.714 269.392 li
161.393 264.021 li
170.153 268.369 li
cp
.750179 .679652 .670191 .901488 cmyk
@
162.352 261.847 mo
151.673 267.154 li
145.854 264.277 li
156.533 258.906 li
162.352 261.847 li
cp
@
138.117 263.062 mo
148.796 257.691 li
154.103 259.929 li
145.854 264.277 li
143.936 265.939 li
138.117 263.062 li
cp
@
159.474 278.6 mo
138.117 267.922 li
138.117 263.062 li
159.474 273.74 li
159.474 278.6 li
cp
@
164.782 265.748 mo
162.352 261.847 li
151.673 267.154 li
154.103 271.055 li
164.782 265.748 li
cp
151.673 267.154 mo
145.854 264.277 li
143.936 265.939 li
154.103 271.055 li
151.673 267.154 li
0 0 0 0 cmyk
ef
164.782 265.748 mo
162.352 261.847 li
151.673 267.154 li
154.103 271.055 li
164.782 265.748 li
cp
.750179 .679652 .670191 .901488 cmyk
@
151.673 267.154 mo
145.854 264.277 li
143.936 265.939 li
154.103 271.055 li
151.673 267.154 li
cp
@
154.615 275.659 mo
154.615 274.316 153.975 273.229 153.144 273.229 cv
152.377 273.229 151.673 274.316 151.673 275.659 cv
151.673 277.002 152.377 278.089 153.144 278.089 cv
153.975 278.089 154.615 277.002 154.615 275.659 cv
cp
143.425 269.392 mo
143.425 268.05 142.785 266.962 142.018 266.962 cv
141.187 266.962 140.547 268.05 140.547 269.392 cv
140.547 270.735 141.187 271.822 142.018 271.822 cv
142.785 271.822 143.425 270.735 143.425 269.392 cv
0 0 0 0 cmyk
ef
.720426 lw
154.615 275.659 mo
154.615 274.316 153.975 273.229 153.144 273.229 cv
152.377 273.229 151.673 274.316 151.673 275.659 cv
151.673 277.002 152.377 278.089 153.144 278.089 cv
153.975 278.089 154.615 277.002 154.615 275.659 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
143.425 269.392 mo
143.425 268.05 142.785 266.962 142.018 266.962 cv
141.187 266.962 140.547 268.05 140.547 269.392 cv
140.547 270.735 141.187 271.822 142.018 271.822 cv
142.785 271.822 143.425 270.735 143.425 269.392 cv
cp
@
170.153 268.369 mo
170.153 273.229 li
159.474 278.6 li
159.474 273.74 li
170.153 268.369 li
0 0 0 0 cmyk
ef
.239787 lw
170.153 268.369 mo
170.153 273.229 li
159.474 278.6 li
159.474 273.74 li
170.153 268.369 li
cp
.750179 .679652 .670191 .901488 cmyk
@
163.822 274.7 mo
160.945 276.17 li
160.945 274.7 li
163.822 273.229 li
163.822 274.7 li
0 0 0 0 cmyk
ef
169.194 271.822 mo
166.252 273.229 li
166.252 271.822 li
169.194 270.352 li
169.194 271.822 li
ef
gsave
162.863 229.492 mo
155.83 233.009 li
150.075 230.131 li
157.108 226.678 li
162.863 229.492 li
cp
157.748 225.208 mo
150.714 228.725 li
146.877 226.806 li
153.911 223.289 li
157.748 225.208 li
cp
141.826 226.039 mo
148.796 222.522 li
152.313 223.929 li
146.877 226.806 li
145.599 227.957 li
141.826 226.039 li
cp
155.83 236.206 mo
141.826 229.172 li
141.826 226.039 li
155.83 233.009 li
155.83 236.206 li
eclp
gsave
-19.183 -336.768 mo
615.133 -336.768 li
615.133 560.547 li
-19.183 560.547 li
cp
clp
141.762 222.458 mo
145.854 222.458 li
145.854 226.55 li
141.762 226.55 li
cp
0 0 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 136.168 251.63 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
145.854 222.458 mo
149.947 222.458 li
149.947 226.55 li
145.854 226.55 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 140.26 251.63 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
149.947 222.458 mo
154.039 222.458 li
154.039 226.55 li
149.947 226.55 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 144.353 251.63 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
154.039 222.458 mo
158.131 222.458 li
158.131 226.55 li
154.039 226.55 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 148.445 251.63 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
158.131 222.458 mo
162.224 222.458 li
162.224 226.55 li
158.131 226.55 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 152.537 251.63 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
162.224 222.458 mo
166.316 222.458 li
166.316 226.55 li
162.224 226.55 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 156.63 251.63 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
141.762 226.55 mo
145.854 226.55 li
145.854 230.643 li
141.762 230.643 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 136.168 247.537 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
145.854 226.55 mo
149.947 226.55 li
149.947 230.643 li
145.854 230.643 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 140.26 247.537 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
149.947 226.55 mo
154.039 226.55 li
154.039 230.643 li
149.947 230.643 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 144.353 247.537 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
154.039 226.55 mo
158.131 226.55 li
158.131 230.643 li
154.039 230.643 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 148.445 247.537 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
158.131 226.55 mo
162.224 226.55 li
162.224 230.643 li
158.131 230.643 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 152.537 247.537 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
162.224 226.55 mo
166.316 226.55 li
166.316 230.643 li
162.224 230.643 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 156.63 247.537 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
141.762 230.643 mo
145.854 230.643 li
145.854 234.735 li
141.762 234.735 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 136.168 243.445 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
145.854 230.643 mo
149.947 230.643 li
149.947 234.735 li
145.854 234.735 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 140.26 243.445 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
149.947 230.643 mo
154.039 230.643 li
154.039 234.735 li
149.947 234.735 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 144.353 243.445 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
154.039 230.643 mo
158.131 230.643 li
158.131 234.735 li
154.039 234.735 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 148.445 243.445 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
158.131 230.643 mo
162.224 230.643 li
162.224 234.735 li
158.131 234.735 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 152.537 243.445 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
162.224 230.643 mo
166.316 230.643 li
166.316 234.735 li
162.224 234.735 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 156.63 243.445 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
141.762 234.735 mo
145.854 234.735 li
145.854 238.827 li
141.762 238.827 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 136.168 239.353 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
145.854 234.735 mo
149.947 234.735 li
149.947 238.827 li
145.854 238.827 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 140.26 239.353 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
149.947 234.735 mo
154.039 234.735 li
154.039 238.827 li
149.947 238.827 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 144.353 239.353 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
154.039 234.735 mo
158.131 234.735 li
158.131 238.827 li
154.039 238.827 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 148.445 239.353 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
158.131 234.735 mo
162.224 234.735 li
162.224 238.827 li
158.131 238.827 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 152.537 239.353 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
162.224 234.735 mo
166.316 234.735 li
166.316 238.827 li
162.224 238.827 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 156.63 239.353 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHTWiAo.~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
grestore
0 lc
[.239787 .960213 ] 0 dsh
162.863 229.492 mo
155.83 233.009 li
150.075 230.131 li
157.108 226.678 li
162.863 229.492 li
cp
.750179 .679652 .670191 .901488 cmyk
@
157.748 225.208 mo
150.714 228.724 li
146.877 226.806 li
153.911 223.289 li
157.748 225.208 li
cp
@
141.826 226.039 mo
148.796 222.522 li
152.313 223.929 li
146.877 226.806 li
145.599 227.957 li
141.826 226.039 li
cp
@
155.83 236.206 mo
141.826 229.172 li
141.826 226.039 li
155.83 233.009 li
155.83 236.206 li
cp
@
gsave
159.346 227.765 mo
157.748 225.208 li
150.714 228.725 li
152.313 231.282 li
159.346 227.765 li
cp
150.714 228.725 mo
146.877 226.806 li
145.599 227.957 li
152.313 231.282 li
150.714 228.725 li
eclp
145.535 225.144 mo
149.627 225.144 li
149.627 229.236 li
145.535 229.236 li
cp
0 0 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 139.941 248.944 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2<E5b;~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
149.627 225.144 mo
153.719 225.144 li
153.719 229.236 li
149.627 229.236 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 144.033 248.944 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2<E5b;~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
153.719 225.144 mo
157.812 225.144 li
157.812 229.236 li
153.719 229.236 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 148.125 248.944 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2<E5b;~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
157.812 225.144 mo
161.904 225.144 li
161.904 229.236 li
157.812 229.236 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 152.218 248.944 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2<E5b;~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
145.535 229.236 mo
149.627 229.236 li
149.627 233.328 li
145.535 233.328 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 139.941 244.852 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2<E5b;~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
149.627 229.236 mo
153.719 229.236 li
153.719 233.328 li
149.627 233.328 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 144.033 244.852 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2<E5b;~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
153.719 229.236 mo
157.812 229.236 li
157.812 233.328 li
153.719 233.328 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 148.125 244.852 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2<E5b;~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
157.812 229.236 mo
161.904 229.236 li
161.904 233.328 li
157.812 233.328 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 152.218 244.852 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2<E5b;~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
159.346 227.765 mo
157.748 225.208 li
150.714 228.724 li
152.313 231.282 li
159.346 227.765 li
cp
@
150.714 228.724 mo
146.877 226.806 li
145.599 227.957 li
152.313 231.282 li
150.714 228.724 li
cp
@
gsave
152.632 234.288 mo
152.632 233.456 152.185 232.689 151.673 232.689 cv
151.162 232.689 150.714 233.456 150.714 234.288 cv
150.714 235.183 151.162 235.886 151.673 235.886 cv
152.185 235.886 152.632 235.183 152.632 234.288 cv
cp
145.279 230.131 mo
145.279 229.3 144.895 228.533 144.32 228.533 cv
143.808 228.533 143.361 229.3 143.361 230.131 cv
143.361 231.026 143.808 231.73 144.32 231.73 cv
144.895 231.73 145.279 231.026 145.279 230.131 cv
eclp
143.361 228.533 mo
147.453 228.533 li
147.453 232.625 li
143.361 232.625 li
cp
0 0 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 137.767 245.555 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C6q+,U~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
147.453 228.533 mo
151.545 228.533 li
151.545 232.625 li
147.453 232.625 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 141.859 245.555 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C6q+,U~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
151.545 228.533 mo
155.638 228.533 li
155.638 232.625 li
151.545 232.625 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 145.951 245.555 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C6q+,U~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
143.361 232.625 mo
147.453 232.625 li
147.453 236.717 li
143.361 236.717 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 137.767 241.463 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C6q+,U~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
147.453 232.625 mo
151.545 232.625 li
151.545 236.717 li
147.453 236.717 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 141.859 241.463 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C6q+,U~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
151.545 232.625 mo
155.638 232.625 li
155.638 236.717 li
151.545 236.717 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 145.951 241.463 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C6q+,U~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
152.249 233.968 mo
152.568 233.584 li
152.952 233.84 li
152.696 234.288 li
152.249 233.968 li
cp
151.098 234.288 mo
150.714 234.607 li
150.394 234.224 li
150.778 233.904 li
151.098 234.288 li
cp
152.249 234.799 mo
152.632 234.479 li
152.952 234.927 li
152.504 235.183 li
152.249 234.799 li
cp
144.895 229.812 mo
145.215 229.428 li
145.599 229.684 li
145.343 230.131 li
144.895 229.812 li
cp
143.744 230.131 mo
143.361 230.451 li
143.041 230.067 li
143.425 229.748 li
143.744 230.131 li
cp
144.895 230.643 mo
145.279 230.323 li
145.599 230.707 li
145.599 230.771 li
145.215 231.026 li
144.895 230.643 li
f
gsave
162.863 229.492 mo
162.863 232.689 li
155.83 236.206 li
155.83 233.009 li
162.863 229.492 li
eclp
155.766 229.428 mo
159.858 229.428 li
159.858 233.52 li
155.766 233.52 li
cp
0 0 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 150.172 244.66 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r+sL#eLl,24~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
159.858 229.428 mo
163.95 229.428 li
163.95 233.52 li
159.858 233.52 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 154.264 244.66 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r+sL#eLl,24~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
155.766 233.52 mo
159.858 233.52 li
159.858 237.613 li
155.766 237.613 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 150.172 240.568 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r+sL#eLl,24~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
159.858 233.52 mo
163.95 233.52 li
163.95 237.613 li
159.858 237.613 li
cp
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 154.264 240.568 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r+sL#eLl,24~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
162.863 229.492 mo
162.863 232.689 li
155.83 236.206 li
155.83 233.009 li
162.863 229.492 li
cp
@
gsave
158.707 233.648 mo
156.789 234.607 li
156.789 233.648 li
158.707 232.689 li
158.707 233.648 li
eclp
156.725 232.625 mo
160.817 232.625 li
160.817 236.717 li
156.725 236.717 li
cp
0 0 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 151.131 241.463 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n6q"&T&J_=G~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
159.091 233.456 mo
158.707 233.776 li
158.323 233.456 li
158.707 233.073 li
159.091 233.456 li
cp
156.853 233.264 mo
157.364 233.392 li
157.236 233.84 li
156.725 233.712 li
156.853 233.264 li
f
gsave
162.224 231.73 mo
160.306 232.689 li
160.306 231.73 li
162.224 230.771 li
162.224 231.73 li
eclp
160.242 230.707 mo
164.334 230.707 li
164.334 234.799 li
160.242 234.799 li
cp
0 0 0 0 cmyk
gsave
clp
[1 0 0 -1 5.59398 474.088 ]ct
[4.09235 0 0 -4.09235 154.648 243.381 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2U7tXfLko&2.OnFuLko&2U7tXfLko&2+t?Sm~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
162.544 231.538 mo
162.224 231.858 li
161.84 231.538 li
162.224 231.154 li
162.544 231.538 li
cp
160.369 231.346 mo
160.817 231.474 li
160.689 231.922 li
160.242 231.794 li
160.369 231.346 li
f
160.497 300.405 mo
154.295 303.474 li
149.179 300.98 li
155.382 297.847 li
160.497 300.405 li
cp
155.957 296.568 mo
149.755 299.701 li
146.302 297.975 li
152.568 294.842 li
155.957 296.568 li
cp
141.826 297.272 mo
148.028 294.138 li
151.162 295.417 li
146.302 297.975 li
145.215 298.998 li
141.826 297.272 li
cp
154.295 306.351 mo
141.826 300.085 li
141.826 297.272 li
154.295 303.474 li
154.295 306.351 li
0 0 0 0 cmyk
ef
1 lc
[] 0 dsh
160.497 300.405 mo
154.295 303.474 li
149.179 300.98 li
155.382 297.847 li
160.497 300.405 li
cp
.750179 .679652 .670191 .901488 cmyk
@
155.957 296.568 mo
149.755 299.701 li
146.302 297.975 li
152.568 294.842 li
155.957 296.568 li
cp
@
141.826 297.272 mo
148.028 294.138 li
151.162 295.417 li
146.302 297.975 li
145.215 298.998 li
141.826 297.272 li
cp
@
154.295 306.351 mo
141.826 300.085 li
141.826 297.272 li
154.295 303.474 li
154.295 306.351 li
cp
@
157.364 298.806 mo
155.957 296.568 li
149.755 299.701 li
151.162 301.939 li
157.364 298.806 li
cp
149.755 299.701 mo
146.302 297.975 li
145.215 298.998 li
151.162 301.939 li
149.755 299.701 li
0 0 0 0 cmyk
ef
157.364 298.806 mo
155.957 296.568 li
149.755 299.701 li
151.162 301.939 li
157.364 298.806 li
cp
.750179 .679652 .670191 .901488 cmyk
@
149.755 299.701 mo
146.302 297.975 li
145.215 298.998 li
151.162 301.939 li
149.755 299.701 li
cp
@
151.417 304.625 mo
151.417 303.858 151.034 303.218 150.586 303.218 cv
150.139 303.218 149.755 303.858 149.755 304.625 cv
149.755 305.392 150.139 306.032 150.586 306.032 cv
151.034 306.032 151.417 305.392 151.417 304.625 cv
cp
144.895 300.98 mo
144.895 300.149 144.512 299.51 144.064 299.51 cv
143.616 299.51 143.233 300.149 143.233 300.98 cv
143.233 301.748 143.616 302.387 144.064 302.387 cv
144.512 302.387 144.895 301.748 144.895 300.98 cv
0 0 0 0 cmyk
ef
.720426 lw
151.417 304.625 mo
151.417 303.858 151.034 303.218 150.586 303.218 cv
150.139 303.218 149.755 303.858 149.755 304.625 cv
149.755 305.392 150.139 306.032 150.586 306.032 cv
151.034 306.032 151.417 305.392 151.417 304.625 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
144.895 300.98 mo
144.895 300.149 144.512 299.51 144.064 299.51 cv
143.616 299.51 143.233 300.149 143.233 300.98 cv
143.233 301.748 143.616 302.387 144.064 302.387 cv
144.512 302.387 144.895 301.748 144.895 300.98 cv
cp
@
160.497 300.405 mo
160.497 303.218 li
154.295 306.351 li
154.295 303.474 li
160.497 300.405 li
0 0 0 0 cmyk
ef
.239787 lw
160.497 300.405 mo
160.497 303.218 li
154.295 306.351 li
154.295 303.474 li
160.497 300.405 li
cp
.750179 .679652 .670191 .901488 cmyk
@
156.853 304.05 mo
155.126 304.945 li
155.126 304.05 li
156.853 303.218 li
156.853 304.05 li
0 0 0 0 cmyk
ef
.720426 lw
156.853 304.05 mo
155.126 304.945 li
155.126 304.05 li
156.853 303.218 li
156.853 304.05 li
cp
.750179 .679652 .670191 .901488 cmyk
@
159.922 302.387 mo
158.259 303.218 li
158.259 302.387 li
159.922 301.492 li
159.922 302.387 li
0 0 0 0 cmyk
ef
159.922 302.387 mo
158.259 303.218 li
158.259 302.387 li
159.922 301.492 li
159.922 302.387 li
cp
.750179 .679652 .670191 .901488 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/ZQYXUN+SimSun-GBK-EUC-H-Identity-H findfont [18.032 0 0 -18.032 0 0 ]msf
380.846 373.683 mo
(\000$\000\024)
[9.01599 0 ]xsh
246.693 447.666 mo
254.558 447.666 260.888 441.336 260.888 433.534 cv
260.888 425.669 254.558 419.339 246.693 419.339 cv
238.892 419.339 232.497 425.669 232.497 433.534 cv
232.497 441.336 238.892 447.666 246.693 447.666 cv
cp
254.622 427.588 mo
257.947 431.936 257.052 438.138 252.639 441.463 cv
250.913 442.742 248.867 443.446 246.693 443.446 cv
244.583 443.446 242.473 442.742 240.746 441.463 cv
254.622 427.588 li
cp
238.764 439.417 mo
235.503 435.069 236.398 428.867 240.746 425.542 cv
242.473 424.263 244.583 423.559 246.693 423.559 cv
248.867 423.559 250.913 424.263 252.639 425.542 cv
238.764 439.417 li
0 .990631 1 .000396735 cmyk
ef
567.112 385.321 mo
574.913 385.321 581.243 378.927 581.243 371.126 cv
581.243 363.325 574.913 356.931 567.112 356.931 cv
559.247 356.931 552.917 363.325 552.917 371.126 cv
552.917 378.927 559.247 385.321 567.112 385.321 cv
cp
575.041 365.179 mo
578.302 369.591 577.407 375.794 573.059 379.055 cv
571.332 380.334 569.222 381.037 567.112 381.037 cv
564.938 381.037 562.892 380.334 561.165 379.055 cv
575.041 365.179 li
cp
559.119 377.073 mo
555.858 372.661 556.753 366.458 561.165 363.197 cv
562.892 361.918 564.938 361.215 567.112 361.215 cv
569.222 361.215 571.332 361.918 573.059 363.197 cv
559.119 377.073 li
ef
150.33 243.559 mo
158.131 243.559 164.462 237.165 164.462 229.364 cv
164.462 221.563 158.131 215.169 150.33 215.169 cv
142.465 215.169 136.135 221.563 136.135 229.364 cv
136.135 237.165 142.465 243.559 150.33 243.559 cv
cp
158.259 223.417 mo
161.52 227.829 160.625 234.032 156.213 237.293 cv
154.551 238.572 152.441 239.275 150.33 239.275 cv
148.156 239.275 146.046 238.572 144.384 237.293 cv
158.259 223.417 li
cp
142.337 235.311 mo
139.076 230.899 139.972 224.696 144.384 221.435 cv
146.046 220.156 148.156 219.453 150.33 219.453 cv
152.441 219.453 154.551 220.156 156.213 221.435 cv
142.337 235.311 li
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: ZQYXUN+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/ZQYXUN+SimSun-GBK-EUC-H 13 GetGlyphDirectory
44 <001C60D8A8C9B7A73DB9696D477FC5C77CC13F785D0DEFFCFE399F815467
2C738C7542738E124DFEDA4F33708349FE4D7ECBEDDDE92AFC81C7A51B45AEEC
CE4AEBB160C3CBB2056F1DB3B4BB9EAEADC6349A0E672BA304F2323994F5EFB4
AD37BAA9> |
80 <001C60D8A8C9B7A73DD90B4F3776B02451FBABF49548192505688CF8D4D4
9322F8D916FFB8C1CE84BB93BBE5DEDBF14EC319382BF6E61D35C8D3E4EA3057
E5A423D97EF99E6B50A024A5644F885CE43BA5467F65C4F8B9A0736E62EAB31D
FED581BC288D1C60D6B990AD0764C0032E63DA6C12FCB234B90E7A3304747BB1
0A5A563E32C4CAAD3BECD16EFC6F2A89D45EB95D5865BE4B29A71AC0E11BB912
E9732834A18D8C0D5621721869A8E4C91EE286B7A946548A352593B7AEA037A7
93574B8C10416EB233B02C04646EDE5783B4C5E2200E15A76CBE32899A86A100
EA2A0713AA700BD2190A73119895DE7E56B00EE9176BC5CEFF2969D015C6FF12
35D77A890C208E62DF27D04C2668DD079509CF7F719A4B5B1D82AA3950CB6AD8
2311C5820AE9544B66598F14> |
83 <001C60D8A8C9B7A73DB908748451047989C3955B3615A9F2D9EE298C080D
8F17A9D1C3483A13F08B4EB80001FB7761FA7D0D6D5DB57802D55DBCBC6B437A
AA40FE1510E64CEA182416A019139BE7F60301A7D8A91B4F38E2718FDBC3B7ED
3031955A110C4AD1CDBB7F1E367454238726CEF3B69F05282B637168CDB9C6AA
032D0D08B972FCD2E5B226446097D0E5C40BE80E2018590029953AE8D6A5919F
42BEEBECD706A215638672E54810132F62B73FEFFB6E380BDAE51571B3B5C454
056E570D4DFC8A597357FA5C26970EA6FE6D098E87646A392A> |
86 <001C60D8A8C9B7A73DB923D5A49D04CBD65263719474C80BA97F6F133EAA
4FCBFFA43F60F895C3C414B7030ECA67E2674F62D2101C594B032EE90D99376A
B7F0760AFAD806D2D95642E44E5A2972877B76376DEB7CB434DCD68736F1E6E5
DBDFA54FD232EB08D99648B487B3E4ED2484C351F3C5ECD6F9DC9B48E8E90C5C
9E57A52E4F0E9F094FF68532358CE3A23923A3205C06E22076925C0822C62316
37F06A3E9B8D1291F9E72FC9834B88C703249C81A90955A609860869BCF7333D
96CF9A54D009C595DB9C0AD3F8C33F579CD709F88D0AB96D869C241E584F1BDA
4F8C3C79B3580F4553FAE866201562F5C8B6C736572DF3A478581D720C8E0B81> |
76 <001C60D8A8C9B7A73DB9569388B530AA69A814780F04C0D0891B66556132
542C171BD2EA0875B17FB62A498137AA36ED9317F24C9A265F4E9A80213C7581
7936CF88855AE783C3200ED8BAB3E514B0F3675AC005A984E1300BE3AB9F059A
1E769D0B04C27E73DE797CBE27CEE57EFD8A61BE00EE7A34C5DEA0BC68905399
8C549C598091C265DC92224E3190B4EB4422DF93A2E24E69A294E18C> |
69 <001C60D8A8C9B7A73DB938E8502802F0F159739B20F023956F6C7A371FB3
71CFA8E2025C64A394A891623C8786F6F34E6EA2A016B05E566274829D6C56D6
3BEA3DBFF96AA528E8C4B57A6D30E8B2E35AEC8BCFDA198192DC059095746FAA
1A53E4C40F37509F00CA1C266F109175136B267AECDA6E572FE0BAE4551BBBFA
EC77C7FB2EAF95BF8821700178A79BB6FC79F3CD68350C0D2A5AA9817D580164
C82FF16D3EC188769121EAF55B80E6> |
79 <001C60D8A8C9B7A73DA391D03E1B6BC0DE7B69284AD80F1502141FA17998
899BA73EBBC6B04B2D552B02EB7DB690A294A489C508FBFE236B6BA96B558970
AF94C5DBEFF7B2908845C1B4E7B3BD7D7C1D4CA395C7DA320148A1E4C330984E> |
72 <001C60D8A8C9B7A73DB937B4101DBBF46DCDCD34C66331F9C4BC9617541C
58225F0813F84C9B99CE106C877AC69B6618F22D5116137A9BBCC8BBD2B6E99F
1515F40D5047C1870B45E96B1FB58B60D6847A662BC240FFE5567D9F452FAC8C
3A6A6C8EF10951B46DD67811A39E791E248501B427AEB3F7D65FADC7A32C27A8
280DAD3EE5A5DC8377> |
3 <001C60D8A8C9B7A73D40> |
70 <001C60D8A8C9B7A73DB9CA3CB59A9362C567E6693756DF87B8701FBEA898
1D0FB41BC57FB14082E0302C46C467D65EA7EED5997CA9CC4C07D177F85EA614
2B8109737791C7B75F03EC4D414D20766F94E802E055EF0E5AF698799D84806F
83F6347388411C500D7944BE94549DBBADCD7CDD5F3B250E41D2BDB64BE408C8
8E0783A9CB9044EA5B4469936D654710860D0CE082D416E670610318DCB9A758
B604E445D057A118ED8BE989140932> |
87 <001C60D8A8C9B7A73DB95A84ADEFC27CA3118991A6B06AA4BCC9E401A199
AD2ED0215A3F452FFBD87E172E65C43C3D01B21353688DD3BB2DFBBF62609414
A723D4BE0F998947300EBE6F71534F58F1FD8E961B2033B7C6342D1571C25D27
0CD36FEE40498320DC6EEF544393F5BA4E9A1B022D> |
81 <001C60D8A8C9B7A73DB97D2EA733FEF9D2030029A5B2CF3B73FD3A017E40
3C7A7F9D86A600F5CA059F84CCCD28FD5E3C2836D8BCB466DDAA22DF5C96BA4E
9D33A71AF7D3DB5B984D37F308AF6E98148C08AC3D8187DD889E07605A4D6C27
91634517BDF87F17CE0B8D6E5CB87F3548E78F04628C0A6D80958439CE6AAB2F
332503B61365172184BDB9AB347893A9B5FBCB8B7E77E4909B88C3FAAA5D8ABA
37287B6C4E30FB1A38837394659F56FAACCFFEF31089BC2720E27F908DB1CF2A
91E8283B42A9> |
51 <001C60D8A8C9B7A73DB987322EDD44B1DF5405863ACED3B083D42BDC3CA1
425C498E01A1A6F64FDE260D8348135FE57044BB589DB85A7B2403D17C109F67
BBA086E6D4F909213C7237AE42BC80977AD42AC646ACA0940F4F63BB92FC411C
C7E84797EB3055F01B1CBCF10D6CB38B050E79477808B065131DA19434E95AF0
401CC12700FB39D2A859560EC5A5FC62E01F1350431C233B2FD6E62066C2B556
BFF9> |
!
end
end end
%ADOEndSubsetFont
/ZQYXUN+SimSun-GBK-EUC-H-Identity-H findfont [14.0035 0 0 -14.0035 0 0 ]msf
57.1652 229.364 mo
(\000,\000P\000S\000R\000V\000V\000L\000E\000O\000H\000\003)
[7.00175 7.00175 7.00175 7.00175 7.00175 7.00175 7.00175 7.00175 7.00175 7.00175 0 ]xsh
64.1389 246.182 mo
(\000O\000R\000F\000D\000W\000L\000R\000Q)
[7.01009 7.01008 7.01009 7.01009 7.01008 7.01009 7.01008 0 ]xsh
71.8829 264.848 mo
(\000,\000Q\000L\000W\000L\000D\000O\000\003)
[7.01009 7.01008 7.01009 7.01008 7.01009 7.01009 7.01009 0 ]xsh
68.424 281.597 mo
(\000O\000R\000F\000D\000W\000L\000R\000Q)
[6.99342 6.99342 6.99342 6.99342 6.99342 6.99341 6.99342 0 ]xsh
68.424 301.678 mo
(\0003\000R\000V\000V\000L\000E\000O\000H\000\003)
[7.00175 7.00175 7.00175 7.00175 7.00175 7.00175 7.00175 7.00175 0 ]xsh
68.424 318.496 mo
(\000O\000R\000F\000D\000W\000L\000R\000Q)
[6.99342 6.99342 6.99342 6.99342 6.99342 6.99341 6.99342 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/ZQYXUN+SimSun-GBK-EUC-H-Identity-H uf
/ZQYXUN+SimSun-GBK-EUC-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
