%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: revised description.pdf
%%Creator: Adobe Acrobat 9.4.3
%%For: Jerry
%%CreationDate: 2011/5/16, 20:31:02
%%BoundingBox: 0 0 596 440
%%HiResBoundingBox: 0 0 595.2760 439.1257
%%CropBox: 0 0 595.2760 439.1257
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1061 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2011-05-16T20:29:51+08:00"
   xmp:CreatorTool="Acrobat PDFMaker 9.1 Visio 版"
   xmp:ModifyDate="2011-05-16T20:30:30+08:00"
   xmp:MetadataDate="2011-05-16T20:30:30+08:00"
   pdf:Producer="Acrobat Distiller 9.4.2 (Windows)"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:c74f3d60-0817-437c-b066-291e3cad6114"
   xmpMM:InstanceID="uuid:54fd6d63-5694-4c25-ade2-a1920172b10e">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Jerry</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -439.126 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 439.126 li
595.276 439.126 li
595.276 0 li
cp
clp
[1 0 0 1 0 0 ]ct
4.5016 lw
0 lc
0 lj
2 ml
[] 0 dsh
false sadj
25.5773 355.341 mo
25.5773 13.6925 li
false sop
.750179 .679652 .670191 .901488 cmyk
@
25.5773 355.341 mo
578.43 355.341 li
@
25.5773 155.454 mo
580.092 155.454 li
@
25.5773 13.6925 mo
581.243 15.9944 li
@
221.179 355.341 mo
223.098 14.4598 li
@
370.487 353.934 mo
371.446 15.0992 li
@
-1.27885 356.044 mo
16.6252 365.828 li
19.6306 359.945 24.9378 355.533 31.2682 353.614 cv
13.3641 344.662 li
6.96981 345.941 1.53465 350.161 -1.27885 356.044 cv
cp
17.3926 338.14 mo
35.2966 347.092 li
45.0799 342.232 li
27.1759 333.28 li
17.3926 338.14 li
cp
52.3695 343 mo
34.4654 334.112 li
31.2682 335.327 li
45.0799 342.232 li
45.0799 346.708 li
52.3695 343 li
cp
16.6252 369.025 mo
52.3695 351.185 li
52.3695 343 li
31.2682 353.614 li
24.9378 355.533 19.6306 359.945 16.6252 365.828 cv
16.6252 369.025 li
0 .990631 1 .000396735 cmyk
ef
.239787 lw
1 lc
1 lj
10 ml
-1.27885 356.044 mo
16.6252 365.828 li
19.6306 359.945 24.9378 355.533 31.2682 353.614 cv
13.3641 344.662 li
6.96981 345.941 1.53465 350.161 -1.27885 356.044 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
17.3925 338.14 mo
35.2966 347.092 li
45.0799 342.232 li
27.1759 333.28 li
17.3925 338.14 li
cp
@
52.3695 343 mo
34.4654 334.112 li
31.2682 335.327 li
45.0799 342.232 li
45.0799 346.709 li
52.3695 343 li
cp
@
16.6252 369.025 mo
52.3695 351.185 li
52.3695 343 li
31.2682 353.614 li
24.9378 355.533 19.6306 359.945 16.6252 365.828 cv
16.6252 369.025 li
cp
@
13.3641 344.662 mo
17.3925 338.14 li
35.2966 347.092 li
31.2682 353.614 li
13.3641 344.662 li
cp
35.2966 347.092 mo
45.0799 342.233 li
49.9396 344.215 li
31.2682 353.614 li
35.2966 347.092 li
.895628 .7673 0 0 cmyk
ef
13.3641 344.662 mo
17.3925 338.14 li
35.2966 347.092 li
31.2682 353.614 li
13.3641 344.662 li
cp
.750179 .679652 .670191 .901488 cmyk
@
35.2966 347.092 mo
45.0799 342.233 li
49.9396 344.215 li
31.2682 353.614 li
35.2966 347.092 li
cp
@
22.3162 364.996 mo
22.3162 362.758 23.4032 360.904 24.746 360.904 cv
26.0888 360.904 27.1759 362.758 27.1759 364.996 cv
27.1759 367.234 26.0888 369.025 24.746 369.025 cv
23.4032 369.025 22.3162 367.234 22.3162 364.996 cv
cp
40.9876 354.382 mo
40.9876 352.144 42.0746 350.353 43.4174 350.353 cv
44.7602 350.353 45.9112 352.144 45.9112 354.382 cv
45.9112 356.684 44.7602 358.474 43.4174 358.474 cv
42.0746 358.474 40.9876 356.684 40.9876 354.382 cv
0 0 0 0 cmyk
ef
.720426 lw
22.3162 364.996 mo
22.3162 362.758 23.4032 360.904 24.746 360.904 cv
26.0888 360.904 27.1759 362.758 27.1759 364.996 cv
27.1759 367.234 26.0888 369.025 24.746 369.025 cv
23.4032 369.025 22.3162 367.234 22.3162 364.996 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
40.9876 354.382 mo
40.9876 352.144 42.0746 350.353 43.4174 350.353 cv
44.7602 350.353 45.9112 352.144 45.9112 354.382 cv
45.9112 356.684 44.7602 358.474 43.4174 358.474 cv
42.0746 358.474 40.9876 356.684 40.9876 354.382 cv
cp
@
-1.27885 356.044 mo
-1.27885 360.137 li
16.6252 369.025 li
16.6252 365.828 li
-1.27885 356.044 li
0 0 0 0 cmyk
ef
.239787 lw
-1.27885 356.044 mo
-1.27885 360.137 li
16.6252 369.025 li
16.6252 365.828 li
-1.27885 356.044 li
cp
.750179 .679652 .670191 .901488 cmyk
@
41.1155 18.4243 mo
51.5382 24.0513 li
53.3286 20.6623 56.3979 18.1046 60.0426 16.9536 cv
49.6199 11.7742 li
45.9112 12.5415 42.778 14.9713 41.1155 18.4243 cv
cp
51.9858 8.00153 mo
62.4085 13.1809 li
68.0995 10.3674 li
57.6767 5.18802 li
51.9858 8.00153 li
cp
72.3197 10.815 mo
61.9609 5.63562 li
60.0426 6.33902 li
68.0995 10.3674 li
68.0995 12.9891 li
72.3197 10.815 li
cp
51.5382 25.9696 mo
72.3197 15.5468 li
72.3197 10.815 li
60.0426 16.9536 li
56.3979 18.1046 53.3286 20.6623 51.5382 24.0513 cv
51.5382 25.9696 li
0 .990631 1 .000396735 cmyk
ef
41.1155 18.4243 mo
51.5382 24.0513 li
53.3286 20.6623 56.3979 18.1046 60.0426 16.9536 cv
49.6199 11.7742 li
45.9112 12.5415 42.778 14.9713 41.1155 18.4243 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
51.9858 8.00153 mo
62.4085 13.1809 li
68.0995 10.3674 li
57.6767 5.18805 li
51.9858 8.00153 li
cp
@
72.3197 10.815 mo
61.9609 5.63562 li
60.0426 6.33899 li
68.0995 10.3674 li
68.0995 12.9891 li
72.3197 10.815 li
cp
@
51.5382 25.9695 mo
72.3197 15.5468 li
72.3197 10.815 li
60.0426 16.9536 li
56.3979 18.1046 53.3286 20.6623 51.5382 24.0513 cv
51.5382 25.9695 li
cp
@
49.6199 11.7742 mo
51.9858 8.00153 li
62.4085 13.1809 li
60.0426 16.9536 li
49.6199 11.7742 li
cp
62.4085 13.1809 mo
68.0995 10.3674 li
70.913 11.5184 li
60.0426 16.9536 li
62.4085 13.1809 li
.895628 .7673 0 0 cmyk
ef
49.6199 11.7742 mo
51.9858 8.00153 li
62.4085 13.1809 li
60.0426 16.9536 li
49.6199 11.7742 li
cp
.750179 .679652 .670191 .901488 cmyk
@
62.4085 13.1809 mo
68.0995 10.3674 li
70.913 11.5184 li
60.0426 16.9536 li
62.4085 13.1809 li
cp
@
54.8632 23.6036 mo
54.8632 22.2608 55.5027 21.2378 56.27 21.2378 cv
57.0373 21.2378 57.6767 22.2608 57.6767 23.6036 cv
57.6767 24.8825 57.0373 25.9695 56.27 25.9695 cv
55.5027 25.9695 54.8632 24.8825 54.8632 23.6036 cv
cp
65.7336 17.4651 mo
65.7336 16.1223 66.373 15.0992 67.1403 15.0992 cv
67.9076 15.0992 68.5471 16.1223 68.5471 17.4651 cv
68.5471 18.744 67.9076 19.831 67.1403 19.831 cv
66.373 19.831 65.7336 18.744 65.7336 17.4651 cv
0 0 0 0 cmyk
ef
.720426 lw
54.8632 23.6036 mo
54.8632 22.2608 55.5027 21.2378 56.27 21.2378 cv
57.0373 21.2378 57.6767 22.2608 57.6767 23.6036 cv
57.6767 24.8825 57.0373 25.9695 56.27 25.9695 cv
55.5027 25.9695 54.8632 24.8825 54.8632 23.6036 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
65.7336 17.4651 mo
65.7336 16.1223 66.373 15.0992 67.1403 15.0992 cv
67.9076 15.0992 68.5471 16.1223 68.5471 17.4651 cv
68.5471 18.744 67.9076 19.831 67.1403 19.831 cv
66.373 19.831 65.7336 18.744 65.7336 17.4651 cv
cp
@
41.1155 18.4243 mo
41.1155 20.7262 li
51.5382 25.9696 li
51.5382 24.0513 li
41.1155 18.4243 li
0 0 0 0 cmyk
ef
.239787 lw
41.1155 18.4243 mo
41.1155 20.7262 li
51.5382 25.9696 li
51.5382 24.0513 li
41.1155 18.4243 li
cp
.750179 .679652 .670191 .901488 cmyk
@
377.137 22.5806 mo
358.977 31.6605 li
344.078 24.2431 li
362.238 15.1632 li
377.137 22.5806 li
cp
363.901 11.4545 mo
345.741 20.5344 li
335.83 15.5468 li
353.989 6.46689 li
363.901 11.4545 li
cp
322.593 13.5006 mo
340.753 4.42072 li
349.833 8.12943 li
335.83 15.5468 li
332.505 18.4243 li
322.593 13.5006 li
cp
358.977 39.9092 mo
322.593 21.7493 li
322.593 13.5006 li
358.977 31.6605 li
358.977 39.9092 li
.789425 .534295 0 0 cmyk
ef
377.137 22.5806 mo
358.977 31.6605 li
344.078 24.2431 li
362.238 15.1632 li
377.137 22.5806 li
cp
.750179 .679652 .670191 .901488 cmyk
@
363.901 11.4545 mo
345.741 20.5344 li
335.83 15.5468 li
353.989 6.46692 li
363.901 11.4545 li
cp
@
322.593 13.5006 mo
340.753 4.42072 li
349.833 8.12943 li
335.83 15.5468 li
332.504 18.4243 li
322.593 13.5006 li
cp
@
358.977 39.9092 mo
322.593 21.7493 li
322.593 13.5007 li
358.977 31.6605 li
358.977 39.9092 li
cp
@
368.057 18.0406 mo
363.901 11.4545 li
345.741 20.5344 li
349.833 27.1205 li
368.057 18.0406 li
cp
345.741 20.5344 mo
335.83 15.5468 li
332.504 18.4243 li
349.833 27.1205 li
345.741 20.5344 li
.789425 .534295 0 0 cmyk
ef
368.057 18.0406 mo
363.901 11.4545 li
345.741 20.5344 li
349.833 27.1205 li
368.057 18.0406 li
cp
.750179 .679652 .670191 .901488 cmyk
@
345.741 20.5344 mo
335.83 15.5468 li
332.504 18.4243 li
349.833 27.1205 li
345.741 20.5344 li
cp
@
350.664 34.9856 mo
350.664 32.6836 349.577 30.8293 348.234 30.8293 cv
346.828 30.8293 345.741 32.6836 345.741 34.9856 cv
345.741 37.2875 346.828 39.1419 348.234 39.1419 cv
349.577 39.1419 350.664 37.2875 350.664 34.9856 cv
cp
331.673 24.2431 mo
331.673 21.9412 330.586 20.0868 329.179 20.0868 cv
327.837 20.0868 326.75 21.9412 326.75 24.2431 cv
326.75 26.5451 327.837 28.3994 329.179 28.3994 cv
330.586 28.3994 331.673 26.5451 331.673 24.2431 cv
.789425 .534295 0 0 cmyk
ef
.720426 lw
350.664 34.9856 mo
350.664 32.6836 349.577 30.8293 348.234 30.8293 cv
346.828 30.8293 345.741 32.6836 345.741 34.9856 cv
345.741 37.2875 346.828 39.1419 348.234 39.1419 cv
349.577 39.1419 350.664 37.2875 350.664 34.9856 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
331.673 24.2431 mo
331.673 21.9411 330.586 20.0868 329.179 20.0868 cv
327.837 20.0868 326.75 21.9411 326.75 24.2431 cv
326.75 26.545 327.837 28.3994 329.179 28.3994 cv
330.586 28.3994 331.673 26.545 331.673 24.2431 cv
cp
@
377.137 22.5806 mo
377.137 30.8293 li
358.977 39.9092 li
358.977 31.6605 li
377.137 22.5806 li
.789425 .534295 0 0 cmyk
ef
.239787 lw
377.137 22.5806 mo
377.137 30.8293 li
358.977 39.9092 li
358.977 31.6605 li
377.137 22.5806 li
cp
.750179 .679652 .670191 .901488 cmyk
@
366.394 33.323 mo
361.407 35.8168 li
361.407 33.323 li
366.394 30.8293 li
366.394 33.323 li
.789425 .534295 0 0 cmyk
ef
375.474 28.3994 mo
370.487 30.8293 li
370.487 28.3994 li
375.474 25.9056 li
375.474 28.3994 li
ef
90.7354 15.9944 mo
81.3357 20.7262 li
73.5986 16.8257 li
82.9982 12.0939 li
90.7354 15.9944 li
cp
83.8934 10.1756 mo
74.4299 14.9074 li
69.2505 12.3497 li
78.714 7.61789 li
83.8934 10.1756 li
cp
62.4085 11.2626 mo
71.8721 6.53085 li
76.6039 8.44913 li
69.2505 12.3497 li
67.5879 13.8204 li
62.4085 11.2626 li
cp
81.3357 25.0104 mo
62.4085 15.5468 li
62.4085 11.2626 li
81.3357 20.7262 li
81.3357 25.0104 li
ef
90.7354 15.9944 mo
81.3357 20.7262 li
73.5986 16.8257 li
82.9982 12.0939 li
90.7354 15.9944 li
cp
.750179 .679652 .670191 .901488 cmyk
@
83.8934 10.1756 mo
74.4299 14.9074 li
69.2505 12.3497 li
78.7141 7.61789 li
83.8934 10.1756 li
cp
@
62.4085 11.2626 mo
71.8721 6.53085 li
76.6039 8.44916 li
69.2505 12.3497 li
67.5879 13.8204 li
62.4085 11.2626 li
cp
@
81.3357 25.0104 mo
62.4085 15.5468 li
62.4085 11.2626 li
81.3357 20.7262 li
81.3357 25.0104 li
cp
@
86.0036 13.6285 mo
83.8934 10.1756 li
74.4299 14.9074 li
76.6039 18.3603 li
86.0036 13.6285 li
cp
74.4299 14.9074 mo
69.2505 12.3497 li
67.5879 13.8203 li
76.6039 18.3603 li
74.4299 14.9074 li
.789425 .534295 0 0 cmyk
ef
86.0036 13.6285 mo
83.8934 10.1756 li
74.4299 14.9074 li
76.6039 18.3603 li
86.0036 13.6285 li
cp
.750179 .679652 .670191 .901488 cmyk
@
74.4299 14.9074 mo
69.2505 12.3497 li
67.5879 13.8204 li
76.6039 18.3603 li
74.4299 14.9074 li
cp
@
76.9876 22.4527 mo
76.9876 21.2378 76.4121 20.2786 75.7087 20.2786 cv
75.0054 20.2786 74.4299 21.2378 74.4299 22.4527 cv
74.4299 23.6037 75.0054 24.5628 75.7087 24.5628 cv
76.4121 24.5628 76.9876 23.6037 76.9876 22.4527 cv
cp
67.1403 16.8257 mo
67.1403 15.6747 66.5648 14.7155 65.8615 14.7155 cv
65.1581 14.7155 64.5826 15.6747 64.5826 16.8257 cv
64.5826 18.0406 65.1581 18.9998 65.8615 18.9998 cv
66.5648 18.9998 67.1403 18.0406 67.1403 16.8257 cv
.789425 .534295 0 0 cmyk
ef
.720426 lw
76.9876 22.4527 mo
76.9876 21.2378 76.4121 20.2786 75.7087 20.2786 cv
75.0054 20.2786 74.4299 21.2378 74.4299 22.4527 cv
74.4299 23.6037 75.0054 24.5628 75.7087 24.5628 cv
76.4121 24.5628 76.9876 23.6037 76.9876 22.4527 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
67.1403 16.8257 mo
67.1403 15.6747 66.5648 14.7156 65.8615 14.7156 cv
65.1581 14.7156 64.5826 15.6747 64.5826 16.8257 cv
64.5826 18.0406 65.1581 18.9998 65.8615 18.9998 cv
66.5648 18.9998 67.1403 18.0406 67.1403 16.8257 cv
cp
@
90.7354 15.9944 mo
90.7354 20.2786 li
81.3357 25.0104 li
81.3357 20.7262 li
90.7354 15.9944 li
.789425 .534295 0 0 cmyk
ef
.239787 lw
90.7354 15.9944 mo
90.7354 20.2786 li
81.3357 25.0104 li
81.3357 20.7262 li
90.7354 15.9944 li
cp
.750179 .679652 .670191 .901488 cmyk
@
85.1723 21.5575 mo
82.6146 22.8363 li
82.6146 21.5575 li
85.1723 20.2786 li
85.1723 21.5575 li
.789425 .534295 0 0 cmyk
ef
89.9041 18.9998 mo
87.3464 20.2786 li
87.3464 18.9998 li
89.9041 17.7209 li
89.9041 18.9998 li
ef
175.524 148.101 mo
173.35 148.101 li
171.879 144.201 li
166.828 144.201 li
165.421 148.101 li
163.375 148.101 li
168.298 135.057 li
170.345 135.057 li
cp
171.304 142.538 mo
170.281 139.916 169.705 138.446 169.577 138.126 cv
169.449 137.742 169.258 137.295 169.13 136.783 cv
169.385 136.783 li
169.258 137.55 169.066 138.254 168.746 139.021 cv
167.339 142.538 li
.750179 .679652 .670191 .901488 cmyk
f
182.43 140.939 mo
183.197 141.067 183.773 141.451 184.156 142.09 cv
184.604 142.73 184.796 143.433 184.796 144.201 cv
184.796 145.352 184.412 146.375 183.517 147.142 cv
182.622 147.909 181.599 148.293 180.384 148.293 cv
179.233 148.293 178.274 147.973 177.506 147.27 cv
176.739 146.566 176.291 145.671 176.163 144.392 cv
178.082 144.201 li
178.21 145.096 178.465 145.735 178.849 146.119 cv
179.233 146.502 179.744 146.694 180.384 146.694 cv
181.023 146.694 181.599 146.439 182.11 145.927 cv
182.558 145.479 182.814 144.904 182.814 144.201 cv
182.814 143.561 182.558 142.986 182.174 142.602 cv
181.726 142.154 181.215 141.962 180.512 141.962 cv
180.192 141.962 179.808 141.962 179.233 142.09 cv
179.425 140.364 li
179.936 140.364 180.32 140.364 180.512 140.3 cv
180.767 140.3 181.023 140.172 181.279 140.044 cv
181.535 139.916 181.79 139.724 181.982 139.469 cv
182.174 139.149 182.238 138.829 182.238 138.446 cv
182.238 137.87 182.046 137.423 181.663 137.103 cv
181.279 136.783 180.831 136.655 180.32 136.655 cv
179.744 136.655 179.297 136.847 178.913 137.231 cv
178.593 137.55 178.337 138.126 178.21 138.957 cv
176.355 138.637 li
176.547 137.359 176.995 136.463 177.762 135.888 cv
178.465 135.312 179.297 135.057 180.32 135.057 cv
181.407 135.057 182.302 135.376 183.069 136.016 cv
183.837 136.719 184.156 137.55 184.156 138.51 cv
184.156 139.724 183.581 140.62 182.43 141.131 cv
f
39.4529 43.1703 mo
37.2149 43.1703 li
35.7442 39.3337 li
30.7567 39.3337 li
29.3499 43.1703 li
27.2398 43.1703 li
32.1634 30.1898 li
34.2096 30.1898 li
cp
35.1687 37.6712 mo
34.1457 35.0495 33.5702 33.5149 33.4423 33.1951 cv
33.3144 32.8754 33.1865 32.4278 33.0586 31.8523 cv
33.3144 31.8523 li
33.1226 32.6197 32.9307 33.387 32.675 34.0903 cv
31.2682 37.6712 li
f
48.6608 40.1649 mo
46.9343 40.1649 li
46.9343 43.1703 li
45.016 43.1703 li
45.016 40.1649 li
39.5808 40.1649 li
39.5808 38.5024 li
45.3997 30.1898 li
46.9343 30.1898 li
46.9343 38.3745 li
48.6608 38.3745 li
cp
45.016 38.3745 mo
45.016 33.0033 li
45.2718 33.0033 li
41.4352 38.3745 li
f
340.945 237.558 mo
341.648 237.685 342.288 238.069 342.671 238.645 cv
343.119 239.22 343.311 239.859 343.311 240.627 cv
343.311 241.394 343.119 242.034 342.735 242.673 cv
342.352 243.312 341.84 243.76 341.137 244.016 cv
340.497 244.336 339.538 244.463 338.387 244.463 cv
333.4 244.463 li
333.4 231.483 li
338.323 231.483 li
339.922 231.483 341.009 231.867 341.712 232.57 cv
342.352 233.273 342.671 234.041 342.671 234.872 cv
342.671 235.447 342.544 236.023 342.224 236.534 cv
341.904 236.982 341.457 237.366 340.945 237.558 cv
cp
335.446 236.79 mo
338.004 236.79 li
338.515 236.79 338.963 236.726 339.346 236.662 cv
339.73 236.662 340.05 236.471 340.306 236.215 cv
340.561 236.023 340.689 235.639 340.689 235.128 cv
340.689 234.552 340.561 234.169 340.306 233.913 cv
339.986 233.657 339.666 233.465 339.282 233.401 cv
338.899 233.401 338.387 233.337 337.748 233.337 cv
335.446 233.337 li
cp
335.446 242.609 mo
338.387 242.609 li
339.474 242.609 340.242 242.481 340.625 242.098 cv
341.009 241.714 341.201 241.266 341.201 240.627 cv
341.201 239.987 341.009 239.54 340.561 239.156 cv
340.114 238.836 339.346 238.645 338.195 238.645 cv
335.446 238.645 li
f
351.112 244.463 mo
349.194 244.463 li
349.194 234.616 li
348.554 235.32 347.531 235.959 346.06 236.471 cv
346.06 234.68 li
347.851 233.785 349.13 232.698 349.769 231.419 cv
351.112 231.419 li
f
241.705 141.131 mo
242.473 141.323 243.048 141.707 243.432 142.282 cv
243.879 142.858 244.071 143.497 244.071 144.201 cv
244.071 144.968 243.879 145.671 243.496 146.247 cv
243.112 146.886 242.6 147.334 241.897 147.653 cv
241.258 147.909 240.298 148.101 239.147 148.101 cv
234.16 148.101 li
234.16 135.057 li
239.084 135.057 li
240.682 135.121 241.769 135.44 242.473 136.144 cv
243.112 136.847 243.432 137.614 243.432 138.51 cv
243.432 139.085 243.304 139.597 242.984 140.108 cv
242.664 140.62 242.281 140.939 241.705 141.131 cv
cp
236.206 140.364 mo
238.764 140.364 li
239.275 140.364 239.787 140.364 240.107 140.3 cv
240.49 140.236 240.81 140.108 241.066 139.852 cv
241.322 139.597 241.449 139.213 241.449 138.701 cv
241.449 138.19 241.322 137.742 241.066 137.486 cv
240.81 137.231 240.426 137.103 240.043 137.039 cv
239.659 136.975 239.147 136.911 238.508 136.911 cv
236.206 136.911 li
cp
236.206 146.247 mo
239.147 146.247 li
240.235 146.247 241.002 146.055 241.385 145.671 cv
241.769 145.352 241.961 144.84 241.961 144.201 cv
241.961 143.625 241.769 143.113 241.322 142.73 cv
240.874 142.41 240.107 142.218 238.956 142.218 cv
236.206 142.218 li
f
254.11 148.101 mo
245.414 148.101 li
245.414 147.206 245.67 146.375 246.181 145.671 cv
246.693 144.904 247.588 144.073 248.931 143.177 cv
249.826 142.282 250.529 141.515 251.169 140.812 cv
251.808 140.108 252.128 139.405 252.128 138.701 cv
252.128 138.126 251.936 137.614 251.552 137.231 cv
251.105 136.847 250.593 136.655 249.954 136.655 cv
249.314 136.655 248.739 136.847 248.355 137.231 cv
247.908 137.614 247.652 138.318 247.652 139.213 cv
245.734 139.021 li
245.798 137.678 246.245 136.655 247.012 136.016 cv
247.844 135.376 248.803 135.057 249.954 135.057 cv
251.297 135.057 252.256 135.376 253.023 136.144 cv
253.727 136.847 254.11 137.678 254.11 138.701 cv
254.11 139.597 253.79 140.428 253.215 141.259 cv
252.576 142.09 251.425 143.241 249.698 144.648 cv
248.803 145.352 248.163 145.863 247.908 146.247 cv
254.11 146.247 li
f
92.8455 36.2005 mo
93.6128 36.3923 94.1883 36.776 94.572 37.3515 cv
95.0196 37.9269 95.2114 38.5664 95.2114 39.3337 cv
95.2114 40.0371 95.0196 40.7404 94.6359 41.3799 cv
94.2522 41.9554 93.7407 42.4669 93.0373 42.7227 cv
92.3979 43.0424 91.4387 43.1703 90.2878 43.1703 cv
85.3002 43.1703 li
85.3002 30.1898 li
90.2238 30.1898 li
91.8224 30.1898 92.9094 30.5096 93.6128 31.2129 cv
94.2522 31.9163 94.572 32.7476 94.572 33.5788 cv
94.572 34.1543 94.4441 34.7298 94.1244 35.1774 cv
93.8046 35.6889 93.421 36.0726 92.8455 36.2005 cv
cp
87.3464 35.4971 mo
89.9041 35.4971 li
90.4156 35.4971 90.9272 35.4332 91.2469 35.3692 cv
91.6306 35.3053 91.9503 35.1774 92.2061 34.9216 cv
92.4618 34.6659 92.5897 34.3461 92.5897 33.7706 cv
92.5897 33.2591 92.4618 32.8754 92.2061 32.6197 cv
91.9503 32.3639 91.5666 32.1721 91.183 32.1081 cv
90.7993 32.0442 90.2878 32.0442 89.6483 32.0442 cv
87.3464 32.0442 li
cp
87.3464 41.3159 mo
90.2878 41.3159 li
91.3748 41.3159 92.1421 41.1241 92.5258 40.8044 cv
92.9094 40.4207 93.1013 39.9731 93.1013 39.3337 cv
93.1013 38.6943 92.9094 38.1827 92.4618 37.863 cv
92.0782 37.4793 91.2469 37.3515 90.0959 37.3515 cv
87.3464 37.3515 li
f
103.076 36.0086 mo
103.78 36.1365 104.355 36.5202 104.803 37.1596 cv
105.25 37.863 105.442 38.5024 105.442 39.2697 cv
105.442 40.4847 104.995 41.4438 104.099 42.2112 cv
103.268 42.9785 102.181 43.3621 100.966 43.3621 cv
99.8153 43.3621 98.8561 43.0424 98.0888 42.339 cv
97.3215 41.6996 96.9379 40.7404 96.81 39.5255 cv
98.6643 39.2697 li
98.8561 40.1649 99.1119 40.8044 99.4956 41.188 cv
99.8792 41.5717 100.391 41.7635 100.966 41.7635 cv
101.67 41.7635 102.245 41.5078 102.693 41.0602 cv
103.204 40.5486 103.396 39.9731 103.396 39.3337 cv
103.396 38.6303 103.204 38.1188 102.757 37.6712 cv
102.373 37.2236 101.798 37.0317 101.094 37.0317 cv
100.838 37.0317 100.391 37.0957 99.8153 37.1596 cv
100.071 35.4971 li
100.519 35.4971 100.902 35.4332 101.158 35.4332 cv
101.35 35.3692 101.606 35.3053 101.925 35.1774 cv
102.181 34.9856 102.373 34.7937 102.565 34.538 cv
102.757 34.2822 102.821 33.9625 102.821 33.5788 cv
102.821 33.0033 102.629 32.5557 102.245 32.236 cv
101.925 31.9163 101.478 31.7245 100.966 31.7245 cv
100.391 31.7245 99.9432 31.9163 99.5595 32.3 cv
99.1759 32.6836 98.9201 33.2591 98.8561 34.0264 cv
96.9379 33.7067 li
97.1297 32.4918 97.6412 31.5326 98.3446 30.9572 cv
99.048 30.3817 99.9432 30.1259 100.902 30.1259 cv
101.989 30.1259 102.949 30.4456 103.652 31.149 cv
104.419 31.7884 104.803 32.6197 104.803 33.5788 cv
104.803 34.8577 104.227 35.7529 103.076 36.2644 cv
f
57.2291 332.385 mo
54.9911 332.385 li
53.5204 328.549 li
48.5329 328.549 li
47.1261 332.385 li
45.016 332.385 li
49.9396 319.405 li
51.9858 319.405 li
cp
52.9449 326.822 mo
51.9219 324.201 51.3464 322.73 51.2185 322.41 cv
51.0906 322.026 50.9627 321.579 50.8348 321.067 cv
51.0906 321.067 li
50.8988 321.835 50.7069 322.538 50.4512 323.305 cv
49.0444 326.822 li
f
337.428 46.1756 mo
338.195 46.3035 338.771 46.6872 339.155 47.2626 cv
339.602 47.8381 339.794 48.4776 339.794 49.2449 cv
339.794 50.0122 339.602 50.6516 339.219 51.2911 cv
338.899 51.9305 338.323 52.3781 337.684 52.6339 cv
336.98 52.9536 336.085 53.0815 334.934 53.0815 cv
329.883 53.0815 li
329.883 40.101 li
334.806 40.101 li
336.405 40.101 337.556 40.4847 338.195 41.188 cv
338.835 41.8914 339.219 42.6588 339.219 43.49 cv
339.219 44.0655 339.027 44.641 338.707 45.1525 cv
338.451 45.6001 338.004 45.9838 337.428 46.1756 cv
cp
331.929 45.4083 mo
334.487 45.4083 li
335.062 45.4083 335.51 45.3444 335.83 45.2804 cv
336.213 45.2804 336.533 45.0886 336.789 44.8328 cv
337.044 44.641 337.172 44.2573 337.172 43.7458 cv
337.172 43.1703 337.044 42.7866 336.789 42.5309 cv
336.533 42.2751 336.213 42.0833 335.83 42.0193 cv
335.382 42.0193 334.87 41.9554 334.295 41.9554 cv
331.929 41.9554 li
cp
331.929 51.2271 mo
334.87 51.2271 li
335.957 51.2271 336.725 51.0353 337.108 50.7156 cv
337.492 50.3319 337.748 49.8843 337.748 49.2449 cv
337.748 48.6055 337.492 48.1578 337.044 47.7742 cv
336.661 47.4545 335.83 47.2626 334.679 47.2626 cv
331.929 47.2626 li
f
374.323 285.835 mo
361.79 285.835 351.624 275.732 351.624 263.199 cv
351.624 250.666 361.79 240.499 374.323 240.499 cv
386.792 240.499 396.959 250.666 396.959 263.199 cv
396.959 275.732 386.792 285.835 374.323 285.835 cv
cp
@
204.171 178.09 mo
191.638 178.09 181.471 167.987 181.471 155.455 cv
181.471 142.922 191.638 132.755 204.171 132.755 cv
216.703 132.755 226.87 142.922 226.87 155.455 cv
226.87 167.987 216.703 178.09 204.171 178.09 cv
cp
@
221.179 197.977 mo
208.647 197.977 198.48 187.81 198.48 175.277 cv
198.48 162.744 208.647 152.577 221.179 152.577 cv
233.712 152.577 243.879 162.744 243.879 175.277 cv
243.879 187.81 233.712 197.977 221.179 197.977 cv
cp
@
65.222 44.8328 mo
52.6892 44.8328 42.5861 34.7298 42.5861 22.1969 cv
42.5861 9.66406 52.6892 -.502899 65.222 -.502899 cv
77.7549 -.502899 87.9219 9.66406 87.9219 22.1969 cv
87.9219 34.7298 77.7549 44.8328 65.222 44.8328 cv
cp
@
2.16021 lw
17.0728 175.277 mo
17.0728 355.341 li
17.0728 273.494 li
0 .990631 1 .000396735 cmyk
@
12.341 274.645 mo
17.0728 265.309 li
21.7407 274.645 li
12.341 274.645 li
ef
212.675 198.041 mo
212.675 339.739 li
212.675 277.074 li
@
208.007 278.289 mo
212.675 268.89 li
217.343 278.289 li
208.007 278.289 li
ef
215.488 363.845 mo
25.5773 363.845 li
112.348 363.845 li
@
111.197 359.177 mo
120.533 363.845 li
111.197 368.513 li
111.197 359.177 li
ef
365.819 363.845 mo
232.497 363.845 li
290.941 363.845 li
@
289.79 359.177 mo
299.126 363.845 li
289.79 368.513 li
289.79 359.177 li
ef
378.799 288.712 mo
378.799 343.959 li
378.799 324.52 li
@
374.132 325.671 mo
378.799 316.336 li
383.467 325.671 li
374.132 325.671 li
ef
17.0728 26.7368 mo
17.0728 146.95 li
17.0728 95.0282 li
@
12.341 96.1792 mo
17.0728 86.8435 li
21.7407 96.1792 li
12.341 96.1792 li
ef
48.2132 5.18802 mo
25.5773 5.18802 li
28.7105 5.18802 li
@
27.4956 .456238 mo
36.8952 5.18805 li
27.4956 9.8559 li
27.4956 .456238 li
ef
189.975 163.959 mo
34.0817 163.959 li
103.844 163.959 li
@
102.693 159.227 mo
112.028 163.959 li
102.693 168.627 li
102.693 159.227 li
ef
[.00213144 6.48171 ] 0 dsh
241.002 25.0104 mo
331.737 25.0104 li
294.586 25.0104 li
.874174 .544579 0 .00030518 cmyk
@
295.737 29.6783 mo
286.401 25.0104 li
295.737 20.3426 li
295.737 29.6783 li
ef
[2.16021 4.32149 ] 0 dsh
93.6128 25.0104 mo
212.675 25.0104 li
161.329 25.0104 li
@
162.48 29.6783 mo
153.144 25.0104 li
162.48 20.3426 li
162.48 29.6783 li
ef
[.00213144 6.48171 ] 0 dsh
232.497 127.064 mo
232.497 25.0104 li
232.497 67.8524 li
@
237.229 66.7014 mo
232.497 76.0371 li
227.83 66.7014 li
237.229 66.7014 li
ef
[2.16021 4.32149 ] 0 dsh
248.611 163.959 mo
340.242 163.959 li
302.643 163.959 li
@
303.794 168.627 mo
294.458 163.959 li
303.794 159.227 li
303.794 168.627 li
ef
[.00213144 6.48171 ] 0 dsh
356.803 144.073 mo
356.803 34.6019 li
356.803 81.1525 li
@
361.471 80.0015 mo
356.803 89.3372 li
352.071 80.0015 li
361.471 80.0015 li
ef
[2.16021 4.32149 ] 0 dsh
356.931 236.215 mo
356.355 163.959 li
356.611 191.902 li
@
361.279 190.687 mo
356.675 200.087 li
351.879 190.751 li
361.279 190.687 li
ef
482.004 163.959 mo
377.137 163.959 li
421.386 163.959 li
@
420.235 159.227 mo
429.57 163.959 li
420.235 168.627 li
420.235 159.227 li
ef
[41.0494 10.8021 15.1236 10.8021 15.1236 10.8021 ] 0 dsh
524.59 390.765 mo
524.59 424.783 li
524.59 415.959 li
0 .990631 1 .000396735 cmyk
@
519.858 417.11 mo
524.59 407.774 li
529.258 417.11 li
519.858 417.11 li
ef
505.599 417.366 mo
516.277 417.366 li
516.277 398.183 li
505.599 398.183 li
cp
0 0 0 0 cmyk
f
516.405 412.57 mo
514.487 412.57 li
513.144 409.181 li
508.668 409.181 li
507.453 412.57 li
505.599 412.57 li
509.947 401.06 li
511.801 401.06 li
cp
512.632 407.646 mo
511.737 405.344 511.226 404.002 511.098 403.682 cv
510.97 403.426 510.842 402.979 510.714 402.531 cv
510.97 402.531 li
510.842 403.17 510.65 403.874 510.394 404.513 cv
509.18 407.646 li
.750179 .679652 .670191 .901488 cmyk
f
[2.16021 4.32149 ] 0 dsh
552.917 390.765 mo
552.917 424.783 li
552.917 415.959 li
.874174 .544579 0 .00030518 cmyk
@
548.249 417.11 mo
552.917 407.774 li
557.584 417.11 li
548.249 417.11 li
ef
533.989 417.366 mo
544.668 417.366 li
544.668 398.183 li
533.989 398.183 li
cp
0 0 0 0 cmyk
f
541.854 406.431 mo
542.494 406.559 543.005 406.879 543.389 407.391 cv
543.773 407.902 543.965 408.478 543.965 409.181 cv
543.965 409.82 543.773 410.396 543.453 410.971 cv
543.133 411.547 542.622 411.931 542.046 412.186 cv
541.407 412.442 540.64 412.57 539.616 412.57 cv
535.14 412.57 li
535.14 401.06 li
539.489 401.06 li
540.895 401.06 541.918 401.316 542.494 401.955 cv
543.069 402.595 543.389 403.298 543.389 404.066 cv
543.389 404.577 543.261 405.025 543.005 405.472 cv
542.686 405.92 542.302 406.24 541.854 406.431 cv
cp
536.931 405.728 mo
539.233 405.728 li
539.68 405.728 540.128 405.728 540.448 405.664 cv
540.767 405.6 541.023 405.472 541.279 405.28 cv
541.471 405.025 541.599 404.705 541.599 404.257 cv
541.599 403.746 541.471 403.426 541.279 403.17 cv
541.023 402.978 540.703 402.787 540.384 402.787 cv
540.064 402.723 539.552 402.659 539.041 402.659 cv
536.931 402.659 li
cp
536.931 410.907 mo
539.552 410.907 li
540.512 410.907 541.215 410.78 541.535 410.46 cv
541.918 410.14 542.11 409.693 542.11 409.181 cv
542.11 408.605 541.918 408.158 541.535 407.838 cv
541.151 407.518 540.448 407.391 539.361 407.391 cv
536.931 407.391 li
.750179 .679652 .670191 .901488 cmyk
f
4.5016 lw
0 lc
0 lj
2 ml
[] 0 dsh
496.199 424.783 mo
496.199 387.952 li
@
457.833 400.421 mo
483.41 400.421 li
483.41 421.138 li
457.833 421.138 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[25.5773 0 0 -20.7176 457.833 38.7048 ]ct
<<
/T 1
/W 400 
/H 324 
/M[400 0 0 -324 0 324 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^r4
K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^r4
\,QM[!!i8u"8DirJ)UD-nGWCf+8Pp:rr)lt"6':Y!!!,srrDQe!!#7Zs8DuuJ,'$Dr;HZr#Q=Z&q"t*l
J,90F_#46=#QOh^!!",@s8DuuJ,'$Dq#16n#Q=Z&i;<QT&,ZA,rqla%!WW28!!",@s8DuuJ,'$Dq#16n
#Q=Z&JG]BI"8i)ur;-I!5Q?66!$D7@rVuqJq#:?`rVup'rr2utq>gQqrVlleqZ$j3s*t(L+92B?!!%ND
rrDQf!!!9'rrDij!!%NHrrD!S!!*3%rW!!As8W&u!.XeD!9!hV!"])/!:]gb!$D.=!.aqH!<N6"!!5Cb
s8DuuJ,TEFrrBk6!!!Q/rrBk2!!!9%s7lWpIf9<K5QCc_!!%NDrrBk6!!",?rr@TG!!!-"rrE&o!!#4^
!!7ZMs8DuuJ,'$DJGoNN5QCc_q#CBqrVllqq#CC'rW!"Ls8W&u!.XeDr;Zpas8W#l!!%NJrrDum!!!0$
!<3#t!!%NDs8;p"J,fQDp](:Yrr2uno`5!krVuqJq>UHor;cis!:]a`!$D4?!:]X]rr;rt!.XhE!;ucq
rr2uVp](:)rr2uVp&G'nrr;rt!.XhE!;ufr!!3*!!5S@0!!iN'!9!eUq>^Krrr;rt!.XhE!;QNn!!E6#
!.ahE!!E6#!5S:.!!3*!rVuqJq>UHirVup#rr;]m!!3*!!5S:.!!3*!rVuqJq>UHarW!$*s8W)r!!*#s
!!!'!rr@TK!!*-#qZ$Turr;rt!.XhE!9!hV!sel+rqufu&-(Sd!<2uuJGoNM+91j.!!!-#s8DuuJ,0*E
i;N]Y&-)\-r;Zm`s8;fq"+U@NJGoNOJ,fKJ!<)ru"9/?"!!%NErrBk6!!=>Cs7lNmrr;os!e:7MrVup!
rr2u6r;Zg"rr;rt!.XhE!.b%K"!@RCq#16n"9/<#_#=<85QCc_!!!-#rrDQe!!!-#s8DuuJ,0*EJGoNN
5QCcQrVup/rr2uVrW!!As8W&u!"])/!;ucq!!E6#rVuqJq>^Bn"+U@NnGWCf+9)9?nGWCh+92B?!!",?
rrE&s!!!-#s8DuuJ,90Frqug!J,fQ,rVup_rr2urrW!!1s8Mut!$D1>!.b%K!!E6#rVuqJqYpQpr;cis
!9!hV!.Y"J!<2rt!Y>>1rVup_rVll5rW!$*s8W)t!!%NFrrDur!!!'!rrBk6!<)otrr)m!#QOf&!!%NI
rrD!V!!<K+s8Mut!.XkF!;ufr!!3*!"Mb!;!WW,urW!!)s8Mut!.XtI!:]sf!sel+r;HZrJ,90Fq#16n
"9/<&J,fQOr;QqN!!!9(rr)oqrrDin!!<K+s8;ir!.XkF!:]sf!!iN'"+U@O#Q4T*^]4?:s8Mutr;Qcp
rW!'+s8Vus!WW4MqYpQbrVup'rr3(N!!!Q-rrp1<!!E9#rW)lr!<2rt!sel+q#16nJ,90Fi;N]V&,uV.
!!!Q-rs7N_!!E9#!!!&ss8E!##QOi!rVuqJqYpQ2rVup?rr;rt!$D.=#k.fo!WW-!!!2usrW!$*s8Vln
!!%NFrrBk6!!",?s8Duu+8l-En,NFhs8Duu!W2m$J,fQSs8VTf!!%NFrr@TK!!#7_s8Duu5Q(Nep](9p
s8Duu!W2m$J,fQSs8VTf!!.TLqu?Tp"$chcrr)lt5Q(N]q#16os8Mutqu6l9!!!9(s7$!f!.XkFr;ZqL
s8W)t!!%NHrrDur!!3-!rW)iq#/C3=#QOh^rVuqJqu6Zqr;cis!<2rt!.XqH!;ufr!WW/u!;ld#huE`^
s8V$V!!%NGrrDuq!<2uurr)oprrDur!!3-!rVuqJr;QuZ!!!9(s5<kV!.XnG!;ufr!!3*!!;ufrqu6Zq
rW!!!rr)ltJ,K<NhuE`^s8V$V!!%NHrrN/prVup#rr2urrW)iq!<2rt!It.K!!#7]rs%B]!!iQ(_#=<6
J,B6Gq#16n"9/<&qu?]tqu6ZqrVutKs8Duu+8l-Cn,NFns8Tn6!!%NGrrDQf!!!9'rr`0!!!2rrrW!%M
rr<$"!"]#-#4MTm#QOh>rVuqJqu6ZSrVup/rr3)u!!!&rs8E!!J,fKJ!!iH%#4MTm#QOh>rVuqJqu6ZS
rVup/rr3)u!!!&rs8E!!J,fKJ!!E0!#4MTm#QOh>rVuqJqu6`5!!!$"+9)9Bqu?^!qZ$Np!e:6#rW)lr
#4MTm#QOh>rVuqJqu6YHrVup_rr3)q!!!,trrmoQ!.Y$!rVup_rVm)s!!!9(s1nU6!.XnG!.b%K!'gJ_
"8Dir"8`$$J,fR6s1nU6!=/Z(rs&5u!!iQ(JGoNKJ,B9E!!%NJrr`#r!!E)t"b6RQ5QAOt!!%NJrs&5u
!!iQ(JGoNKJ,K<Hrquiqrr`#r!!E)t"b6RQ5QB[>!<3!&p](:!s8RWK!!%NHrrDuq!<3!$s7cQo"8`$$
J,fR6s5<eT#m:5-p](:!s8RWK!!%NHrrDur!!!&urr`#r!!iB#"b6RQ5QC6M!!j,8p](:!s8RWK!!%NH
rrDin!!!-"rr`#r!!iB#"i(*<5QC6L!!.TE"TSN-s8RWK!!%NHrrDQf!!!-"rr`#r!!iB#"i(*<5QCNT
!!`c(!!!9(s+((K!.XqH!9!hV!!iK&"8Dir#Q"H(^]4@!s8;Zm"ulS_#QOgSrVuqJr;Qc4rVup/rVlro
!!!!(qYp`7!!#7`rq6<o#QOgSrVuqJr;QbIrVup?rVlup!!!9#rrp1<!'gM`p&G1"s8RWK!!%NHs8;ot
5Q1Tap](:!qYpc8!!#7`s+'hD!=/W*s+((K!.XtI!<2os!'gG^"8Dir#Q"H)^]4@!s8Tn/!!<K+s+((K
!.XtI!;ucq!.XtI"8Dir#Q"H)^]4@!s8V$O!!<K+s+((K!.XtI!;QKmr;Qlo!!!9's8Ds%^]4@!s8Vlg
!!<K+s+((K!.XtI!:]sf!!3#t"8Dir#Q"H)^]4@!s8W#k!!<K+s+((K!.XtI!9!hV!!E0!"8Dir#Q"H&
^]4@!rr;]m"UG)-J,fQM!.XtI!5SR6!!iH%"8Dir#Q"H&^]4@!rr2uVp](C$s8RWK!!%NIs8;ot&,cG0
p](:!qYpZ5!!#7_rrDih!!<K+s+((K!.Y"J!<2os!$D.="8Dir#Q"H&^]4@!rVuWm!sel+JGoNKJ,]HJ
q#(0m5Q(N`p](9rqYpYJ!!#7^rrD!Q!!<K+s+((K!.Y"J!5SO5!.XqH"8Dir"8`$"J,fR6rVllsq#CL%
s8RWK!!7ZMrrDil!;lcup](9rqYpYJ!!#7]rrDij!!<K+s+'eC!!E,u"8Dir"8`$"J,fR6qu6ZSqZ$^'
s8RWC!!!9$rr`#r!!E)t"+U@O5PkB[_#+07#QOgSp&G(7qu6cr!!!,trr[cO!'g;Z!.b"J!sel+_"Ia.
+8c'?qu?]tqZ$Np!.XhE!<2os!sel+_"Rj/!;lcuqu?]tqZ$Np!.XeD!:]sf!sel+_"@[-+8l-@qu?]t
qZ$Np!.XbCrW!$*s8Tn-!!!-!rr`0!!!2rrrVuqJrVucp#4MTm#QOh>oDngh!;ufrqu6ZqrVuqJp\tHm
!!!9(s1n7,!'gG^!;ufrqu6ZqrVuqJp\tHm!!!9(s1n7,!"]&.!<2rtqu6ZqrW)os!J!E4rs&5u!!iQ(
i:I!L"9&6"rr)ltJ,K<Hr;H]qrrR]N5Q(Ncp](:!s8V$K!<)otrr)ltJ,TBJs8;ir"onV<!!",=rs&5u
!!iQ(i:?pKJ,]HJrr)lt5Q(N]q#16ss8Tk7!$D.=#5A/u#QOh^o)JbTrVuis!'gD]!;QNn"onV<!!",=
rs&5u!!iQ(nGN@]!!!Q.s8Duu+8l-Fn,NFhs8Tk7!$D.=#5A/u#QOhno)JaqrVuis!$D.=$1Iop!WW28
!!!Q-rs%rm!!iQ(nFHV["9&9!!!!Q-rrV*Y!!WK(s1eU7&,cG3n,NFns8VT[!!!&urr[cO!"]#-$/bd`
"98D:!!!9%rs%rm!!iQ(q!nF`rr[cO!!iH%$,?N@"98DZ!!!9%rs%rm!!iQ(q"Xpd!<)p"^]4?:r;R(R
!!!-$s53kW"8r0'huE`^s8Vlb!!%NJrr^%:!!3#trW!--s8V!W!!E0!#2fI]&-)\-nc/YSrr2u6rW)os
!<2rt!sel+huWlY!W;s%^]4?Fs8W#r!!%NHrrD!T!!#7_rrD!V!!%NJrrDur!!<c3s7$!fr;QtO!!!Q0
s8Mut!.XnG!5SO5!$D4?!9!hV!'gJ_!;QNn!tYG3nGWFcrs!uR!"],0rr)ltJ,B6HquH]r!"])/!:]sf
!$D4?!:]sf"!@RCq#16nJ,TEH!!!Q/s8DuuJ,93D!!!Q/rrDQf!!!Q/rrD!V!!=>Cs7lQn!$D4?!<2rt
!"])/rVuqJqYpQ2rVup'rr2unrVup#rr2tKrW!$bs8Vln!!!Q/rrDin!!!Q/s8DuuJ,90FnGWCf#QF`'
r;HZu!WW3!r;ZqLs8W#r!!!-#rrDQf!!",?s8DuuJ,90Fq#16n#QF`'r;?TsJ,f<B!!@`Ns8;fqrr2u6
rVup?rr;rt!.XkF!;ufr!!E6#!<2os!Y>=hr;cis!<2os![%IAr;Zg>rr;rt!.XkF!<2rt!!E3"qu?`r
r;Zfurr2utqu?ct_#465+9)<>!!%NEs8Duu"9&8o!!!&us7lZo!!#7_s8DuuJ,0*HJ,fQMrVlkJp](9r
rVlkJpAb1Xrr;rt!.XhE"2Fm:!WE#u_"[m0#Q=Z&JG0$DJ,]KI!!%NErr^%:!!3&u!9!VP!"]&.!5S=/
!.Y"JrVuqJq>UQT!!!&urrDQ`!!",>rrD!O!<)rs!!%NErr_0Z!!3&u!;Q<h!'gG^!:]^_!<<&urVuqJ
q>UHarW)os!;uTl!.XtI!;Q<h!!3&urVuqJq>UHarW)os!<2`nr;Qcpp](9rrVuis!.XhE!;QNnr;QhK
!!)os!!E0!!<2`n!!iK&rVuqJq>UHirW)lr!5SF2!!iE$!.akF!"]&.rVuqJq>UHirW)lr!9!\R!"\u,
!5SC1!$D1>!!!'#!.XhE!;QNnr;Qclq>^L[qu6Zcq#CCZrVuis!.XhE!;ufrr;Qcrq>gBl!;Q?ir;Z`r
!.XhE!;ufrqu?Nn!!2rr!<2fp!!E0!rVuqJq>UHmrW)iq!9!bT!"\o*!5SI3!!iH%rVuqJq>UHmrW)iq
!;QHl!'g;Z!:]jc!'gD]rVutKs8)`qr;H]ms8;ot!VcWl!!!&ss8DuuJ,0*Er;H]mrrD!V!!",8rrDQe
!!",<s8DuuJ,0*Eq#19hrrR]N"8r2qrr_0Z!"\r+rVuqJq>UHirW(jUrVuqJq>UHirW(jUrVuqJr;Zcr
!:]sfhuEZU!.XhE!:]sfhuEZU!.XhE!:]sfmJleXrVuqJq>UQT!!!&Ws8DuuJ,0*H^]4?8huEZU!.XhE
!5JX9!!2!WrVuqJq>UPI!!!&Ws8DuuJ,0-D!!!&as7cQm!!%NFrrE&t!!!,Ys8DuuJ,90Fr;HZr"5j.X
!!%NFrrDin!!*3%i;`cV!.XkF!:]sf!!hE]rVuqJqYpQ2rVup'jo>5XrVuqJqYpPGrVup/huEZU!.XnG
!;ucq!"[uerVuqJqu6ZSr;Zg.r;YjXrVuqJr;Qclqu?^=huE6I!$C2"s8VWi!'fB@nc/Z>huE6I!.XeD
kl:2RhZ*0I!!1sVrrD]l!!1sVo)JamhZ*0I!!i,qm/QYW!"[rdo)Jb4hZ*HQq#CDEhZ*0Ih>d*I!!2Nf
nGi+\!!h?[oDek5h>d3LrVuqJh>d-J!!1mTo`+t&l2UDUp&G'ng].!J!!1gRJ,~>

%%EndBinary
grestore
np
f
483.41 400.421 mo
489.549 400.421 li
489.549 421.138 li
483.41 421.138 li
cp
.750179 .679652 .670191 .901488 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[6.13854 0 0 -20.7176 483.41 38.7048 ]ct
<<
/T 1
/W 96 
/H 324 
/M[96 0 0 -324 0 324 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)^H&K)a!n!e:7]q>UHirVuqJqYpPGrVup/qu6Zqr;[')rVup!
s8Vll!!`E&!!3-"i;<Q[IK0?Ks8RTLr;[!B!!!'"s8)d"%KHJ0s8Mlq"U4r,!WVrl!!NE(!!3,hp](?r
s5<YP!Wi>:p](?rs+'kE!<N5p!!*-"pAb3pr:^0l!VlBh!<Mui!!*,ir;Zg]qu?`ui;N]X!WV*V!!*,Y
rW!!1s7lNm!<L"8!!5Cbrquft!J(.L!e:7Mr;Zs$J,fQMrr2u6rVup!rVup#rr2uVrVup!rVup'rr2uf
rVup!rW!!1s8N-"q#16n!WE'!+9)9?r;HZr!WE'!5Q:Z_rr)lt!WE'!J,]HJrr)lt!WE'!J,TEH!!!'!
!;uj$J,fQM!!!&trs!uR!!*'"!W;s%^]4?8!!!-!rs$7=!!*'""8r0'huE`X!!!9%rrh6[!!*'#!!iH%
#4MTm!<<*)r;Quj!!!$"!"]#-#4MTm!<<*1r;Qur!!!$"!"]#-#5A/u!<<*Ar;Qur!!!$"!$D.=#5A/u
!<<*Ar;R!!!!!$"!$D.=#5eH$!<<*ar;R!!!!!$"!'gD]#5eH$!<<*ar;R!!!!!$"!'gD]#5eH$!<<*a
r;R!#!!!$"!'gD]#6"T&!<<+Lr;R!#!!!$"!.XqH#6"T&!<<+Lr;R!#!!!$"!.XqH#6"T&!<<+Lr;R!#
!!!$"!.XqH#6"T&!<<+Lr;R!#!!!$"!.XqH#6"T&!<<+Lr;R!#!!!$"!.XqH#6"T&!<<+Lr;R!#!!!$"
!.XqH#6"T&!<<+Lr;R!#!!!$"!.XqH#6"T&!<<+Lr;R!!!!!$"!'gD]#5eH$!<<*ar;Qfq!!E9&!!#7]
rs&B$!!*'"5Q(Ncqu?]t!!#7]rs&B$!!*'"5Q(Ncp](9p!!#7]rs&5u!!*'"+8l-Cp](9p!!",=rs&5u
!!*'"+8l-Cp](9p!!",=rs%rm!!*'"&,cG5n,NFh!!!Q0s8N$&n,NFh!!!Q-rs%B]!!*'"#Q4T+huE`X
!!!9%rs$7=!!*'""8r0'^]4?8!!!-!rs$7=!!*'""8r0'J,fQM!!!&trr[cO!!3'!r;Z`r!!3'!rVlls
rVup!rVuqJrr2utrVup!rVuqJrr2urrVup!rVup_rr2unrVup!rVup?rr2ufrVup!rVup/rr2ufrVup!
rVup'rr2uVrVup!rVup#rr2tKrW!'%J,fQMrr;os!<I`M!!7ZMrquft!Pn[7!^H_[r;Zj!_#=<8#QMU<
!!*,Yr;ZkI!;ulu!V#g`!<Mui!!*,qpAb3pr:^0l!WMfn!<N5p!!33$JG9*G!WTt1!!33$i:m9R!WVZa
!!33$q"k$p!WW3$s8Mlq"U4r,!WW2s!!XJE!!3-"_#+0:4obQ`s8VTd!!`E&!!3-"r;?Tu"9&9#!WN,t
!!Ei3!!!'!rrDQf!!IfN!!!&urs+&S&-)V/!!2oq"9&9#!Vu`qrW3'"!Vu`trVup!q>UQr!!!&qrr`6#
!!2oq"9&9#!Vu`trVup!q>UQr!!!&qrr`6#!!2oq"9&9#!Vu`trVup!q>UQr!!!&us8Ds"rVup!q>UQr
!!!&qrr`6#!!2oq"9&9#!Vu`trVup!q>UQr!!!&qrr`6#!!2oq"9&9#!Vu`trVup!q>UQr!!!&qrrW0"
!!!&qrr`6#!!2oq"9&9#!Vu`trVup!q>UQr!!!&qrr`6#!!2oq"9&9#!Vu`trVup!q>UQr!!!&qrr`6#
!!2oq"9&9#!W2m#s8W&u!!2oq"9&9#!Vu`trVup!q>UQr!!!&qrr`6#!!2oq"9&9#!Vu`trVup!J,~>

%%EndBinary
grestore
np
f
.239787 lw
1 lc
1 lj
10 ml
5.69094 430.474 mo
589.748 430.474 li
589.748 382.261 li
5.69094 382.261 li
cp
.750179 .679652 .670191 .901488 cmyk
@
gsave
504.703 166.772 mo
495.815 171.248 li
488.462 167.54 li
497.414 163.128 li
504.703 166.772 li
cp
498.245 161.273 mo
489.293 165.749 li
484.433 163.32 li
493.322 158.844 li
498.245 161.273 li
cp
477.911 162.296 mo
486.863 157.82 li
491.339 159.675 li
484.433 163.32 li
482.771 164.726 li
477.911 162.296 li
cp
495.815 175.277 mo
477.911 166.325 li
477.911 162.296 li
495.815 171.248 li
495.815 175.277 li
eclp
477.08 178.986 mo
507.261 178.986 li
507.261 156.989 li
477.08 156.989 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[30.1812 0 0 21.9964 477.08 260.14 ]ct
<<
/T 1
/W 119 
/H 87 
/M[119 0 0 -87 0 87 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
`W#r2oMkp!lL]r7TCqhV!FOjY+osq$qc3Jm!FP'_Vua[+oMkp!iq+Dq5P=YK!FP-aM?0@BoMkp!iq+Dq
5P=YK&7=XWW/.C.W/.C.W/.C.^\.5!!FOjY+osq$oMkp!lL]r7TCqhV!FOjY+osq$oMkp!kkqCTVua[+
oMkp!iq+Dq5P=YK!FP-aM?0@BoMkp!iq+Dq5P=YK%:A=TW/.C.W/.C.W/.ARLqiWT<<6IdoHF<#p%25b
?g@9@!MB&W<<6IdoHF<#p%25b?g.-\!Pe=+<VTPp?fL]%!C-8L<<6IloSN[Ap%25b?fL]%!C-8L<=iO$
Lo?-.Lo?-.Lo?-.LqiWV<<H6$?fL]%!C-8L<<6IloSN[Ap%25b?fL]%!C-8L<<6IjoV_f*p%25b?fM&/
pEBW&p%25b?g@9@!MB&W<<6IdoHF<#p%25q?g*<ELo?-.Lo?-.Lo?-Ep%25b?fLf(rZVA-p%25b?g@9@
!MB&W<<6IdoHF<#p%25b?g.-\!Pe="<<6IdoHFB%oi5#c<<6IloSN[Ap%25b?fL]%!C-8L<=iO$Lo?-.
Lo?-.Lo?-.LqiWT<<6IdoHF9"p]'+MJ,~>

%%EndBinary
grestore
np
f
grestore
0 lc
[.239787 .960213 ] 0 dsh
504.703 166.772 mo
495.815 171.248 li
488.462 167.54 li
497.414 163.128 li
504.703 166.772 li
cp
@
498.245 161.273 mo
489.293 165.749 li
484.433 163.32 li
493.322 158.843 li
498.245 161.273 li
cp
@
477.911 162.296 mo
486.863 157.82 li
491.339 159.675 li
484.434 163.32 li
482.771 164.726 li
477.911 162.296 li
cp
@
495.815 175.277 mo
477.911 166.325 li
477.911 162.296 li
495.815 171.248 li
495.815 175.277 li
cp
@
gsave
500.227 164.534 mo
498.245 161.273 li
489.293 165.749 li
491.339 169.01 li
500.227 164.534 li
cp
489.293 165.749 mo
484.433 163.32 li
482.771 164.726 li
491.339 169.01 li
489.293 165.749 li
eclp
482.707 161.209 mo
486.799 161.209 li
486.799 165.302 li
482.707 165.302 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 482.707 277.916 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eLl,24+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
486.799 161.209 mo
490.892 161.209 li
490.892 165.302 li
486.799 165.302 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 486.799 277.916 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eLl,24+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
490.892 161.209 mo
494.984 161.209 li
494.984 165.302 li
490.892 165.302 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 490.892 277.916 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eLl,24+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
494.984 161.209 mo
499.076 161.209 li
499.076 165.302 li
494.984 165.302 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 494.984 277.916 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eLl,24+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
499.076 161.209 mo
503.169 161.209 li
503.169 165.302 li
499.076 165.302 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 499.076 277.916 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eLl,24+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
482.707 165.302 mo
486.799 165.302 li
486.799 169.394 li
482.707 169.394 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 482.707 273.824 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eLl,24+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
486.799 165.302 mo
490.892 165.302 li
490.892 169.394 li
486.799 169.394 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 486.799 273.824 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eLl,24+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
490.892 165.302 mo
494.984 165.302 li
494.984 169.394 li
490.892 169.394 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 490.892 273.824 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eLl,24+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
494.984 165.302 mo
499.076 165.302 li
499.076 169.394 li
494.984 169.394 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 494.984 273.824 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eLl,24+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
499.076 165.302 mo
503.169 165.302 li
503.169 169.394 li
499.076 169.394 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 499.076 273.824 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eLl,24+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
500.227 164.534 mo
498.245 161.273 li
489.293 165.749 li
491.339 169.01 li
500.227 164.534 li
cp
@
489.293 165.749 mo
484.433 163.319 li
482.771 164.726 li
491.339 169.01 li
489.293 165.749 li
cp
@
gsave
491.723 172.847 mo
491.723 171.696 491.211 170.801 490.508 170.801 cv
489.869 170.801 489.293 171.696 489.293 172.847 cv
489.293 173.998 489.869 174.893 490.508 174.893 cv
491.211 174.893 491.723 173.998 491.723 172.847 cv
cp
482.387 167.54 mo
482.387 166.453 481.876 165.558 481.172 165.558 cv
480.469 165.558 479.957 166.453 479.957 167.54 cv
479.957 168.691 480.469 169.586 481.172 169.586 cv
481.876 169.586 482.387 168.691 482.387 167.54 cv
eclp
479.894 165.494 mo
483.986 165.494 li
483.986 169.586 li
479.894 169.586 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 479.894 273.632 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6q"&T&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
483.986 165.494 mo
488.078 165.494 li
488.078 169.586 li
483.986 169.586 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 483.986 273.632 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6q"&T&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
488.078 165.494 mo
492.171 165.494 li
492.171 169.586 li
488.078 169.586 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 488.078 273.632 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6q"&T&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
479.894 169.586 mo
483.986 169.586 li
483.986 173.678 li
479.894 173.678 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 479.894 269.54 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6q"&T&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
483.986 169.586 mo
488.078 169.586 li
488.078 173.678 li
483.986 173.678 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 483.986 269.54 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6q"&T&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
488.078 169.586 mo
492.171 169.586 li
492.171 173.678 li
488.078 173.678 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 488.078 269.54 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6q"&T&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
479.894 173.678 mo
483.986 173.678 li
483.986 177.771 li
479.894 177.771 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 479.894 265.447 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6q"&T&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
483.986 173.678 mo
488.078 173.678 li
488.078 177.771 li
483.986 177.771 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 483.986 265.447 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6q"&T&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
488.078 173.678 mo
492.171 173.678 li
492.171 177.771 li
488.078 177.771 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 488.078 265.447 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6q"&T&J_=G6q"&T;,O?n6q"&T'c!aK6q"&T;,O?n~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
491.339 172.591 mo
491.659 172.208 li
492.043 172.527 li
491.723 172.911 li
491.339 172.591 li
cp
489.869 171.824 mo
489.357 171.952 li
489.229 171.44 li
489.741 171.312 li
489.869 171.824 li
cp
490.316 174.51 mo
490.636 174.893 li
490.252 175.213 li
489.933 174.829 li
490.316 174.51 li
cp
482.004 167.284 mo
482.323 166.9 li
482.707 167.22 li
482.387 167.604 li
482.004 167.284 li
cp
480.533 166.517 mo
480.021 166.645 li
479.894 166.197 li
480.405 166.005 li
480.533 166.517 li
cp
481.108 169.266 mo
481.236 169.714 li
480.789 169.906 li
480.597 169.394 li
481.108 169.266 li
f
gsave
504.703 166.772 mo
504.703 170.801 li
495.815 175.277 li
495.815 171.248 li
504.703 166.772 li
eclp
495.751 166.708 mo
499.844 166.708 li
499.844 170.801 li
495.751 170.801 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 495.751 272.417 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2+t?SmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
499.844 166.708 mo
503.936 166.708 li
503.936 170.801 li
499.844 170.801 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 499.844 272.417 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2+t?SmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
503.936 166.708 mo
508.028 166.708 li
508.028 170.801 li
503.936 170.801 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 503.936 272.417 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2+t?SmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
495.751 170.801 mo
499.844 170.801 li
499.844 174.893 li
495.751 174.893 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 495.751 268.325 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2+t?SmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
499.844 170.801 mo
503.936 170.801 li
503.936 174.893 li
499.844 174.893 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 499.844 268.325 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2+t?SmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
503.936 170.801 mo
508.028 170.801 li
508.028 174.893 li
503.936 174.893 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 503.936 268.325 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2+t?SmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
495.751 174.893 mo
499.844 174.893 li
499.844 178.986 li
495.751 178.986 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 495.751 264.232 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2+t?SmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
499.844 174.893 mo
503.936 174.893 li
503.936 178.986 li
499.844 178.986 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 499.844 264.232 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2+t?SmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
503.936 174.893 mo
508.028 174.893 li
508.028 178.986 li
503.936 178.986 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 503.936 264.232 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2+t?SmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
504.703 166.772 mo
504.703 170.801 li
495.815 175.277 li
495.815 171.248 li
504.703 166.772 li
cp
@
gsave
499.46 172.016 mo
497.03 173.231 li
497.03 172.016 li
499.46 170.801 li
499.46 172.016 li
eclp
496.966 170.737 mo
501.059 170.737 li
501.059 174.829 li
496.966 174.829 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 496.966 268.389 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C6r^1d&J;%C77F5V&J;%C<)flt&J;%C77F5V~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
499.78 171.504 mo
499.46 171.888 li
499.076 171.504 li
499.46 171.185 li
499.78 171.504 li
cp
496.647 172.847 mo
497.03 172.527 li
497.35 172.847 li
497.03 173.231 li
496.647 172.847 li
f
gsave
503.936 169.586 mo
501.442 170.801 li
501.442 169.586 li
503.936 168.371 li
503.936 169.586 li
eclp
501.378 168.307 mo
505.471 168.307 li
505.471 172.399 li
501.378 172.399 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 501.378 270.818 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eLo=<R+sL#eMMbD6+sL#eW2N]r+sL#eMMbD6~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
504.256 169.074 mo
503.936 169.458 li
503.552 169.074 li
503.936 168.755 li
504.256 169.074 li
cp
501.123 170.417 mo
501.442 170.097 li
501.826 170.417 li
501.442 170.801 li
501.123 170.417 li
f
2.16021 lw
1 lc
[] 0 dsh
450.863 363.845 mo
378.799 363.845 li
406.615 363.845 li
0 .990631 1 .000396735 cmyk
@
405.464 359.177 mo
414.799 363.845 li
405.464 368.513 li
405.464 359.177 li
ef
gsave
430.785 355.788 mo
441.144 361.415 li
442.934 358.026 445.94 355.469 449.648 354.382 cv
439.226 349.202 li
435.517 349.906 432.384 352.336 430.785 355.788 cv
cp
441.592 345.366 mo
452.014 350.609 li
457.641 347.732 li
447.283 342.552 li
441.592 345.366 li
cp
461.926 348.243 mo
451.503 343.064 li
449.648 343.767 li
457.641 347.732 li
457.641 350.353 li
461.926 348.243 li
cp
441.144 363.334 mo
461.926 352.975 li
461.926 348.243 li
449.648 354.382 li
445.94 355.469 442.934 358.026 441.144 361.415 cv
441.144 363.334 li
eclp
429.954 367.81 mo
464.227 367.81 li
464.227 341.721 li
429.954 341.721 li
cp
0 .990631 1 .000396735 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[34.2735 0 0 26.0888 429.954 71.3158 ]ct
<<
/T 1
/W 135 
/H 103 
/M[135 0 0 -103 0 103 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
^&J**nl5]tiprfE^\..t!FP'eM"ui-TCqbT!FP-_.KMd,nl5]tkjjN1TCqbT!FOjWU&i%%nl5]tkjjN1
TCqbT&msWJ+t=cd+t=cd+t=cd+t>hMnl5]tkjjN1TCqbT!FOjWU&i%%qc3Dk!FP']L]O.@nl5]tlLHD*
5P=SI!FP']L]O.@nl5]tiq&lGU;-Bl<<6Ijnq[==p$u)q?fEOZ.O$>d.O$>d.O$>d.R3Us<<6Ijnq[==
p$u)`?fM!XpS%]'p$u)`?g.':!MB&U<<6IlngXZ)p$u)`?g.':!MB&W<<H6$?fLXN!Pe<u<<6Ijnq[==
p$u)q?fEOZ.O$>d.O$>d.O$>d.R3Us<<6Ijnq[==p&.na<<6IdntH0"p$u)`?g.':!MB&U<<6IlngXZ)
p$u)`?g.0=reLTIp$u)`?fLXN!Pe<u<<6Ijnq[==p$u)q?fEOZ.O$>d.O$>d.O$>d.R3Us<<6IjreU6'
!MB&U<<6IdntH0"p$u)`?g.':!MB&U<<6IlngXZ)p%DDa<<6Ijnq[==p$u)`?fLXN!Pe<u<<6Ijnq[==
p$u)s?fEOZ.O$>d.O$>d.O$>d.R3T+<V08l?g.':!MB&U<<6IdntH0"p$u)`?g.':!MB&U<<6IlpF?(j
!C-8J<<6Ijnq[==p$u)`?fLXN!Pe<u<<6Ijnq[==p$u)a?fEOG+t=cd+t=cd+t=cd+t>hMnl5]tkjjN0
T?dIe~>

%%EndBinary
grestore
np
f
grestore
.239787 lw
0 lc
[.239787 .960213 ] 0 dsh
430.785 355.788 mo
441.144 361.415 li
442.934 358.026 445.94 355.469 449.648 354.382 cv
439.226 349.202 li
435.517 349.906 432.384 352.336 430.785 355.788 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
441.592 345.366 mo
452.014 350.609 li
457.641 347.732 li
447.282 342.552 li
441.592 345.366 li
cp
@
461.926 348.243 mo
451.503 343.064 li
449.648 343.767 li
457.641 347.732 li
457.641 350.353 li
461.926 348.243 li
cp
@
441.144 363.334 mo
461.926 352.975 li
461.926 348.243 li
449.648 354.382 li
445.94 355.469 442.934 358.026 441.144 361.415 cv
441.144 363.334 li
cp
@
gsave
439.226 349.202 mo
441.592 345.366 li
452.014 350.609 li
449.648 354.382 li
439.226 349.202 li
cp
452.014 350.609 mo
457.641 347.732 li
460.519 348.947 li
449.648 354.382 li
452.014 350.609 li
eclp
439.162 345.302 mo
443.254 345.302 li
443.254 349.394 li
439.162 349.394 li
cp
.895628 .7673 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 439.162 93.8238 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
443.254 345.302 mo
447.346 345.302 li
447.346 349.394 li
443.254 349.394 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 443.254 93.8238 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
447.346 345.302 mo
451.439 345.302 li
451.439 349.394 li
447.346 349.394 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 447.346 93.8238 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
451.439 345.302 mo
455.531 345.302 li
455.531 349.394 li
451.439 349.394 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 451.439 93.8238 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
455.531 345.302 mo
459.624 345.302 li
459.624 349.394 li
455.531 349.394 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 455.531 93.8238 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
459.624 345.302 mo
463.716 345.302 li
463.716 349.394 li
459.624 349.394 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 459.624 93.8238 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
439.162 349.394 mo
443.254 349.394 li
443.254 353.486 li
439.162 353.486 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 439.162 89.7314 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
443.254 349.394 mo
447.346 349.394 li
447.346 353.486 li
443.254 353.486 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 443.254 89.7314 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
447.346 349.394 mo
451.439 349.394 li
451.439 353.486 li
447.346 353.486 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 447.346 89.7314 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
451.439 349.394 mo
455.531 349.394 li
455.531 353.486 li
451.439 353.486 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 451.439 89.7314 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
455.531 349.394 mo
459.624 349.394 li
459.624 353.486 li
455.531 353.486 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 455.531 89.7314 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
459.624 349.394 mo
463.716 349.394 li
463.716 353.486 li
459.624 353.486 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 459.624 89.7314 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
439.162 353.487 mo
443.254 353.487 li
443.254 357.579 li
439.162 357.579 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 439.162 85.6391 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
443.254 353.487 mo
447.346 353.487 li
447.346 357.579 li
443.254 357.579 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 443.254 85.6391 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
447.346 353.487 mo
451.439 353.487 li
451.439 357.579 li
447.346 357.579 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 447.346 85.6391 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
451.439 353.487 mo
455.531 353.487 li
455.531 357.579 li
451.439 357.579 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 451.439 85.6391 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
455.531 353.487 mo
459.624 353.487 li
459.624 357.579 li
455.531 357.579 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 455.531 85.6391 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
459.624 353.487 mo
463.716 353.487 li
463.716 357.579 li
459.624 357.579 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 459.624 85.6391 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2,,/(;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
439.226 349.202 mo
441.592 345.366 li
452.014 350.609 li
449.648 354.382 li
439.226 349.202 li
cp
@
452.014 350.609 mo
457.641 347.732 li
460.519 348.947 li
449.648 354.382 li
452.014 350.609 li
cp
@
gsave
444.469 360.968 mo
444.469 359.689 445.108 358.602 445.876 358.602 cv
446.643 358.602 447.283 359.689 447.283 360.968 cv
447.283 362.247 446.643 363.334 445.876 363.334 cv
445.108 363.334 444.469 362.247 444.469 360.968 cv
cp
455.275 354.829 mo
455.275 353.55 455.915 352.463 456.746 352.463 cv
457.513 352.463 458.153 353.55 458.153 354.829 cv
458.153 356.108 457.513 357.195 456.746 357.195 cv
455.915 357.195 455.275 356.108 455.275 354.829 cv
eclp
gsave
-19.183 -424.872 mo
615.133 -424.872 li
615.133 472.442 li
-19.183 472.442 li
cp
clp
444.405 352.4 mo
448.497 352.4 li
448.497 356.492 li
444.405 356.492 li
cp
0 0 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 444.405 86.7261 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
448.497 352.4 mo
452.59 352.4 li
452.59 356.492 li
448.497 356.492 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 448.497 86.7261 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
452.59 352.4 mo
456.682 352.4 li
456.682 356.492 li
452.59 356.492 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 452.59 86.7261 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
456.682 352.4 mo
460.775 352.4 li
460.775 356.492 li
456.682 356.492 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 456.682 86.7261 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
444.405 356.492 mo
448.497 356.492 li
448.497 360.584 li
444.405 360.584 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 444.405 82.6337 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
448.497 356.492 mo
452.59 356.492 li
452.59 360.584 li
448.497 360.584 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 448.497 82.6337 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
452.59 356.492 mo
456.682 356.492 li
456.682 360.584 li
452.59 360.584 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 452.59 82.6337 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
456.682 356.492 mo
460.775 356.492 li
460.775 360.584 li
456.682 360.584 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 456.682 82.6337 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
444.405 360.584 mo
448.497 360.584 li
448.497 364.677 li
444.405 364.677 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 444.405 78.5414 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
448.497 360.584 mo
452.59 360.584 li
452.59 364.677 li
448.497 364.677 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 448.497 78.5414 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
452.59 360.584 mo
456.682 360.584 li
456.682 364.677 li
452.59 364.677 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 452.59 78.5414 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
456.682 360.584 mo
460.775 360.584 li
460.775 364.677 li
456.682 364.677 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 456.682 78.5414 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C77=/U&J;%C<)flt&J;%C77F5V&J;%C<)flt~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
grestore
444.085 360.712 mo
444.469 360.392 li
444.853 360.776 li
444.469 361.096 li
444.085 360.712 li
cp
446.835 358.666 mo
446.899 359.177 li
446.387 359.241 li
446.323 358.73 li
446.835 358.666 li
cp
447.346 362.566 mo
446.835 362.694 li
446.707 362.183 li
447.155 362.055 li
447.346 362.566 li
cp
444.213 362.055 mo
444.469 361.607 li
444.917 361.863 li
444.661 362.311 li
444.213 362.055 li
cp
454.956 354.574 mo
455.339 354.254 li
455.659 354.637 li
455.339 354.957 li
454.956 354.574 li
cp
457.705 352.527 mo
457.705 353.039 li
457.258 353.103 li
457.194 352.591 li
457.705 352.527 li
cp
458.153 356.428 mo
457.705 356.556 li
457.577 356.044 li
458.025 355.916 li
458.153 356.428 li
cp
455.084 355.916 mo
455.339 355.469 li
455.787 355.661 li
455.531 356.172 li
455.084 355.916 li
f
gsave
430.785 355.788 mo
430.785 358.154 li
441.144 363.334 li
441.144 361.415 li
430.785 355.788 li
eclp
430.721 355.725 mo
434.814 355.725 li
434.814 359.817 li
430.721 359.817 li
cp
0 0 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 430.721 83.401 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eMMP84+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
434.814 355.725 mo
438.906 355.725 li
438.906 359.817 li
434.814 359.817 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 434.814 83.401 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eMMP84+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
438.906 355.725 mo
442.998 355.725 li
442.998 359.817 li
438.906 359.817 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 438.906 83.401 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eMMP84+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
430.721 359.817 mo
434.814 359.817 li
434.814 363.909 li
430.721 363.909 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 430.721 79.3087 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eMMP84+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
434.814 359.817 mo
438.906 359.817 li
438.906 363.909 li
434.814 363.909 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 434.814 79.3087 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eMMP84+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
438.906 359.817 mo
442.998 359.817 li
442.998 363.909 li
438.906 363.909 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 438.906 79.3087 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eMMP84+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
430.785 355.788 mo
430.785 358.154 li
441.144 363.334 li
441.144 361.415 li
430.785 355.788 li
cp
@
4.5016 lw
0 lj
2 ml
[] 0 dsh
578.43 345.43 mo
581.243 15.9945 li
@
538.721 358.474 mo
556.37 368.129 li
559.375 362.311 564.554 357.962 570.821 356.108 cv
553.172 347.284 li
546.842 348.499 541.535 352.655 538.721 358.474 cv
cp
557.201 340.826 mo
574.849 349.65 li
584.441 344.854 li
566.792 336.03 li
557.201 340.826 li
cp
591.666 345.685 mo
574.018 336.861 li
570.821 338.012 li
584.441 344.854 li
584.441 349.266 li
591.666 345.685 li
cp
556.37 371.327 mo
591.666 353.678 li
591.666 345.685 li
570.821 356.108 li
564.554 357.962 559.375 362.311 556.37 368.129 cv
556.37 371.327 li
.799008 .00704967 .958679 .000854505 cmyk
ef
.239787 lw
1 lc
1 lj
10 ml
538.721 358.474 mo
556.37 368.129 li
559.375 362.311 564.554 357.962 570.821 356.108 cv
553.172 347.284 li
546.842 348.499 541.535 352.655 538.721 358.474 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
557.201 340.826 mo
574.849 349.65 li
584.441 344.854 li
566.792 336.03 li
557.201 340.826 li
cp
@
591.666 345.685 mo
574.018 336.861 li
570.821 338.012 li
584.441 344.854 li
584.441 349.266 li
591.666 345.685 li
cp
@
556.37 371.327 mo
591.666 353.678 li
591.666 345.685 li
570.821 356.108 li
564.554 357.963 559.375 362.311 556.37 368.129 cv
556.37 371.327 li
cp
@
553.172 347.284 mo
557.201 340.826 li
574.849 349.65 li
570.821 356.108 li
553.172 347.284 li
cp
574.849 349.65 mo
584.441 344.854 li
589.236 346.836 li
570.821 356.108 li
574.849 349.65 li
.799008 .00704967 .958679 .000854505 cmyk
ef
553.172 347.284 mo
557.201 340.826 li
574.849 349.65 li
570.821 356.108 li
553.172 347.284 li
cp
.750179 .679652 .670191 .901488 cmyk
@
574.849 349.65 mo
584.441 344.854 li
589.236 346.836 li
570.821 356.108 li
574.849 349.65 li
cp
@
561.997 367.298 mo
561.997 365.124 563.084 363.27 564.426 363.27 cv
565.705 363.27 566.792 365.124 566.792 367.298 cv
566.792 369.536 565.705 371.327 564.426 371.327 cv
563.084 371.327 561.997 369.536 561.997 367.298 cv
cp
580.476 356.875 mo
580.476 354.701 581.499 352.847 582.842 352.847 cv
584.185 352.847 585.272 354.701 585.272 356.875 cv
585.272 359.113 584.185 360.904 582.842 360.904 cv
581.499 360.904 580.476 359.113 580.476 356.875 cv
.799008 .00704967 .958679 .000854505 cmyk
ef
.720426 lw
561.997 367.298 mo
561.997 365.124 563.084 363.27 564.426 363.27 cv
565.705 363.27 566.792 365.124 566.792 367.298 cv
566.792 369.536 565.705 371.327 564.426 371.327 cv
563.084 371.327 561.997 369.536 561.997 367.298 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
580.476 356.875 mo
580.476 354.701 581.499 352.847 582.842 352.847 cv
584.185 352.847 585.272 354.701 585.272 356.875 cv
585.272 359.113 584.185 360.904 582.842 360.904 cv
581.499 360.904 580.476 359.113 580.476 356.875 cv
cp
@
538.721 358.474 mo
538.721 362.502 li
556.37 371.327 li
556.37 368.129 li
538.721 358.474 li
.799008 .00704967 .958679 .000854505 cmyk
ef
.239787 lw
538.721 358.474 mo
538.721 362.502 li
556.37 371.327 li
556.37 368.129 li
538.721 358.474 li
cp
.750179 .679652 .670191 .901488 cmyk
@
2.16021 lw
[41.0494 10.8021 15.1236 10.8021 15.1236 10.8021 ] 0 dsh
569.926 290.119 mo
569.926 341.145 li
569.926 323.817 li
.799008 .00704967 .958679 .000854505 cmyk
@
565.258 324.968 mo
569.926 315.632 li
574.593 324.968 li
565.258 324.968 li
ef
[41.0494 10.8021 15.1236 10.8021 ] 0 dsh
511.609 374.204 mo
554.132 374.204 li
541.087 374.204 li
@
542.238 378.872 mo
532.902 374.204 li
542.238 369.536 li
542.238 378.872 li
ef
[2.16021 4.32149 ] 0 dsh
357.89 341.145 mo
357.251 264.605 li
357.506 294.659 li
.874174 .544579 0 .00030518 cmyk
@
362.174 293.444 mo
357.57 302.844 li
352.838 293.572 li
362.174 293.444 li
ef
[.00213144 6.48171 ] 0 dsh
488.334 346.836 mo
371.446 346.836 li
421.705 346.836 li
@
420.49 342.105 mo
429.89 346.836 li
420.49 351.504 li
420.49 342.105 li
ef
[2.16021 4.32149 ] 0 dsh
243.879 346.836 mo
351.624 346.836 li
305.904 346.836 li
@
307.119 351.504 mo
297.719 346.836 li
307.119 342.105 li
307.119 351.504 li
ef
492.682 188.769 mo
504.831 188.769 514.615 178.922 514.615 166.772 cv
514.615 154.623 504.831 144.776 492.682 144.776 cv
480.533 144.776 470.686 154.623 470.686 166.772 cv
470.686 178.922 480.533 188.769 492.682 188.769 cv
cp
504.959 157.565 mo
510.075 164.343 508.668 173.998 501.89 179.113 cv
499.204 181.096 496.007 182.183 492.682 182.183 cv
489.357 182.183 486.096 181.096 483.474 179.113 cv
504.959 157.565 li
cp
480.341 175.98 mo
475.29 169.202 476.632 159.547 483.474 154.431 cv
486.096 152.449 489.357 151.362 492.682 151.362 cv
496.007 151.362 499.204 152.449 501.89 154.431 cv
480.341 175.98 li
0 .990631 1 .000396735 cmyk
ef
449.137 328.101 mo
446.963 328.101 li
445.492 324.264 li
440.441 324.264 li
439.034 328.101 li
436.988 328.101 li
441.911 315.121 li
443.957 315.121 li
cp
444.917 322.602 mo
443.894 319.98 443.318 318.51 443.19 318.126 cv
443.062 317.806 442.87 317.359 442.743 316.783 cv
442.998 316.783 li
442.87 317.55 442.615 318.318 442.359 319.021 cv
440.952 322.602 li
.750179 .679652 .670191 .901488 cmyk
f
452.142 320.172 mo
452.782 319.661 453.485 319.405 454.38 319.405 cv
455.467 319.405 456.426 319.788 457.258 320.556 cv
458.089 321.323 458.473 322.346 458.473 323.625 cv
458.473 324.968 458.089 326.055 457.258 326.95 cv
456.426 327.909 455.339 328.357 453.997 328.357 cv
452.91 328.357 451.95 328.037 451.119 327.398 cv
450.352 326.758 449.84 325.799 449.776 324.456 cv
451.695 324.328 li
451.822 325.16 452.142 325.799 452.526 326.183 cv
452.91 326.502 453.421 326.694 453.997 326.694 cv
454.7 326.694 455.339 326.439 455.787 325.863 cv
456.235 325.288 456.426 324.648 456.426 323.817 cv
456.426 322.986 456.235 322.282 455.787 321.835 cv
455.275 321.323 454.7 321.131 453.933 321.131 cv
453.037 321.131 452.27 321.515 451.759 322.346 cv
450.032 322.154 li
451.311 315.312 li
457.897 315.312 li
457.897 317.167 li
452.782 317.167 li
f
468.512 196.442 mo
469.279 196.57 469.854 196.954 470.238 197.529 cv
470.686 198.105 470.878 198.808 470.878 199.511 cv
470.878 200.279 470.686 200.918 470.302 201.558 cv
469.982 202.197 469.407 202.645 468.767 202.9 cv
468.064 203.22 467.169 203.348 466.018 203.348 cv
460.966 203.348 li
460.966 190.367 li
465.89 190.367 li
467.489 190.367 468.64 190.751 469.279 191.454 cv
469.918 192.158 470.302 192.925 470.302 193.756 cv
470.302 194.332 470.11 194.907 469.79 195.419 cv
469.535 195.867 469.087 196.25 468.512 196.442 cv
cp
463.013 195.675 mo
465.57 195.675 li
466.146 195.675 466.593 195.611 466.913 195.611 cv
467.297 195.547 467.616 195.355 467.872 195.099 cv
468.128 194.907 468.256 194.524 468.256 194.012 cv
468.256 193.437 468.128 193.053 467.872 192.797 cv
467.616 192.542 467.297 192.35 466.913 192.35 cv
466.465 192.286 465.954 192.222 465.378 192.222 cv
463.013 192.222 li
cp
463.013 201.494 mo
465.954 201.494 li
467.041 201.494 467.808 201.366 468.192 200.982 cv
468.576 200.662 468.831 200.151 468.831 199.511 cv
468.831 198.872 468.576 198.424 468.128 198.041 cv
467.744 197.721 466.913 197.529 465.762 197.529 cv
463.013 197.529 li
f
481.045 200.343 mo
479.318 200.343 li
479.318 203.348 li
477.464 203.348 li
477.464 200.343 li
471.965 200.343 li
471.965 198.68 li
477.783 190.367 li
479.318 190.367 li
479.318 198.552 li
481.045 198.552 li
cp
477.464 198.552 mo
477.464 193.181 li
477.656 193.181 li
473.819 198.552 li
f
gsave
263.702 351.376 mo
254.238 356.044 li
246.501 352.208 li
255.965 347.476 li
263.702 351.376 li
cp
256.86 345.558 mo
247.396 350.289 li
242.217 347.668 li
251.68 343 li
256.86 345.558 li
cp
235.375 346.645 mo
244.838 341.913 li
249.57 343.831 li
242.217 347.668 li
240.49 349.202 li
235.375 346.645 li
cp
254.238 360.392 mo
235.375 350.929 li
235.375 346.645 li
254.238 356.044 li
254.238 360.392 li
eclp
234.544 363.078 mo
264.725 363.078 li
264.725 341.082 li
234.544 341.082 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[30.1812 0 0 21.9964 234.544 76.0476 ]ct
<<
/T 1
/W 119 
/H 87 
/M[119 0 0 -87 0 87 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
eGfOAoMkp!lLZP,5P=YK!FP'_L]O.@oMkp!iqoJHU&i%%oMkp!kk'Z3TCqhV!FP-a.KMd,oMkp!kk'Z3
TCqhV%U\4i,,-9U,,-9U,,-9U!C-8L<<6IjoS<O?p%25b?g@85!C-8L<<6IjoS<O?p%25b?fL^P!Pe=*
<V]Vq?g.-<!MB&W<<6IloI9l+p%25b?g.-<!MB&W<=iNsU*?<UU*?<UU*?<UU-J>D<<?0-kk'Z3TCqhV
!FP-a.KMd,oMkp!kk'Z3TCqhV!FOjYU&i%%oMkp!kl$>4L]O.@oMkp!lLZP,5P=YK!FP'_L]O.@oMlH0
ih@Wk,,-9U,,-9U,,.<poMkp!kk9f7Lkq\roMkp!lLZP,5P=YK!FP'_L]O.@oMkp!iq/rG^\.5!!FP'_
L]O.@r`/\m!FP-a.KMd,oMkp!kk'Z3TCqhV&7=Fk,,-9U,,-9U,,-9U5P=YK!FP'_L]O.@pJq2m!FP-a
.KMd,oMkp!kk'Z3TCqhV!FOjYU&i%%oMkp!kk'Z3TCqhV"(1=C.eY=m5P=YK!FP'_L]O.@oMlH0ih@Wk
,,-9U,,-9U,,.<poMkp!kk'Z2TBQ=3s*t~>

%%EndBinary
grestore
np
f
grestore
.239787 lw
0 lc
[.239787 .960213 ] 0 dsh
263.702 351.376 mo
254.238 356.044 li
246.501 352.208 li
255.965 347.476 li
263.702 351.376 li
cp
@
256.86 345.558 mo
247.396 350.289 li
242.217 347.668 li
251.68 343 li
256.86 345.558 li
cp
@
235.375 346.645 mo
244.838 341.913 li
249.57 343.831 li
242.217 347.668 li
240.49 349.202 li
235.375 346.645 li
cp
@
254.238 360.392 mo
235.375 350.929 li
235.375 346.645 li
254.238 356.044 li
254.238 360.392 li
cp
@
gsave
258.97 349.01 mo
256.86 345.558 li
247.396 350.289 li
249.57 353.742 li
258.97 349.01 li
cp
247.396 350.289 mo
242.217 347.668 li
240.49 349.202 li
249.57 353.742 li
247.396 350.289 li
eclp
240.426 345.494 mo
244.519 345.494 li
244.519 349.586 li
240.426 349.586 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 240.426 93.6319 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
244.519 345.494 mo
248.611 345.494 li
248.611 349.586 li
244.519 349.586 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 244.519 93.6319 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
248.611 345.494 mo
252.703 345.494 li
252.703 349.586 li
248.611 349.586 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 248.611 93.6319 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
252.703 345.494 mo
256.796 345.494 li
256.796 349.586 li
252.703 349.586 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 252.703 93.6319 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
256.796 345.494 mo
260.888 345.494 li
260.888 349.586 li
256.796 349.586 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 256.796 93.6319 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
240.426 349.586 mo
244.519 349.586 li
244.519 353.678 li
240.426 353.678 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 240.426 89.5396 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
244.519 349.586 mo
248.611 349.586 li
248.611 353.678 li
244.519 353.678 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 244.519 89.5396 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
248.611 349.586 mo
252.703 349.586 li
252.703 353.678 li
248.611 353.678 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 248.611 89.5396 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
252.703 349.586 mo
256.796 349.586 li
256.796 353.678 li
252.703 353.678 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 252.703 89.5396 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
256.796 349.586 mo
260.888 349.586 li
260.888 353.678 li
256.796 353.678 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 256.796 89.5396 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
240.426 353.678 mo
244.519 353.678 li
244.519 357.771 li
240.426 357.771 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 240.426 85.4472 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
244.519 353.678 mo
248.611 353.678 li
248.611 357.771 li
244.519 357.771 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 244.519 85.4472 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
248.611 353.678 mo
252.703 353.678 li
252.703 357.771 li
248.611 357.771 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 248.611 85.4472 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
252.703 353.678 mo
256.796 353.678 li
256.796 357.771 li
252.703 357.771 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 252.703 85.4472 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
256.796 353.678 mo
260.888 353.678 li
260.888 357.771 li
256.796 357.771 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 256.796 85.4472 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2.O%kmLko&2U7tXfLko&2.OnFuLko&2U7tXf~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
258.97 349.01 mo
256.86 345.558 li
247.396 350.289 li
249.57 353.742 li
258.97 349.01 li
cp
@
247.396 350.289 mo
242.217 347.668 li
240.49 349.202 li
249.57 353.742 li
247.396 350.289 li
cp
@
gsave
249.954 357.771 mo
249.954 356.62 249.378 355.661 248.675 355.661 cv
247.972 355.661 247.396 356.62 247.396 357.771 cv
247.396 358.986 247.972 359.945 248.675 359.945 cv
249.378 359.945 249.954 358.986 249.954 357.771 cv
cp
240.107 352.208 mo
240.107 350.993 239.531 350.034 238.828 350.034 cv
238.06 350.034 237.485 350.993 237.485 352.208 cv
237.485 353.423 238.06 354.382 238.828 354.382 cv
239.531 354.382 240.107 353.423 240.107 352.208 cv
eclp
237.421 349.97 mo
241.513 349.97 li
241.513 354.062 li
237.421 354.062 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 237.421 89.1559 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<(*ad&J;%C77F5V&J;%C<)flt&J;%C77F5V~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
241.513 349.97 mo
245.606 349.97 li
245.606 354.062 li
241.513 354.062 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 241.513 89.1559 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<(*ad&J;%C77F5V&J;%C<)flt&J;%C77F5V~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
245.606 349.97 mo
249.698 349.97 li
249.698 354.062 li
245.606 354.062 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 245.606 89.1559 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<(*ad&J;%C77F5V&J;%C<)flt&J;%C77F5V~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
249.698 349.97 mo
253.79 349.97 li
253.79 354.062 li
249.698 354.062 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 249.698 89.1559 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<(*ad&J;%C77F5V&J;%C<)flt&J;%C77F5V~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
237.421 354.062 mo
241.513 354.062 li
241.513 358.154 li
237.421 358.154 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 237.421 85.0636 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<(*ad&J;%C77F5V&J;%C<)flt&J;%C77F5V~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
241.513 354.062 mo
245.606 354.062 li
245.606 358.154 li
241.513 358.154 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 241.513 85.0636 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<(*ad&J;%C77F5V&J;%C<)flt&J;%C77F5V~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
245.606 354.062 mo
249.698 354.062 li
249.698 358.154 li
245.606 358.154 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 245.606 85.0636 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<(*ad&J;%C77F5V&J;%C<)flt&J;%C77F5V~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
249.698 354.062 mo
253.79 354.062 li
253.79 358.154 li
249.698 358.154 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 249.698 85.0636 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<(*ad&J;%C77F5V&J;%C<)flt&J;%C77F5V~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
237.421 358.154 mo
241.513 358.154 li
241.513 362.247 li
237.421 362.247 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 237.421 80.9712 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<(*ad&J;%C77F5V&J;%C<)flt&J;%C77F5V~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
241.513 358.154 mo
245.606 358.154 li
245.606 362.247 li
241.513 362.247 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 241.513 80.9712 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<(*ad&J;%C77F5V&J;%C<)flt&J;%C77F5V~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
245.606 358.154 mo
249.698 358.154 li
249.698 362.247 li
245.606 362.247 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 245.606 80.9712 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<(*ad&J;%C77F5V&J;%C<)flt&J;%C77F5V~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
249.698 358.154 mo
253.79 358.154 li
253.79 362.247 li
249.698 362.247 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 249.698 80.9712 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~&J;%C<(*ad&J;%C77F5V&J;%C<)flt&J;%C77F5V~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
249.57 357.515 mo
249.954 357.131 li
250.338 357.451 li
249.954 357.899 li
249.57 357.515 li
cp
248.036 356.492 mo
247.524 356.556 li
247.46 356.044 li
247.972 355.98 li
248.036 356.492 li
cp
248.291 359.369 mo
248.291 359.881 li
247.844 359.945 li
247.78 359.433 li
248.291 359.369 li
cp
239.723 351.952 mo
240.043 351.568 li
240.426 351.888 li
240.107 352.272 li
239.723 351.952 li
cp
238.188 350.865 mo
237.741 350.993 li
237.549 350.545 li
238.06 350.353 li
238.188 350.865 li
cp
238.38 353.806 mo
238.444 354.318 li
237.933 354.318 li
237.869 353.806 li
238.38 353.806 li
f
gsave
263.702 351.376 mo
263.702 355.661 li
254.238 360.392 li
254.238 356.044 li
263.702 351.376 li
eclp
254.174 351.312 mo
258.266 351.312 li
258.266 355.405 li
254.174 355.405 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 254.174 87.8131 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eW/+GR+sL#eMMbD6+sL#eW2N]r+sL#eMMbD6~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
258.266 351.312 mo
262.359 351.312 li
262.359 355.405 li
258.266 355.405 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 258.266 87.8131 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eW/+GR+sL#eMMbD6+sL#eW2N]r+sL#eMMbD6~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
262.359 351.312 mo
266.451 351.312 li
266.451 355.405 li
262.359 355.405 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 262.359 87.8131 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eW/+GR+sL#eMMbD6+sL#eW2N]r+sL#eMMbD6~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
254.174 355.405 mo
258.266 355.405 li
258.266 359.497 li
254.174 359.497 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 254.174 83.7208 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eW/+GR+sL#eMMbD6+sL#eW2N]r+sL#eMMbD6~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
258.266 355.405 mo
262.359 355.405 li
262.359 359.497 li
258.266 359.497 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 258.266 83.7208 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eW/+GR+sL#eMMbD6+sL#eW2N]r+sL#eMMbD6~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
262.359 355.405 mo
266.451 355.405 li
266.451 359.497 li
262.359 359.497 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 262.359 83.7208 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eW/+GR+sL#eMMbD6+sL#eW2N]r+sL#eMMbD6~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
254.174 359.497 mo
258.266 359.497 li
258.266 363.59 li
254.174 363.59 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 254.174 79.6284 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eW/+GR+sL#eMMbD6+sL#eW2N]r+sL#eMMbD6~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
258.266 359.497 mo
262.359 359.497 li
262.359 363.59 li
258.266 363.59 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 258.266 79.6284 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eW/+GR+sL#eMMbD6+sL#eW2N]r+sL#eMMbD6~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
262.359 359.497 mo
266.451 359.497 li
266.451 363.59 li
262.359 363.59 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 262.359 79.6284 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~+sL#eW/+GR+sL#eMMbD6+sL#eW2N]r+sL#eMMbD6~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
263.702 351.376 mo
263.702 355.661 li
254.238 360.392 li
254.238 356.044 li
263.702 351.376 li
cp
@
gsave
258.139 356.939 mo
255.581 358.218 li
255.581 356.939 li
258.139 355.661 li
258.139 356.939 li
eclp
255.517 355.597 mo
259.609 355.597 li
259.609 359.689 li
255.517 359.689 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 255.517 83.5289 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6q"&T;%]h.6q"&T'c!aK6q"&T;,O?n6q"&T'c!aK~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
258.522 356.364 mo
258.139 356.748 li
257.755 356.364 li
258.139 355.98 li
258.522 356.364 li
cp
255.197 358.09 mo
255.581 357.707 li
255.901 358.09 li
255.581 358.41 li
255.197 358.09 li
cp
257.563 355.533 mo
258.075 355.661 li
257.947 356.108 li
257.947 356.172 li
257.435 356.044 li
257.563 355.533 li
f
gsave
262.87 354.382 mo
260.249 355.661 li
260.249 354.382 li
262.87 353.039 li
262.87 354.382 li
eclp
260.185 352.975 mo
264.277 352.975 li
264.277 357.067 li
260.185 357.067 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 260.185 86.1506 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Lko&2U*<T;Lko&2.OnFuLko&2U7tXfLko&2.OnFu~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
263.19 353.806 mo
262.87 354.126 li
262.487 353.806 li
262.87 353.423 li
263.19 353.806 li
cp
259.929 355.469 mo
260.249 355.149 li
260.632 355.469 li
260.249 355.852 li
259.929 355.469 li
cp
262.295 352.975 mo
262.806 353.039 li
262.679 353.55 li
262.167 353.423 li
262.295 352.975 li
f
gsave
581.243 282.126 mo
572.739 286.41 li
565.833 282.893 li
574.338 278.673 li
581.243 282.126 li
cp
575.105 276.947 mo
566.6 281.167 li
561.933 278.865 li
570.437 274.581 li
575.105 276.947 li
cp
555.73 277.906 mo
564.235 273.621 li
568.519 275.348 li
561.933 278.865 li
560.398 280.208 li
555.73 277.906 li
cp
572.739 290.247 mo
555.73 281.742 li
555.73 277.906 li
572.739 286.41 li
572.739 290.247 li
eclp
554.899 294.787 mo
585.08 294.787 li
585.08 272.79 li
554.899 272.79 li
cp
.799008 .00704967 .958679 .000854505 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[30.1812 0 0 21.9964 554.899 144.339 ]ct
<<
/T 1
/W 119 
/H 87 
/M[119 0 0 -87 0 87 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
eGfO=oFV*GqXgcgYP%NV!DiRaWWB<noFV*GqYR;hWWB<qoMbiuqXgcgYOV5s!?_11WWB<roL/dVqXgcg
YOV5s!?_11WXuB+6rZQR6rZQR6rZQR6sof_WWB<noFV*GqXgcgYP%NV!DiRaWWB<noFV*GqXgcgYOq`l
q,@B%qXgcgYOV5s!?_11WWB<roL/dVqXgcgYOV5s!?_11WXZ0(6rZQR6rZQR6rZQR!^pDloVqqqnamCo
+8YW0!O)1g70-3\oVqqqnamCo+8YW0!O).f;upA&rMoXm!O)%c&HO!MoVqqqp%1ZR:\s^`!O)%c&HO!M
oVrJ+oL)YH<('\R<('\R<((*ip8S4pWitsb&HO!MoVqqqp%1ZR:\s^`!O)%c&HO!MoVqqqo^l)`?i'Dp
!O)%m&bck<+8YW0!O)1g70-3\oVqqqnamCo+8YW0&?k^o<('\R<('\R<('\R?i'Dp!O)%f&cN@C+8YW0
!O)1g70-3\oVqqqnamCo+8YW0!O).f;upA&oVqqqnamCq+8W";p8S.sp%1ZR:\s^`!O)%c&HO!MoVrJ+
oL)YH<('\R<('\R<((*ioVqnpkl9N>J,~>

%%EndBinary
grestore
np
f
grestore
581.243 282.126 mo
572.739 286.41 li
565.833 282.893 li
574.338 278.673 li
581.243 282.126 li
cp
@
575.105 276.947 mo
566.6 281.167 li
561.933 278.865 li
570.437 274.581 li
575.105 276.947 li
cp
@
555.73 277.906 mo
564.235 273.621 li
568.519 275.348 li
561.933 278.865 li
560.398 280.208 li
555.73 277.906 li
cp
@
572.739 290.247 mo
555.73 281.742 li
555.73 277.906 li
572.739 286.41 li
572.739 290.247 li
cp
@
gsave
577.023 280.016 mo
575.105 276.947 li
566.6 281.167 li
568.519 284.236 li
577.023 280.016 li
cp
566.6 281.167 mo
561.933 278.865 li
560.398 280.208 li
568.519 284.236 li
566.6 281.167 li
eclp
560.334 276.883 mo
564.426 276.883 li
564.426 280.975 li
560.334 280.975 li
cp
.799008 .00704967 .958679 .000854505 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 560.334 162.243 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
564.426 276.883 mo
568.519 276.883 li
568.519 280.975 li
564.426 280.975 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 564.426 162.243 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
568.519 276.883 mo
572.611 276.883 li
572.611 280.975 li
568.519 280.975 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 568.519 162.243 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
572.611 276.883 mo
576.703 276.883 li
576.703 280.975 li
572.611 280.975 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 572.611 162.243 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
576.703 276.883 mo
580.796 276.883 li
580.796 280.975 li
576.703 280.975 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 576.703 162.243 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
560.334 280.975 mo
564.426 280.975 li
564.426 285.067 li
560.334 285.067 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 560.334 158.151 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
564.426 280.975 mo
568.519 280.975 li
568.519 285.067 li
564.426 285.067 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 564.426 158.151 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
568.519 280.975 mo
572.611 280.975 li
572.611 285.067 li
568.519 285.067 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 568.519 158.151 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
572.611 280.975 mo
576.703 280.975 li
576.703 285.067 li
572.611 285.067 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 572.611 158.151 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
576.703 280.975 mo
580.796 280.975 li
580.796 285.067 li
576.703 285.067 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 576.703 158.151 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4j4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
577.023 280.016 mo
575.105 276.947 li
566.6 281.167 li
568.519 284.236 li
577.023 280.016 li
cp
@
566.6 281.167 mo
561.933 278.865 li
560.398 280.208 li
568.519 284.236 li
566.6 281.167 li
cp
@
gsave
568.902 287.945 mo
568.902 286.858 568.391 286.026 567.751 286.026 cv
567.112 286.026 566.6 286.858 566.6 287.945 cv
566.6 289.032 567.112 289.863 567.751 289.863 cv
568.391 289.863 568.902 289.032 568.902 287.945 cv
cp
560.014 282.893 mo
560.014 281.87 559.503 280.975 558.863 280.975 cv
558.224 280.975 557.712 281.87 557.712 282.893 cv
557.712 283.98 558.224 284.875 558.863 284.875 cv
559.503 284.875 560.014 283.98 560.014 282.893 cv
eclp
gsave
-19.183 -424.872 mo
615.133 -424.872 li
615.133 472.442 li
-19.183 472.442 li
cp
clp
557.648 280.911 mo
561.741 280.911 li
561.741 285.003 li
557.648 285.003 li
cp
.799008 .00704967 .958679 .000854505 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 557.648 158.215 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XGWiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
561.741 280.911 mo
565.833 280.911 li
565.833 285.003 li
561.741 285.003 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 561.741 158.215 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XGWiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
565.833 280.911 mo
569.925 280.911 li
569.925 285.003 li
565.833 285.003 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 565.833 158.215 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XGWiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
557.648 285.003 mo
561.741 285.003 li
561.741 289.096 li
557.648 289.096 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 557.648 154.122 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XGWiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
561.741 285.003 mo
565.833 285.003 li
565.833 289.096 li
561.741 289.096 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 561.741 154.122 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XGWiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
565.833 285.003 mo
569.925 285.003 li
569.925 289.096 li
565.833 289.096 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 565.833 154.122 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XGWiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
557.648 289.096 mo
561.741 289.096 li
561.741 293.188 li
557.648 293.188 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 557.648 150.03 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XGWiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
561.741 289.096 mo
565.833 289.096 li
565.833 293.188 li
561.741 293.188 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 561.741 150.03 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XGWiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
565.833 289.096 mo
569.925 289.096 li
569.925 293.188 li
565.833 293.188 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 565.833 150.03 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?XGWiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
grestore
568.519 287.625 mo
568.839 287.241 li
569.222 287.561 li
568.902 287.945 li
568.519 287.625 li
cp
567.112 287.113 mo
566.6 287.305 li
566.409 286.858 li
566.856 286.602 li
567.112 287.113 li
cp
567.815 289.479 mo
568.263 289.799 li
567.943 290.183 li
567.56 289.927 li
567.815 289.479 li
cp
559.631 282.637 mo
559.95 282.254 li
560.334 282.574 li
560.014 282.957 li
559.631 282.637 li
cp
558.16 282.062 mo
557.712 282.254 li
557.521 281.806 li
557.968 281.614 li
558.16 282.062 li
cp
558.927 284.492 mo
559.375 284.748 li
559.055 285.195 li
558.608 284.875 li
558.927 284.492 li
f
gsave
581.243 282.126 mo
581.243 286.026 li
572.739 290.247 li
572.739 286.41 li
581.243 282.126 li
eclp
572.675 282.062 mo
576.767 282.062 li
576.767 286.154 li
572.675 286.154 li
cp
.799008 .00704967 .958679 .000854505 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 572.675 157.064 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14m<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
576.767 282.062 mo
580.86 282.062 li
580.86 286.154 li
576.767 286.154 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 576.767 157.064 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14m<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
580.86 282.062 mo
584.952 282.062 li
584.952 286.154 li
580.86 286.154 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 580.86 157.064 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14m<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
572.675 286.154 mo
576.767 286.154 li
576.767 290.247 li
572.675 290.247 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 572.675 152.971 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14m<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
576.767 286.154 mo
580.86 286.154 li
580.86 290.247 li
576.767 290.247 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 576.767 152.971 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14m<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
580.86 286.154 mo
584.952 286.154 li
584.952 290.247 li
580.86 290.247 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 580.86 152.971 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14m<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
572.675 290.247 mo
576.767 290.247 li
576.767 294.339 li
572.675 294.339 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 572.675 148.879 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14m<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
576.767 290.247 mo
580.86 290.247 li
580.86 294.339 li
576.767 294.339 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 576.767 148.879 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14m<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
580.86 290.247 mo
584.952 290.247 li
584.952 294.339 li
580.86 294.339 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 580.86 148.879 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E14m<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
581.243 282.126 mo
581.243 286.026 li
572.739 290.247 li
572.739 286.41 li
581.243 282.126 li
cp
@
gsave
576.256 287.177 mo
573.954 288.328 li
573.954 287.177 li
576.256 286.026 li
576.256 287.177 li
eclp
573.89 285.963 mo
577.982 285.963 li
577.982 290.055 li
573.89 290.055 li
cp
.799008 .00704967 .958679 .000854505 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 573.89 153.163 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAHdWi?XCWiAKVWi?XCWiB#tWi?XCWiAKVWi?XC~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
576.576 286.73 mo
576.256 287.113 li
575.872 286.73 li
576.256 286.346 li
576.576 286.73 li
cp
573.57 287.753 mo
573.954 287.369 li
574.274 287.753 li
573.954 288.137 li
573.57 287.753 li
f
gsave
580.476 284.875 mo
578.174 286.026 li
578.174 284.875 li
580.476 283.661 li
580.476 284.875 li
eclp
578.11 283.597 mo
582.203 283.597 li
582.203 287.689 li
578.11 287.689 li
cp
.799008 .00704967 .958679 .000854505 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 578.11 155.529 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4jR<E14e<E4p6<E14e<E5ur<E14e<E4p6<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
580.86 284.428 mo
580.476 284.748 li
580.156 284.428 li
580.476 284.044 li
580.86 284.428 li
cp
577.791 285.451 mo
578.174 285.067 li
578.558 285.451 li
578.174 285.771 li
577.791 285.451 li
f
1 lc
[] 0 dsh
499.076 377.977 mo
486.544 377.977 476.377 367.874 476.377 355.341 cv
476.377 342.808 486.544 332.641 499.076 332.641 cv
511.545 332.641 521.712 342.808 521.712 355.341 cv
521.712 367.874 511.545 377.977 499.076 377.977 cv
cp
@
485.201 321.195 mo
485.968 321.323 486.544 321.707 486.991 322.282 cv
487.375 322.858 487.631 323.561 487.631 324.264 cv
487.631 325.032 487.439 325.671 487.055 326.311 cv
486.671 326.95 486.16 327.398 485.457 327.653 cv
484.753 327.973 483.858 328.101 482.707 328.101 cv
477.719 328.101 li
477.719 315.121 li
482.579 315.121 li
484.178 315.121 485.329 315.504 485.968 316.208 cv
486.671 316.911 486.991 317.678 486.991 318.51 cv
486.991 319.085 486.799 319.661 486.544 320.172 cv
486.224 320.62 485.776 321.003 485.201 321.195 cv
cp
479.702 320.428 mo
482.259 320.428 li
482.835 320.428 483.283 320.364 483.666 320.364 cv
483.986 320.3 484.306 320.108 484.561 319.852 cv
484.817 319.661 484.945 319.277 484.945 318.765 cv
484.945 318.19 484.817 317.806 484.561 317.55 cv
484.306 317.295 483.986 317.103 483.602 317.103 cv
483.219 317.039 482.707 316.975 482.068 316.975 cv
479.702 316.975 li
cp
479.702 326.247 mo
482.707 326.247 li
483.794 326.247 484.497 326.119 484.881 325.735 cv
485.329 325.415 485.521 324.904 485.521 324.264 cv
485.521 323.625 485.265 323.177 484.881 322.794 cv
484.433 322.474 483.666 322.282 482.451 322.282 cv
479.702 322.282 li
f
490.764 321.259 mo
491.531 320.108 492.554 319.597 493.897 319.597 cv
494.984 319.597 495.943 319.98 496.711 320.748 cv
497.478 321.579 497.862 322.602 497.862 323.817 cv
497.862 325.096 497.478 326.119 496.711 327.014 cv
495.943 327.909 494.92 328.357 493.705 328.357 cv
492.426 328.357 491.339 327.845 490.444 326.95 cv
489.613 325.991 489.165 324.392 489.165 322.026 cv
489.165 319.725 489.549 317.998 490.316 316.847 cv
491.148 315.632 492.298 315.057 493.833 315.057 cv
494.792 315.057 495.688 315.376 496.327 315.888 cv
497.03 316.463 497.478 317.359 497.606 318.574 cv
495.751 318.701 li
495.432 317.359 494.792 316.719 493.769 316.719 cv
493.002 316.719 492.362 317.039 491.851 317.806 cv
491.275 318.574 491.02 319.725 491.02 321.259 cv
cp
493.641 326.694 mo
494.345 326.694 494.856 326.439 495.24 325.927 cv
495.688 325.352 495.879 324.712 495.879 323.945 cv
495.879 323.177 495.688 322.538 495.24 322.026 cv
494.856 321.515 494.281 321.259 493.577 321.259 cv
493.002 321.259 492.426 321.515 491.979 321.963 cv
491.531 322.474 491.275 323.05 491.275 323.817 cv
491.275 324.648 491.531 325.352 491.979 325.863 cv
492.426 326.439 493.002 326.694 493.641 326.694 cv
f
557.393 335.135 mo
557.009 336.733 556.37 337.884 555.41 338.588 cv
554.451 339.291 553.3 339.675 552.021 339.675 cv
549.847 339.675 548.313 339.035 547.354 337.693 cv
546.394 336.35 545.883 334.751 545.883 332.897 cv
545.883 330.787 546.458 329.188 547.609 328.037 cv
548.76 326.822 550.231 326.247 552.021 326.247 cv
553.3 326.247 554.387 326.566 555.283 327.206 cv
556.178 327.909 556.817 328.868 557.201 330.275 cv
555.283 330.659 li
554.963 329.764 554.515 329.06 554.004 328.677 cv
553.492 328.229 552.789 328.037 552.021 328.037 cv
550.679 328.037 549.719 328.485 549.016 329.316 cv
548.313 330.211 547.993 331.362 547.993 332.833 cv
547.993 334.559 548.313 335.838 549.08 336.669 cv
549.783 337.501 550.743 337.884 551.83 337.884 cv
552.789 337.884 553.556 337.629 554.132 337.117 cv
554.771 336.605 555.155 335.838 555.41 334.687 cv
f
548.121 255.781 mo
547.737 257.316 547.098 258.467 546.139 259.17 cv
545.18 259.938 544.092 260.257 542.75 260.257 cv
540.64 260.257 539.041 259.618 538.082 258.275 cv
537.123 256.932 536.611 255.334 536.611 253.479 cv
536.611 251.433 537.187 249.835 538.338 248.62 cv
539.489 247.469 540.959 246.893 542.75 246.893 cv
544.029 246.893 545.116 247.213 546.011 247.852 cv
546.906 248.492 547.545 249.515 547.929 250.858 cv
546.011 251.305 li
545.691 250.346 545.307 249.707 544.732 249.259 cv
544.22 248.875 543.517 248.62 542.75 248.62 cv
541.407 248.62 540.448 249.067 539.744 249.963 cv
539.041 250.794 538.721 252.009 538.721 253.479 cv
538.721 255.206 539.105 256.485 539.808 257.252 cv
540.512 258.083 541.471 258.531 542.622 258.531 cv
543.517 258.531 544.284 258.275 544.924 257.764 cv
545.499 257.252 545.883 256.421 546.139 255.27 cv
f
558.032 260.066 mo
549.272 260.066 li
549.272 259.234 549.528 258.403 550.039 257.636 cv
550.551 256.868 551.51 256.037 552.789 255.142 cv
553.684 254.311 554.451 253.543 555.091 252.776 cv
555.73 252.073 556.05 251.369 556.05 250.666 cv
556.05 250.09 555.858 249.643 555.41 249.259 cv
554.963 248.812 554.451 248.62 553.812 248.62 cv
553.172 248.62 552.661 248.875 552.213 249.259 cv
551.766 249.643 551.574 250.282 551.51 251.241 cv
549.592 250.986 li
549.719 249.643 550.103 248.684 550.934 247.98 cv
551.702 247.341 552.661 247.021 553.876 247.021 cv
555.155 247.021 556.178 247.405 556.881 248.108 cv
557.648 248.812 557.968 249.707 557.968 250.73 cv
557.968 251.561 557.712 252.392 557.073 253.288 cv
556.497 254.119 555.283 255.27 553.556 256.677 cv
552.661 257.38 552.085 257.891 551.83 258.211 cv
558.032 258.211 li
f
522.608 324.137 mo
522.224 325.735 521.584 326.886 520.625 327.59 cv
519.666 328.293 518.579 328.677 517.236 328.677 cv
515.126 328.677 513.528 328.037 512.568 326.694 cv
511.609 325.352 511.098 323.753 511.098 321.899 cv
511.098 319.788 511.673 318.19 512.824 317.039 cv
513.975 315.824 515.446 315.248 517.236 315.248 cv
518.515 315.248 519.602 315.568 520.497 316.208 cv
521.393 316.911 522.032 317.87 522.416 319.277 cv
520.497 319.661 li
520.178 318.765 519.73 318.062 519.219 317.678 cv
518.707 317.231 518.004 317.039 517.236 317.039 cv
515.894 317.039 514.934 317.486 514.231 318.318 cv
513.528 319.213 513.208 320.364 513.208 321.835 cv
513.208 323.561 513.592 324.84 514.295 325.671 cv
514.998 326.502 515.957 326.886 517.108 326.886 cv
518.004 326.886 518.771 326.63 519.346 326.119 cv
519.986 325.607 520.37 324.776 520.625 323.689 cv
f
530.217 328.485 mo
528.299 328.485 li
528.299 318.574 li
527.723 319.277 526.636 319.916 525.165 320.428 cv
525.165 318.637 li
527.02 317.806 528.235 316.719 528.874 315.44 cv
530.217 315.44 li
f
248.803 311.284 mo
249.506 311.412 250.082 311.796 250.529 312.371 cv
250.977 312.947 251.169 313.586 251.169 314.353 cv
251.169 315.057 250.977 315.76 250.593 316.399 cv
250.21 317.039 249.698 317.486 248.995 317.742 cv
248.291 318.062 247.396 318.19 246.245 318.19 cv
241.258 318.19 li
241.258 305.209 li
246.181 305.209 li
247.78 305.209 248.867 305.529 249.57 306.232 cv
250.21 306.936 250.529 307.767 250.529 308.598 cv
250.529 309.174 250.401 309.749 250.082 310.197 cv
249.762 310.708 249.314 311.092 248.803 311.284 cv
cp
243.304 310.517 mo
245.862 310.517 li
246.373 310.517 246.821 310.453 247.204 310.389 cv
247.588 310.325 247.844 310.197 248.163 309.941 cv
248.419 309.749 248.547 309.366 248.547 308.79 cv
248.547 308.279 248.419 307.895 248.163 307.639 cv
247.844 307.383 247.524 307.192 247.14 307.128 cv
246.757 307.064 246.245 307.064 245.606 307.064 cv
243.304 307.064 li
cp
243.304 316.336 mo
246.245 316.336 li
247.332 316.336 248.036 316.144 248.483 315.824 cv
248.867 315.44 249.059 314.993 249.059 314.353 cv
249.059 313.714 248.867 313.202 248.419 312.883 cv
247.972 312.499 247.204 312.371 246.053 312.371 cv
243.304 312.371 li
f
261.336 306.808 mo
260.057 308.215 258.97 309.877 258.075 311.859 cv
257.179 313.842 256.668 315.952 256.476 318.19 cv
254.558 318.19 li
254.622 316.336 255.005 314.353 255.837 312.307 cv
256.668 310.197 257.691 308.534 258.97 307.256 cv
252.767 307.256 li
252.767 305.401 li
261.336 305.401 li
f
2.16021 lw
[41.0494 10.8021 15.1236 10.8021 15.1236 10.8021 ] 0 dsh
581.243 390.765 mo
581.243 424.783 li
581.243 415.959 li
.799008 .00704967 .958679 .000854505 cmyk
@
576.576 417.11 mo
581.243 407.774 li
585.975 417.11 li
576.576 417.11 li
ef
561.869 417.366 mo
573.442 417.366 li
573.442 398.183 li
561.869 398.183 li
cp
0 0 0 0 cmyk
f
572.931 408.733 mo
572.611 410.14 571.972 411.163 571.14 411.803 cv
570.309 412.442 569.286 412.762 568.135 412.762 cv
566.217 412.762 564.874 412.186 563.979 410.971 cv
563.084 409.82 562.7 408.414 562.7 406.751 cv
562.7 404.897 563.211 403.426 564.235 402.403 cv
565.258 401.38 566.536 400.868 568.135 400.868 cv
569.286 400.868 570.245 401.124 571.013 401.7 cv
571.844 402.275 572.419 403.17 572.739 404.385 cv
571.013 404.769 li
570.757 403.938 570.373 403.362 569.925 402.979 cv
569.414 402.595 568.838 402.403 568.135 402.403 cv
566.92 402.403 566.025 402.787 565.449 403.554 cv
564.874 404.321 564.554 405.408 564.554 406.687 cv
564.554 408.222 564.874 409.373 565.513 410.076 cv
566.153 410.844 566.984 411.163 568.007 411.163 cv
568.838 411.163 569.478 410.971 570.053 410.524 cv
570.565 410.076 570.949 409.309 571.14 408.35 cv
.750179 .679652 .670191 .901488 cmyk
f
111.197 407.135 mo
95.659 414.936 li
82.9982 408.542 li
98.4725 400.804 li
111.197 407.135 li
cp
99.8792 397.671 mo
84.405 405.408 li
75.9645 401.188 li
91.4387 393.451 li
99.8792 397.671 li
cp
64.7105 399.398 mo
80.1847 391.661 li
87.9219 394.858 li
75.9645 401.188 li
73.151 403.618 li
64.7105 399.398 li
cp
95.659 421.97 mo
64.7105 406.431 li
64.7105 399.398 li
95.659 414.936 li
95.659 421.97 li
0 0 0 0 cmyk
ef
.239787 lw
[] 0 dsh
111.197 407.135 mo
95.659 414.936 li
82.9982 408.542 li
98.4725 400.804 li
111.197 407.135 li
cp
.750179 .679652 .670191 .901488 cmyk
@
99.8792 397.671 mo
84.405 405.408 li
75.9645 401.188 li
91.4387 393.451 li
99.8792 397.671 li
cp
@
64.7105 399.398 mo
80.1847 391.661 li
87.9219 394.858 li
75.9645 401.188 li
73.151 403.618 li
64.7105 399.398 li
cp
@
95.659 421.97 mo
64.7105 406.431 li
64.7105 399.398 li
95.659 414.936 li
95.659 421.97 li
cp
@
103.396 403.298 mo
99.8792 397.671 li
84.405 405.408 li
87.9219 411.035 li
103.396 403.298 li
cp
84.405 405.408 mo
75.9645 401.188 li
73.151 403.618 li
87.9219 411.035 li
84.405 405.408 li
0 0 0 0 cmyk
ef
103.396 403.298 mo
99.8792 397.671 li
84.405 405.408 li
87.9219 411.035 li
103.396 403.298 li
cp
.750179 .679652 .670191 .901488 cmyk
@
84.405 405.408 mo
75.9645 401.188 li
73.151 403.618 li
87.9219 411.035 li
84.405 405.408 li
cp
@
88.6252 417.749 mo
88.6252 415.767 87.6661 414.233 86.5151 414.233 cv
85.3641 414.233 84.405 415.767 84.405 417.749 cv
84.405 419.668 85.3641 421.266 86.5151 421.266 cv
87.6661 421.266 88.6252 419.668 88.6252 417.749 cv
cp
72.4476 408.542 mo
72.4476 406.623 71.4885 405.025 70.3375 405.025 cv
69.1226 405.025 68.2274 406.623 68.2274 408.542 cv
68.2274 410.524 69.1226 412.122 70.3375 412.122 cv
71.4885 412.122 72.4476 410.524 72.4476 408.542 cv
0 0 0 0 cmyk
ef
.720426 lw
88.6252 417.749 mo
88.6252 415.767 87.6661 414.233 86.5151 414.233 cv
85.3641 414.233 84.405 415.767 84.405 417.749 cv
84.405 419.668 85.3641 421.266 86.5151 421.266 cv
87.6661 421.266 88.6252 419.668 88.6252 417.749 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
72.4476 408.542 mo
72.4476 406.623 71.4885 405.025 70.3375 405.025 cv
69.1226 405.025 68.2274 406.623 68.2274 408.542 cv
68.2274 410.524 69.1226 412.122 70.3375 412.122 cv
71.4885 412.122 72.4476 410.524 72.4476 408.542 cv
cp
@
111.197 407.135 mo
111.197 414.233 li
95.659 421.97 li
95.659 414.936 li
111.197 407.135 li
0 0 0 0 cmyk
ef
.239787 lw
111.197 407.135 mo
111.197 414.233 li
95.659 421.97 li
95.659 414.936 li
111.197 407.135 li
cp
.750179 .679652 .670191 .901488 cmyk
@
101.989 416.343 mo
97.7691 418.453 li
97.7691 416.343 li
101.989 414.233 li
101.989 416.343 li
0 0 0 0 cmyk
ef
109.727 412.122 mo
105.506 414.233 li
105.506 412.122 li
109.727 409.948 li
109.727 412.122 li
ef
gsave
315.943 405.344 mo
307.055 409.82 li
299.766 406.176 li
308.654 401.7 li
315.943 405.344 li
cp
309.485 399.845 mo
300.597 404.321 li
295.737 401.891 li
304.625 397.415 li
309.485 399.845 li
cp
289.215 400.868 mo
298.167 396.456 li
302.579 398.247 li
295.737 401.891 li
294.075 403.298 li
289.215 400.868 li
cp
307.055 413.849 mo
289.215 404.961 li
289.215 400.868 li
307.055 409.82 li
307.055 413.849 li
eclp
288.384 417.622 mo
318.565 417.622 li
318.565 395.625 li
288.384 395.625 li
cp
0 0 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[30.1812 0 0 21.9964 288.384 21.5041 ]ct
<<
/T 1
/W 119 
/H 87 
/M[119 0 0 -87 0 87 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
`W#r1oL&^UqXgcgYOV6^!FP]qWWB<qqaC9K!DiRaWWB<roG%BKqXgcgYOqHT!DiRaWWB<noMGWrqXgcg
YOqHT!DiRaWXuB('bM/m'bM/m'bM/m'd*;EWWB<qoL&^UqXgcgYOV6^!FP]qWWB<qoL&^UqY[AhWWB<r
oG%BKqXgcgYOqHT!DiRaWWB<noMGWrqXgcgYOqHT!DiRbWY)87nJ)WN&JYlm&JYlm&JZDaoVqqqo^kNP
:\s^`!O)%c;#t&#oVqqqo^kNP:\s^`!O)1p(&/LE+8YW0!O).f6ig*[oVqqqnaoZZ?i'Dp!O).f6ig*[
oVr>'nJ)WN&JYlm&JYlm!tc7iqXgcgYOqHT!DiRaWWB<noMGWrqXgcgYOqHT!DiRaWWB<roG%BKqYmMh
WWB<qoL&^UqXgcgYOV6^!FP]qWWB<qoL&^UqXgd!YON>>'bM/m'bM/m'bM0&qY.#hWWB<qoL&^UqXgcg
YOV6^!FP]qWWB<qoL&^UqXgcgYP%N&!?_11WWTHs6q$`:!DiRaWWB<noMGWrqXgcgYOqHT!DiRaWXuB(
'bM/m'bM/m'bM/m'd*;EWW96ss5*d+~>

%%EndBinary
grestore
np
f
grestore
0 lc
[.239787 .960213 ] 0 dsh
315.943 405.344 mo
307.055 409.82 li
299.766 406.176 li
308.654 401.7 li
315.943 405.344 li
cp
.750179 .679652 .670191 .901488 cmyk
@
309.485 399.845 mo
300.597 404.321 li
295.737 401.891 li
304.625 397.415 li
309.485 399.845 li
cp
@
289.215 400.868 mo
298.167 396.456 li
302.579 398.247 li
295.737 401.891 li
294.075 403.298 li
289.215 400.868 li
cp
@
307.055 413.849 mo
289.215 404.961 li
289.215 400.868 li
307.055 409.82 li
307.055 413.849 li
cp
@
gsave
311.531 403.106 mo
309.485 399.845 li
300.597 404.321 li
302.579 407.582 li
311.531 403.106 li
cp
300.597 404.321 mo
295.737 401.891 li
294.075 403.298 li
302.579 407.582 li
300.597 404.321 li
eclp
294.011 399.845 mo
298.103 399.845 li
298.103 403.938 li
294.011 403.938 li
cp
0 0 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 294.011 39.2803 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E16;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
298.103 399.845 mo
302.195 399.845 li
302.195 403.938 li
298.103 403.938 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 298.103 39.2803 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E16;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
302.195 399.845 mo
306.288 399.845 li
306.288 403.938 li
302.195 403.938 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 302.195 39.2803 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E16;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
306.288 399.845 mo
310.38 399.845 li
310.38 403.938 li
306.288 403.938 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 306.288 39.2803 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E16;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
310.38 399.845 mo
314.473 399.845 li
314.473 403.938 li
310.38 403.938 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 310.38 39.2803 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E16;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
294.011 403.938 mo
298.103 403.938 li
298.103 408.03 li
294.011 408.03 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 294.011 35.1879 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E16;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
298.103 403.938 mo
302.195 403.938 li
302.195 408.03 li
298.103 408.03 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 298.103 35.1879 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E16;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
302.195 403.938 mo
306.288 403.938 li
306.288 408.03 li
302.195 408.03 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 302.195 35.1879 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E16;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
306.288 403.938 mo
310.38 403.938 li
310.38 408.03 li
306.288 408.03 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 306.288 35.1879 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E16;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
310.38 403.938 mo
314.473 403.938 li
314.473 408.03 li
310.38 408.03 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 310.38 35.1879 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E16;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
311.531 403.106 mo
309.485 399.845 li
300.597 404.321 li
302.579 407.582 li
311.531 403.106 li
cp
@
300.597 404.321 mo
295.737 401.891 li
294.075 403.298 li
302.579 407.582 li
300.597 404.321 li
cp
@
gsave
303.027 411.419 mo
303.027 410.268 302.451 409.373 301.812 409.373 cv
301.108 409.373 300.597 410.268 300.597 411.419 cv
300.597 412.506 301.108 413.465 301.812 413.465 cv
302.451 413.465 303.027 412.506 303.027 411.419 cv
cp
293.691 406.176 mo
293.691 405.025 293.116 404.129 292.476 404.129 cv
291.773 404.129 291.261 405.025 291.261 406.176 cv
291.261 407.263 291.773 408.158 292.476 408.158 cv
293.116 408.158 293.691 407.263 293.691 406.176 cv
eclp
291.197 404.066 mo
295.29 404.066 li
295.29 408.158 li
291.197 408.158 li
cp
0 0 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 291.197 35.06 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAKUWi?XCWiB#tWi?XCWiAKVWi?XCWiB#tWi?XC~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
295.29 404.066 mo
299.382 404.066 li
299.382 408.158 li
295.29 408.158 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 295.29 35.06 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAKUWi?XCWiB#tWi?XCWiAKVWi?XCWiB#tWi?XC~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
299.382 404.066 mo
303.474 404.066 li
303.474 408.158 li
299.382 408.158 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 299.382 35.06 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAKUWi?XCWiB#tWi?XCWiAKVWi?XCWiB#tWi?XC~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
291.197 408.158 mo
295.29 408.158 li
295.29 412.25 li
291.197 412.25 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 291.197 30.9677 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAKUWi?XCWiB#tWi?XCWiAKVWi?XCWiB#tWi?XC~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
295.29 408.158 mo
299.382 408.158 li
299.382 412.25 li
295.29 412.25 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 295.29 30.9677 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAKUWi?XCWiB#tWi?XCWiAKVWi?XCWiB#tWi?XC~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
299.382 408.158 mo
303.474 408.158 li
303.474 412.25 li
299.382 412.25 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 299.382 30.9677 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAKUWi?XCWiB#tWi?XCWiAKVWi?XCWiB#tWi?XC~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
291.197 412.25 mo
295.29 412.25 li
295.29 416.343 li
291.197 416.343 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 291.197 26.8753 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAKUWi?XCWiB#tWi?XCWiAKVWi?XCWiB#tWi?XC~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
295.29 412.25 mo
299.382 412.25 li
299.382 416.343 li
295.29 416.343 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 295.29 26.8753 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAKUWi?XCWiB#tWi?XCWiAKVWi?XCWiB#tWi?XC~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
299.382 412.25 mo
303.474 412.25 li
303.474 416.343 li
299.382 416.343 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 299.382 26.8753 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAKUWi?XCWiB#tWi?XCWiAKVWi?XCWiB#tWi?XC~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
302.643 411.163 mo
302.963 410.716 li
303.346 411.099 li
303.027 411.483 li
302.643 411.163 li
cp
301.108 410.396 mo
300.661 410.524 li
300.533 410.012 li
300.98 409.884 li
301.108 410.396 li
cp
301.62 413.018 mo
301.94 413.465 li
301.556 413.785 li
301.172 413.401 li
301.62 413.018 li
cp
293.307 405.856 mo
293.627 405.472 li
294.011 405.792 li
293.691 406.176 li
293.307 405.856 li
cp
291.837 405.089 mo
291.325 405.28 li
291.197 404.769 li
291.709 404.641 li
291.837 405.089 li
cp
292.284 407.774 mo
292.604 408.158 li
292.22 408.478 li
291.901 408.094 li
292.284 407.774 li
f
gsave
315.943 405.344 mo
315.943 409.373 li
307.055 413.849 li
307.055 409.82 li
315.943 405.344 li
eclp
306.991 405.28 mo
311.084 405.28 li
311.084 409.373 li
306.991 409.373 li
cp
0 0 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 306.991 33.8451 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4p4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
311.084 405.28 mo
315.176 405.28 li
315.176 409.373 li
311.084 409.373 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 311.084 33.8451 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4p4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
315.176 405.28 mo
319.268 405.28 li
319.268 409.373 li
315.176 409.373 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 315.176 33.8451 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4p4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
306.991 409.373 mo
311.084 409.373 li
311.084 413.465 li
306.991 413.465 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 306.991 29.7527 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4p4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
311.084 409.373 mo
315.176 409.373 li
315.176 413.465 li
311.084 413.465 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 311.084 29.7527 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4p4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
315.176 409.373 mo
319.268 409.373 li
319.268 413.465 li
315.176 413.465 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 315.176 29.7527 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4p4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
306.991 413.465 mo
311.084 413.465 li
311.084 417.558 li
306.991 417.558 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 306.991 25.6604 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4p4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
311.084 413.465 mo
315.176 413.465 li
315.176 417.558 li
311.084 417.558 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 311.084 25.6604 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4p4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
315.176 413.465 mo
319.268 413.465 li
319.268 417.558 li
315.176 417.558 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 315.176 25.6604 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E4p4<E14e<E5ur<E14e<E4p6<E14e<E5ur<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
315.943 405.344 mo
315.943 409.373 li
307.055 413.849 li
307.055 409.82 li
315.943 405.344 li
cp
@
gsave
310.7 410.588 mo
308.27 411.803 li
308.27 410.588 li
310.7 409.373 li
310.7 410.588 li
eclp
308.206 409.309 mo
312.298 409.309 li
312.298 413.401 li
308.206 413.401 li
cp
0 0 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 308.206 29.8167 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Wi?dGWiAHTWiAonWiAHTWi?dKWiAHTWiAonWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
311.084 410.14 mo
310.7 410.46 li
310.316 410.14 li
310.7 409.756 li
311.084 410.14 li
cp
307.886 411.419 mo
308.27 411.099 li
308.654 411.419 li
308.27 411.803 li
307.886 411.419 li
f
gsave
315.176 408.158 mo
312.746 409.373 li
312.746 408.158 li
315.176 406.943 li
315.176 408.158 li
eclp
312.682 406.879 mo
316.774 406.879 li
316.774 410.971 li
312.682 410.971 li
cp
0 0 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 312.682 32.2465 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E1Lm<E4j2<E5cf<E4j2<E1Lu<E4j2<E5cf<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
315.496 407.71 mo
315.176 408.03 li
314.792 407.71 li
315.176 407.327 li
315.496 407.71 li
cp
312.362 408.989 mo
312.746 408.669 li
313.066 408.989 li
312.746 409.373 li
312.362 408.989 li
f
215.488 405.153 mo
205.13 410.332 li
196.625 406.112 li
207.048 400.932 li
215.488 405.153 li
cp
207.943 398.822 mo
197.584 404.002 li
191.957 401.188 li
202.316 396.009 li
207.943 398.822 li
cp
184.412 399.973 mo
194.771 394.794 li
199.95 396.904 li
191.957 401.188 li
190.039 402.851 li
184.412 399.973 li
cp
205.13 415.064 mo
184.412 404.705 li
184.412 399.973 li
205.13 410.332 li
205.13 415.064 li
0 0 0 0 cmyk
ef
1 lc
[] 0 dsh
215.488 405.153 mo
205.13 410.332 li
196.625 406.112 li
207.048 400.932 li
215.488 405.153 li
cp
.750179 .679652 .670191 .901488 cmyk
@
207.943 398.822 mo
197.584 404.002 li
191.957 401.188 li
202.316 396.009 li
207.943 398.822 li
cp
@
184.412 399.973 mo
194.771 394.794 li
199.95 396.904 li
191.957 401.188 li
190.039 402.851 li
184.412 399.973 li
cp
@
205.13 415.064 mo
184.412 404.705 li
184.412 399.973 li
205.13 410.332 li
205.13 415.064 li
cp
@
210.309 402.595 mo
207.943 398.822 li
197.584 404.002 li
199.95 407.774 li
210.309 402.595 li
cp
197.584 404.002 mo
191.957 401.188 li
190.039 402.851 li
199.95 407.774 li
197.584 404.002 li
0 0 0 0 cmyk
ef
210.309 402.595 mo
207.943 398.822 li
197.584 404.002 li
199.95 407.774 li
210.309 402.595 li
cp
.750179 .679652 .670191 .901488 cmyk
@
197.584 404.002 mo
191.957 401.188 li
190.039 402.851 li
199.95 407.774 li
197.584 404.002 li
cp
@
200.398 412.25 mo
200.398 410.971 199.822 409.884 198.991 409.884 cv
198.224 409.884 197.584 410.971 197.584 412.25 cv
197.584 413.529 198.224 414.616 198.991 414.616 cv
199.822 414.616 200.398 413.529 200.398 412.25 cv
cp
189.591 406.112 mo
189.591 404.833 188.952 403.746 188.185 403.746 cv
187.417 403.746 186.778 404.833 186.778 406.112 cv
186.778 407.391 187.417 408.478 188.185 408.478 cv
188.952 408.478 189.591 407.391 189.591 406.112 cv
0 0 0 0 cmyk
ef
.720426 lw
200.398 412.25 mo
200.398 410.971 199.822 409.884 198.991 409.884 cv
198.224 409.884 197.584 410.971 197.584 412.25 cv
197.584 413.529 198.224 414.616 198.991 414.616 cv
199.822 414.616 200.398 413.529 200.398 412.25 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
189.592 406.112 mo
189.592 404.833 188.952 403.746 188.185 403.746 cv
187.417 403.746 186.778 404.833 186.778 406.112 cv
186.778 407.391 187.417 408.478 188.185 408.478 cv
188.952 408.478 189.592 407.391 189.592 406.112 cv
cp
@
215.488 405.153 mo
215.488 409.884 li
205.13 415.064 li
205.13 410.332 li
215.488 405.153 li
0 0 0 0 cmyk
ef
.239787 lw
215.488 405.153 mo
215.488 409.884 li
205.13 415.064 li
205.13 410.332 li
215.488 405.153 li
cp
.750179 .679652 .670191 .901488 cmyk
@
209.414 411.291 mo
206.536 412.698 li
206.536 411.291 li
209.414 409.884 li
209.414 411.291 li
0 0 0 0 cmyk
ef
.720426 lw
209.414 411.291 mo
206.536 412.698 li
206.536 411.291 li
209.414 409.884 li
209.414 411.291 li
cp
.750179 .679652 .670191 .901488 cmyk
@
214.593 408.478 mo
211.716 409.884 li
211.716 408.478 li
214.593 407.071 li
214.593 408.478 li
0 0 0 0 cmyk
ef
214.593 408.478 mo
211.716 409.884 li
211.716 408.478 li
214.593 407.071 li
214.593 408.478 li
cp
.750179 .679652 .670191 .901488 cmyk
@
399.517 299.774 mo
397.343 299.774 li
395.872 295.938 li
390.821 295.938 li
389.414 299.774 li
387.368 299.774 li
392.291 286.794 li
394.338 286.794 li
cp
395.297 294.211 mo
394.274 291.59 393.698 290.119 393.57 289.799 cv
393.442 289.415 393.251 288.968 393.123 288.456 cv
393.378 288.456 li
393.251 289.224 393.059 289.991 392.739 290.694 cv
391.332 294.211 li
f
406.359 299.774 mo
404.441 299.774 li
404.441 289.863 li
403.865 290.566 402.842 291.206 401.371 291.717 cv
401.371 289.991 li
403.162 289.096 404.377 288.009 405.08 286.73 cv
406.359 286.73 li
f
567.112 304.314 mo
578.814 304.314 588.341 294.787 588.341 283.021 cv
588.341 271.256 578.814 261.728 567.112 261.728 cv
555.346 261.728 545.819 271.256 545.819 283.021 cv
545.819 294.787 555.346 304.314 567.112 304.314 cv
cp
579.005 274.133 mo
583.929 280.719 582.586 289.991 576 294.915 cv
573.442 296.897 570.309 297.92 567.112 297.92 cv
563.851 297.92 560.782 296.897 558.16 294.915 cv
579.005 274.133 li
cp
555.155 291.909 mo
550.231 285.323 551.574 276.051 558.16 271.128 cv
560.782 269.145 563.851 268.122 567.112 268.122 cv
570.309 268.122 573.442 269.145 576 271.128 cv
555.155 291.909 li
0 .990631 1 .000396735 cmyk
ef
29.9254 400.165 mo
28.0711 400.165 li
28.0711 388.591 li
29.9254 388.591 li
cp
39.1332 400.165 mo
37.4068 400.165 li
37.4068 395.05 li
37.4068 394.282 37.2789 393.707 37.0231 393.451 cv
36.7673 393.131 36.3837 393.003 35.8721 393.003 cv
35.4885 393.003 35.1687 393.131 34.7851 393.323 cv
34.4654 393.451 34.2096 393.707 34.0817 394.09 cv
33.9538 394.41 33.8899 394.922 33.8899 395.561 cv
33.8899 400.165 li
32.1634 400.165 li
32.1634 391.725 li
33.762 391.725 li
33.762 392.875 li
33.5062 392.875 li
33.8259 392.428 34.1457 392.108 34.5933 391.852 cv
35.0409 391.661 35.5524 391.533 36.1918 391.533 cv
36.6394 391.533 37.087 391.597 37.5346 391.788 cv
37.9183 391.916 38.302 392.172 38.5577 392.492 cv
38.8135 392.812 38.9414 393.195 39.0053 393.515 cv
39.0693 393.899 39.1332 394.41 39.1332 394.986 cv
cp
42.778 400.165 mo
41.0515 400.165 li
41.0515 391.725 li
42.778 391.725 li
cp
42.778 390.446 mo
41.0515 390.446 li
41.0515 388.591 li
42.778 388.591 li
cp
48.1492 400.101 mo
47.6377 400.165 47.254 400.229 46.9343 400.229 cv
46.2949 400.229 45.8473 400.101 45.5275 399.909 cv
45.2078 399.653 45.016 399.398 44.952 399.014 cv
44.8881 398.694 44.8881 398.183 44.8881 397.607 cv
44.8881 393.067 li
43.865 393.067 li
43.865 391.725 li
44.8881 391.725 li
44.8881 389.742 li
46.5506 388.847 li
46.5506 391.725 li
47.9574 391.725 li
47.9574 393.067 li
46.5506 393.067 li
46.5506 397.671 li
46.5506 398.055 46.6146 398.311 46.6785 398.439 cv
46.7425 398.566 46.8703 398.63 47.1901 398.63 cv
47.3819 398.63 47.5737 398.63 47.8934 398.566 cv
cp
50.7709 400.165 mo
49.1084 400.165 li
49.1084 391.725 li
50.7709 391.725 li
cp
50.7709 390.446 mo
49.1084 390.446 li
49.1084 388.591 li
50.7709 388.591 li
cp
60.0426 400.165 mo
58.3162 400.165 li
58.1243 399.781 58.0604 399.462 57.9965 399.142 cv
57.2291 399.909 56.27 400.357 55.119 400.357 cv
54.2238 400.357 53.5204 400.101 53.0089 399.653 cv
52.4973 399.206 52.1776 398.566 52.1776 397.799 cv
52.1776 397.096 52.4334 396.52 52.9449 396.073 cv
53.4565 395.625 54.2878 395.305 55.5027 395.113 cv
56.7815 394.986 li
57.2931 394.858 57.6767 394.794 57.8686 394.73 cv
57.8686 394.41 57.8686 394.154 57.8686 393.963 cv
57.8046 393.835 57.7407 393.643 57.6128 393.515 cv
57.5489 393.323 57.357 393.195 57.1013 393.131 cv
56.8455 393.003 56.5258 392.939 56.0782 392.939 cv
55.5027 392.939 55.0551 393.067 54.7354 393.259 cv
54.4156 393.451 54.2238 393.899 54.0959 394.538 cv
52.4334 394.282 li
52.6252 393.323 53.0089 392.62 53.6483 392.172 cv
54.2878 391.725 55.183 391.533 56.27 391.533 cv
57.2931 391.533 57.9965 391.661 58.508 391.98 cv
59.0195 392.3 59.2753 392.684 59.4032 393.067 cv
59.5311 393.515 59.595 394.09 59.595 394.73 cv
59.595 396.584 li
59.595 397.735 59.595 398.439 59.659 398.822 cv
59.659 399.206 59.7869 399.653 60.0426 400.165 cv
cp
57.8686 396.392 mo
57.8686 396.073 li
57.2931 396.328 56.4618 396.52 55.5027 396.648 cv
54.4796 396.776 53.968 397.16 53.968 397.799 cv
53.968 398.119 54.0959 398.375 54.3517 398.63 cv
54.6075 398.822 54.9911 398.95 55.4387 398.95 cv
56.0782 398.95 56.6537 398.758 57.1652 398.375 cv
57.6128 397.991 57.8686 397.352 57.8686 396.392 cv
cp
63.2398 400.165 mo
61.5773 400.165 li
61.5773 388.591 li
63.2398 388.591 li
cp
.750179 .679652 .670191 .901488 cmyk
f
11.5737 419.348 mo
9.91119 419.348 li
9.91119 407.774 li
11.5737 407.774 li
cp
16.9449 410.716 mo
18.0959 410.716 19.0551 411.099 19.7584 411.867 cv
20.5258 412.57 20.9094 413.657 20.9094 415 cv
20.9094 416.662 20.5258 417.813 19.6945 418.517 cv
18.8632 419.22 17.968 419.54 16.9449 419.54 cv
15.8579 419.54 14.9627 419.156 14.1314 418.453 cv
13.3641 417.749 12.9805 416.662 12.9805 415.128 cv
12.9805 413.657 13.3641 412.57 14.1314 411.803 cv
14.8988 411.099 15.794 410.716 16.9449 410.716 cv
cp
16.9449 418.069 mo
17.6483 418.069 18.2238 417.813 18.6075 417.238 cv
18.9911 416.726 19.183 416.023 19.183 415.064 cv
19.183 414.105 18.9911 413.337 18.5435 412.89 cv
18.0959 412.378 17.5844 412.186 16.9449 412.186 cv
16.3055 412.186 15.73 412.378 15.3464 412.89 cv
14.8988 413.401 14.7069 414.105 14.7069 415.128 cv
14.7069 416.151 14.8988 416.854 15.3464 417.366 cv
15.794 417.813 16.3055 418.069 16.9449 418.069 cv
cp
29.3499 416.215 mo
29.1581 417.43 28.7105 418.261 28.0711 418.772 cv
27.3677 419.284 26.6643 419.54 25.7691 419.54 cv
24.5542 419.54 23.595 419.156 22.9556 418.325 cv
22.2522 417.494 21.9325 416.471 21.9325 415.128 cv
21.9325 414.041 22.1243 413.209 22.508 412.506 cv
22.8917 411.867 23.4032 411.419 23.9787 411.099 cv
24.5542 410.844 25.1297 410.716 25.7691 410.716 cv
26.6643 410.716 27.4316 410.971 28.0711 411.419 cv
28.6465 411.867 29.0302 412.57 29.222 413.593 cv
27.5595 413.785 li
27.4316 413.209 27.2398 412.762 26.9201 412.506 cv
26.6643 412.314 26.2806 412.186 25.833 412.186 cv
25.1297 412.186 24.6181 412.442 24.2345 412.954 cv
23.8508 413.465 23.659 414.169 23.659 415.128 cv
23.659 416.087 23.8508 416.854 24.2345 417.302 cv
24.5542 417.813 25.1297 418.069 25.7691 418.069 cv
26.3446 418.069 26.7282 417.941 27.048 417.621 cv
27.3677 417.302 27.5595 416.79 27.6874 416.023 cv
cp
37.7265 419.348 mo
36.0639 419.348 li
35.8721 419.028 35.7442 418.709 35.7442 418.325 cv
34.913 419.156 33.9538 419.54 32.8668 419.54 cv
31.9716 419.54 31.2682 419.284 30.6927 418.836 cv
30.1812 418.389 29.9254 417.813 29.9254 417.046 cv
29.9254 416.343 30.1812 415.703 30.6927 415.256 cv
31.2043 414.808 32.0355 414.488 33.2505 414.36 cv
34.5293 414.169 li
35.0409 414.105 35.3606 413.977 35.6163 413.913 cv
35.6163 413.593 35.6163 413.337 35.5524 413.209 cv
35.5524 413.018 35.4885 412.89 35.3606 412.698 cv
35.2966 412.57 35.1048 412.442 34.849 412.314 cv
34.5933 412.186 34.2096 412.186 33.762 412.186 cv
33.2505 412.186 32.8028 412.25 32.4831 412.442 cv
32.1634 412.634 31.9716 413.082 31.7798 413.721 cv
30.1812 413.529 li
30.3091 412.506 30.6927 411.803 31.3961 411.355 cv
32.0355 410.971 32.8668 410.716 34.0178 410.716 cv
34.9769 410.716 35.7442 410.844 36.2558 411.163 cv
36.7034 411.483 37.0231 411.867 37.151 412.314 cv
37.2789 412.762 37.2789 413.273 37.2789 413.913 cv
37.2789 415.767 li
37.2789 416.918 37.3428 417.685 37.3428 418.069 cv
37.4068 418.389 37.5346 418.836 37.7265 419.348 cv
cp
35.6163 415.639 mo
35.6163 415.256 li
35.0409 415.511 34.2096 415.703 33.2505 415.831 cv
32.2274 415.959 31.7158 416.343 31.7158 416.982 cv
31.7158 417.302 31.8437 417.621 32.0995 417.813 cv
32.3552 418.005 32.675 418.133 33.1865 418.133 cv
33.8259 418.133 34.4014 417.941 34.913 417.558 cv
35.3606 417.174 35.6163 416.534 35.6163 415.639 cv
cp
42.778 419.284 mo
42.2664 419.412 41.8828 419.476 41.5631 419.476 cv
40.9236 419.476 40.476 419.348 40.1563 419.092 cv
39.8366 418.836 39.7087 418.581 39.5808 418.197 cv
39.5169 417.877 39.5169 417.43 39.5169 416.79 cv
39.5169 412.25 li
38.4938 412.25 li
38.4938 410.907 li
39.5169 410.907 li
39.5169 408.925 li
41.2433 408.03 li
41.2433 410.907 li
42.5862 410.907 li
42.5862 412.25 li
41.2433 412.25 li
41.2433 416.854 li
41.2433 417.238 41.2433 417.558 41.3073 417.685 cv
41.3712 417.813 41.5631 417.877 41.8188 417.877 cv
42.0107 417.877 42.2664 417.813 42.5862 417.813 cv
cp
45.4636 419.348 mo
43.7371 419.348 li
43.7371 410.907 li
45.4636 410.907 li
cp
45.4636 409.693 mo
43.7371 409.693 li
43.7371 407.774 li
45.4636 407.774 li
cp
50.7709 410.716 mo
51.9219 410.716 52.881 411.099 53.6483 411.867 cv
54.3517 412.57 54.7354 413.657 54.7354 415 cv
54.7354 416.662 54.3517 417.813 53.5204 418.517 cv
52.6892 419.22 51.794 419.54 50.7709 419.54 cv
49.6838 419.54 48.7886 419.156 48.0213 418.453 cv
47.1901 417.749 46.8064 416.662 46.8064 415.128 cv
46.8064 413.657 47.1901 412.57 47.9574 411.803 cv
48.7247 411.099 49.6838 410.716 50.7709 410.716 cv
cp
50.7709 418.069 mo
51.5382 418.069 52.0497 417.813 52.4334 417.238 cv
52.8171 416.726 53.0089 416.023 53.0089 415.064 cv
53.0089 414.105 52.8171 413.337 52.3695 412.89 cv
51.9219 412.378 51.4103 412.186 50.7709 412.186 cv
50.1314 412.186 49.6199 412.378 49.1723 412.89 cv
48.7247 413.401 48.5329 414.105 48.5329 415.128 cv
48.5329 416.151 48.7247 416.854 49.1723 417.366 cv
49.6199 417.813 50.1314 418.069 50.7709 418.069 cv
cp
63.1758 419.348 mo
61.4494 419.348 li
61.4494 414.233 li
61.4494 413.465 61.3215 412.954 61.0657 412.634 cv
60.81 412.378 60.4263 412.25 59.9148 412.25 cv
59.5311 412.25 59.2114 412.314 58.8917 412.506 cv
58.508 412.698 58.3162 412.954 58.1243 413.273 cv
57.9965 413.593 57.9325 414.105 57.9325 414.744 cv
57.9325 419.348 li
56.206 419.348 li
56.206 410.907 li
57.8046 410.907 li
57.8046 412.058 li
57.5489 412.058 li
57.8686 411.611 58.1883 411.291 58.6359 411.099 cv
59.1474 410.844 59.659 410.716 60.2345 410.716 cv
60.6821 410.716 61.1297 410.78 61.5773 410.971 cv
62.0249 411.099 62.3446 411.355 62.6004 411.675 cv
62.8561 412.058 63.048 412.378 63.1119 412.762 cv
63.1758 413.082 63.1758 413.593 63.1758 414.169 cv
f
123.794 388.591 mo
128.206 388.591 li
128.909 388.591 129.485 388.655 129.996 388.719 cv
130.444 388.783 130.956 388.975 131.403 389.231 cv
131.787 389.55 132.171 389.934 132.362 390.446 cv
132.618 390.957 132.682 391.469 132.682 391.98 cv
132.682 393.067 132.362 393.963 131.659 394.602 cv
130.956 395.241 129.869 395.561 128.334 395.561 cv
125.648 395.561 li
125.648 400.165 li
123.794 400.165 li
cp
125.648 393.963 mo
128.334 393.963 li
129.996 393.963 130.828 393.323 130.828 392.044 cv
130.828 391.661 130.764 391.277 130.508 390.957 cv
130.316 390.637 130.06 390.446 129.741 390.382 cv
129.421 390.254 128.973 390.254 128.334 390.254 cv
125.648 390.254 li
cp
137.798 391.533 mo
138.949 391.533 139.908 391.916 140.675 392.62 cv
141.378 393.387 141.762 394.41 141.762 395.817 cv
141.762 397.415 141.378 398.63 140.547 399.27 cv
139.716 399.973 138.821 400.357 137.798 400.357 cv
136.711 400.357 135.815 399.973 135.048 399.27 cv
134.217 398.566 133.833 397.415 133.833 395.945 cv
133.833 394.474 134.217 393.323 134.984 392.62 cv
135.751 391.852 136.711 391.533 137.798 391.533 cv
cp
137.798 398.886 mo
138.565 398.886 139.076 398.63 139.46 398.055 cv
139.844 397.543 140.036 396.776 140.036 395.881 cv
140.036 394.922 139.844 394.154 139.396 393.707 cv
138.949 393.195 138.437 392.939 137.798 392.939 cv
137.158 392.939 136.647 393.195 136.199 393.707 cv
135.751 394.154 135.56 394.922 135.56 395.945 cv
135.56 396.904 135.815 397.671 136.199 398.119 cv
136.647 398.63 137.158 398.886 137.798 398.886 cv
cp
147.773 394.282 mo
147.709 393.771 147.581 393.451 147.325 393.259 cv
147.005 393.067 146.622 392.939 146.174 392.939 cv
145.663 392.939 145.279 393.003 144.959 393.195 cv
144.703 393.323 144.576 393.579 144.576 393.835 cv
144.576 394.09 144.639 394.282 144.895 394.41 cv
145.151 394.538 145.535 394.666 146.174 394.858 cv
147.133 395.113 147.837 395.305 148.284 395.497 cv
148.732 395.689 149.115 395.945 149.371 396.264 cv
149.627 396.584 149.755 397.032 149.755 397.607 cv
149.755 398.375 149.435 399.014 148.796 399.526 cv
148.156 400.101 147.325 400.357 146.302 400.357 cv
145.279 400.357 144.384 400.101 143.808 399.653 cv
143.169 399.206 142.849 398.439 142.657 397.415 cv
144.32 397.224 li
144.448 397.799 144.639 398.247 144.959 398.503 cv
145.279 398.758 145.726 398.886 146.302 398.886 cv
146.877 398.886 147.325 398.758 147.581 398.566 cv
147.901 398.311 148.028 398.055 148.028 397.735 cv
148.028 397.543 147.965 397.352 147.837 397.224 cv
147.709 397.096 147.517 397.032 147.325 396.968 cv
147.133 396.904 146.622 396.776 145.726 396.52 cv
144.639 396.264 143.872 395.945 143.488 395.497 cv
143.105 395.113 142.913 394.602 142.913 394.026 cv
142.913 393.259 143.169 392.684 143.744 392.236 cv
144.32 391.725 145.087 391.533 146.046 391.533 cv
147.069 391.533 147.837 391.725 148.412 392.108 cv
148.988 392.556 149.307 393.195 149.435 394.09 cv
cp
155.83 394.282 mo
155.766 393.771 155.574 393.451 155.318 393.259 cv
155.062 393.067 154.679 392.939 154.167 392.939 cv
153.655 392.939 153.272 393.003 153.016 393.195 cv
152.696 393.323 152.568 393.579 152.568 393.835 cv
152.568 394.09 152.696 394.282 152.888 394.41 cv
153.144 394.538 153.528 394.666 154.167 394.858 cv
155.126 395.113 155.893 395.305 156.341 395.497 cv
156.789 395.689 157.108 395.945 157.364 396.264 cv
157.62 396.584 157.748 397.032 157.748 397.607 cv
157.748 398.375 157.428 399.014 156.853 399.526 cv
156.213 400.101 155.382 400.357 154.359 400.357 cv
153.272 400.357 152.441 400.101 151.801 399.653 cv
151.226 399.206 150.842 398.439 150.714 397.415 cv
152.377 397.224 li
152.441 397.799 152.632 398.247 152.952 398.503 cv
153.272 398.758 153.719 398.886 154.295 398.886 cv
154.87 398.886 155.318 398.758 155.574 398.566 cv
155.893 398.311 156.021 398.055 156.021 397.735 cv
156.021 397.543 155.957 397.352 155.83 397.224 cv
155.702 397.096 155.574 397.032 155.318 396.968 cv
155.126 396.904 154.615 396.776 153.783 396.52 cv
152.632 396.264 151.929 395.945 151.481 395.497 cv
151.098 395.113 150.906 394.602 150.906 394.026 cv
150.906 393.259 151.226 392.684 151.801 392.236 cv
152.377 391.725 153.144 391.533 154.039 391.533 cv
155.062 391.533 155.83 391.725 156.405 392.108 cv
156.98 392.556 157.364 393.195 157.492 394.09 cv
cp
160.945 400.165 mo
159.282 400.165 li
159.282 391.725 li
160.945 391.725 li
cp
160.945 390.446 mo
159.282 390.446 li
159.282 388.591 li
160.945 388.591 li
cp
164.334 392.62 mo
164.846 391.852 165.613 391.533 166.572 391.533 cv
167.723 391.533 168.554 391.916 169.258 392.684 cv
169.897 393.515 170.217 394.538 170.217 395.817 cv
170.217 397.224 169.833 398.375 169.13 399.142 cv
168.362 399.909 167.531 400.357 166.508 400.357 cv
165.549 400.357 164.718 399.909 164.206 399.142 cv
164.462 399.142 li
164.462 400.165 li
162.799 400.165 li
162.799 388.591 li
164.526 388.591 li
164.526 392.62 li
cp
166.444 398.886 mo
167.02 398.886 167.531 398.63 167.915 398.119 cv
168.298 397.607 168.49 396.84 168.49 395.881 cv
168.49 394.986 168.298 394.282 167.915 393.771 cv
167.595 393.195 167.084 392.939 166.444 392.939 cv
165.869 392.939 165.357 393.195 164.973 393.771 cv
164.59 394.282 164.398 394.986 164.398 395.881 cv
164.398 396.712 164.526 397.288 164.654 397.607 cv
164.846 397.991 165.037 398.247 165.357 398.503 cv
165.677 398.758 166.06 398.886 166.444 398.886 cv
cp
173.414 400.165 mo
171.751 400.165 li
171.751 388.591 li
173.414 388.591 li
cp
182.686 396.392 mo
176.611 396.392 li
176.675 397.16 176.867 397.799 177.314 398.247 cv
177.762 398.694 178.274 398.886 178.913 398.886 cv
179.425 398.886 179.808 398.758 180.128 398.503 cv
180.448 398.247 180.767 397.799 180.959 397.224 cv
182.622 397.415 li
182.366 398.439 181.982 399.142 181.343 399.59 cv
180.639 400.101 179.872 400.357 178.913 400.357 cv
177.634 400.357 176.675 399.973 175.908 399.142 cv
175.204 398.375 174.885 397.352 174.885 396.009 cv
174.885 394.666 175.204 393.579 175.908 392.748 cv
176.611 391.916 177.57 391.533 178.849 391.533 cv
179.425 391.533 180.064 391.661 180.639 391.916 cv
181.215 392.172 181.663 392.684 182.11 393.323 cv
182.494 393.963 182.686 394.986 182.686 396.392 cv
cp
180.959 394.986 mo
180.895 394.282 180.639 393.771 180.256 393.451 cv
179.808 393.131 179.361 392.939 178.849 392.939 cv
178.21 392.939 177.762 393.131 177.378 393.579 cv
176.931 393.963 176.739 394.41 176.675 394.986 cv
f
130.7 419.348 mo
128.973 419.348 li
128.973 407.774 li
130.7 407.774 li
cp
136.007 410.716 mo
137.158 410.716 138.117 411.099 138.885 411.867 cv
139.588 412.57 139.972 413.657 139.972 415 cv
139.972 416.662 139.588 417.813 138.757 418.517 cv
137.925 419.22 137.03 419.54 136.007 419.54 cv
134.92 419.54 134.025 419.156 133.258 418.453 cv
132.426 417.749 132.043 416.662 132.043 415.128 cv
132.043 413.657 132.426 412.57 133.194 411.803 cv
133.961 411.099 134.92 410.716 136.007 410.716 cv
cp
136.007 418.069 mo
136.774 418.069 137.286 417.813 137.67 417.302 cv
138.053 416.726 138.245 416.023 138.245 415.064 cv
138.245 414.105 138.053 413.337 137.606 412.89 cv
137.158 412.378 136.647 412.186 136.007 412.186 cv
135.368 412.186 134.856 412.378 134.409 412.89 cv
133.961 413.401 133.769 414.105 133.769 415.128 cv
133.769 416.151 134.025 416.854 134.409 417.366 cv
134.856 417.813 135.368 418.069 136.007 418.069 cv
cp
148.412 416.215 mo
148.22 417.43 147.837 418.261 147.133 418.772 cv
146.494 419.284 145.727 419.54 144.895 419.54 cv
143.616 419.54 142.721 419.156 142.018 418.325 cv
141.378 417.494 140.995 416.471 140.995 415.128 cv
140.995 414.041 141.187 413.209 141.57 412.506 cv
141.954 411.867 142.465 411.419 143.041 411.099 cv
143.616 410.844 144.256 410.716 144.895 410.716 cv
145.727 410.716 146.494 410.971 147.133 411.419 cv
147.773 411.867 148.156 412.57 148.284 413.593 cv
146.686 413.785 li
146.494 413.209 146.302 412.762 146.046 412.506 cv
145.727 412.314 145.407 412.186 144.959 412.186 cv
144.192 412.186 143.68 412.442 143.297 412.954 cv
142.913 413.465 142.721 414.169 142.721 415.128 cv
142.721 416.087 142.913 416.854 143.297 417.302 cv
143.68 417.813 144.192 418.069 144.831 418.069 cv
145.407 418.069 145.854 417.941 146.174 417.621 cv
146.494 417.302 146.686 416.79 146.75 416.023 cv
cp
156.853 419.348 mo
155.126 419.348 li
154.934 419.028 154.87 418.709 154.806 418.325 cv
154.039 419.156 153.08 419.54 151.929 419.54 cv
151.034 419.54 150.33 419.284 149.819 418.836 cv
149.307 418.389 148.988 417.813 148.988 417.046 cv
148.988 416.343 149.243 415.703 149.755 415.256 cv
150.266 414.808 151.162 414.488 152.313 414.36 cv
153.591 414.169 li
154.103 414.105 154.487 413.977 154.679 413.913 cv
154.679 413.593 154.679 413.337 154.679 413.209 cv
154.615 413.018 154.551 412.89 154.487 412.698 cv
154.359 412.57 154.167 412.442 153.911 412.314 cv
153.655 412.186 153.336 412.186 152.888 412.186 cv
152.313 412.186 151.865 412.25 151.545 412.442 cv
151.226 412.634 151.034 413.082 150.906 413.721 cv
149.243 413.529 li
149.435 412.506 149.819 411.803 150.458 411.355 cv
151.098 410.971 151.993 410.716 153.08 410.716 cv
154.103 410.716 154.806 410.844 155.318 411.163 cv
155.83 411.483 156.085 411.867 156.213 412.314 cv
156.341 412.762 156.405 413.273 156.405 413.913 cv
156.405 415.767 li
156.405 416.918 156.405 417.685 156.469 418.069 cv
156.469 418.389 156.597 418.836 156.853 419.348 cv
cp
154.679 415.639 mo
154.679 415.256 li
154.103 415.511 153.336 415.703 152.313 415.831 cv
151.29 415.959 150.778 416.343 150.778 416.982 cv
150.778 417.302 150.906 417.621 151.162 417.813 cv
151.417 418.005 151.801 418.133 152.249 418.133 cv
152.888 418.133 153.464 417.941 153.975 417.558 cv
154.423 417.174 154.679 416.534 154.679 415.639 cv
cp
161.84 419.284 mo
161.393 419.412 160.945 419.476 160.689 419.476 cv
160.05 419.476 159.538 419.348 159.282 419.092 cv
158.963 418.836 158.771 418.581 158.707 418.197 cv
158.643 417.877 158.579 417.43 158.579 416.79 cv
158.579 412.25 li
157.62 412.25 li
157.62 410.907 li
158.579 410.907 li
158.579 408.925 li
160.306 408.03 li
160.306 410.907 li
161.648 410.907 li
161.648 412.25 li
160.306 412.25 li
160.306 416.854 li
160.306 417.238 160.306 417.558 160.369 417.685 cv
160.433 417.813 160.625 417.877 160.881 417.877 cv
161.073 417.877 161.329 417.813 161.648 417.813 cv
cp
164.526 419.348 mo
162.799 419.348 li
162.799 410.907 li
164.526 410.907 li
cp
164.526 409.693 mo
162.799 409.693 li
162.799 407.774 li
164.526 407.774 li
cp
169.833 410.716 mo
170.984 410.716 171.943 411.099 172.711 411.867 cv
173.478 412.57 173.861 413.657 173.861 415 cv
173.861 416.662 173.414 417.813 172.647 418.517 cv
171.815 419.22 170.856 419.54 169.833 419.54 cv
168.81 419.54 167.851 419.156 167.084 418.453 cv
166.316 417.749 165.869 416.662 165.869 415.128 cv
165.869 413.657 166.252 412.57 167.02 411.803 cv
167.787 411.099 168.746 410.716 169.833 410.716 cv
cp
169.833 418.069 mo
170.6 418.069 171.176 417.813 171.56 417.302 cv
171.943 416.726 172.135 416.023 172.135 415.064 cv
172.135 414.105 171.879 413.337 171.432 412.89 cv
171.048 412.378 170.473 412.186 169.833 412.186 cv
169.194 412.186 168.682 412.378 168.234 412.89 cv
167.851 413.401 167.595 414.105 167.595 415.128 cv
167.595 416.151 167.851 416.854 168.298 417.366 cv
168.682 417.813 169.258 418.069 169.833 418.069 cv
cp
182.238 419.348 mo
180.576 419.348 li
180.576 414.233 li
180.576 413.465 180.448 412.954 180.128 412.634 cv
179.872 412.378 179.488 412.25 179.041 412.25 cv
178.657 412.25 178.274 412.314 177.954 412.506 cv
177.634 412.698 177.378 412.954 177.25 413.273 cv
177.059 413.593 176.995 414.105 176.995 414.744 cv
176.995 419.348 li
175.332 419.348 li
175.332 410.907 li
176.867 410.907 li
176.867 412.058 li
176.675 412.058 li
176.931 411.611 177.314 411.291 177.762 411.099 cv
178.21 410.844 178.721 410.716 179.297 410.716 cv
179.744 410.716 180.192 410.78 180.639 410.971 cv
181.087 411.099 181.407 411.355 181.663 411.675 cv
181.918 412.058 182.11 412.378 182.174 412.762 cv
182.238 413.082 182.238 413.593 182.238 414.169 cv
f
235.183 389.998 mo
239.595 389.998 li
240.234 389.998 240.874 390.062 241.322 390.126 cv
241.833 390.19 242.345 390.382 242.728 390.637 cv
243.176 390.957 243.496 391.341 243.751 391.852 cv
243.943 392.364 244.071 392.875 244.071 393.387 cv
244.071 394.474 243.751 395.369 243.048 396.009 cv
242.345 396.648 241.194 397.032 239.723 397.032 cv
236.973 397.032 li
236.973 401.572 li
235.183 401.572 li
cp
236.973 395.369 mo
239.723 395.369 li
241.385 395.369 242.217 394.73 242.217 393.451 cv
242.217 393.067 242.089 392.684 241.897 392.364 cv
241.705 392.044 241.449 391.852 241.13 391.788 cv
240.81 391.724 240.362 391.661 239.723 391.661 cv
236.973 391.661 li
cp
250.401 393.451 mo
249.89 394.922 li
249.442 394.73 249.059 394.666 248.803 394.666 cv
248.291 394.666 247.972 394.858 247.716 395.305 cv
247.46 395.689 247.396 396.328 247.396 397.16 cv
247.396 401.572 li
245.67 401.572 li
245.67 393.131 li
247.268 393.131 li
247.268 394.346 li
247.012 394.346 li
247.46 393.387 248.036 392.939 248.803 392.939 cv
249.314 392.939 249.89 393.131 250.401 393.451 cv
cp
257.947 401.572 mo
256.412 401.572 li
256.412 400.357 li
256.604 400.357 li
255.965 401.316 255.133 401.764 253.982 401.764 cv
253.407 401.764 252.831 401.636 252.32 401.316 cv
251.808 401.06 251.488 400.677 251.297 400.165 cv
251.105 399.717 251.041 399.078 251.041 398.311 cv
251.041 393.131 li
252.703 393.131 li
252.703 397.799 li
252.703 398.502 252.767 399.014 252.831 399.27 cv
252.895 399.59 253.023 399.781 253.343 399.973 cv
253.599 400.165 253.854 400.229 254.238 400.229 cv
254.75 400.229 255.197 400.101 255.645 399.717 cv
256.028 399.398 256.284 398.694 256.284 397.607 cv
256.284 393.131 li
257.947 393.131 li
cp
266.899 401.572 mo
265.236 401.572 li
265.236 396.456 li
265.236 395.689 265.108 395.113 264.789 394.858 cv
264.533 394.602 264.149 394.41 263.702 394.41 cv
263.318 394.41 262.934 394.538 262.615 394.73 cv
262.295 394.922 262.039 395.177 261.911 395.497 cv
261.719 395.817 261.655 396.328 261.655 396.968 cv
261.655 401.572 li
259.993 401.572 li
259.993 393.131 li
261.528 393.131 li
261.528 394.282 li
261.336 394.282 li
261.592 393.835 261.975 393.515 262.423 393.259 cv
262.87 393.067 263.382 392.939 263.957 392.939 cv
264.405 392.939 264.853 393.003 265.3 393.195 cv
265.748 393.323 266.068 393.579 266.323 393.899 cv
266.579 394.218 266.771 394.602 266.835 394.922 cv
266.899 395.305 266.899 395.817 266.899 396.392 cv
cp
276.234 397.863 mo
270.16 397.863 li
270.224 398.566 270.48 399.206 270.863 399.653 cv
271.311 400.101 271.822 400.293 272.462 400.293 cv
272.973 400.293 273.357 400.165 273.741 399.909 cv
274.06 399.653 274.316 399.206 274.508 398.63 cv
276.234 398.822 li
275.979 399.845 275.531 400.549 274.892 401.06 cv
274.252 401.508 273.421 401.764 272.462 401.764 cv
271.183 401.764 270.224 401.38 269.52 400.613 cv
268.817 399.781 268.433 398.758 268.433 397.415 cv
268.433 396.073 268.753 394.986 269.457 394.154 cv
270.16 393.323 271.119 392.939 272.398 392.939 cv
273.037 392.939 273.613 393.067 274.188 393.323 cv
274.764 393.643 275.275 394.09 275.659 394.73 cv
276.043 395.369 276.234 396.392 276.234 397.863 cv
cp
274.508 396.392 mo
274.444 395.753 274.252 395.241 273.805 394.858 cv
273.357 394.538 272.909 394.346 272.398 394.346 cv
271.822 394.346 271.311 394.602 270.927 394.986 cv
270.544 395.369 270.288 395.881 270.224 396.392 cv
f
244.391 413.401 mo
244.902 412.57 245.734 412.122 246.821 412.122 cv
247.908 412.122 248.803 412.57 249.442 413.337 cv
250.082 414.169 250.401 415.192 250.401 416.471 cv
250.401 417.813 250.082 418.9 249.378 419.732 cv
248.675 420.563 247.78 420.947 246.693 420.947 cv
245.798 420.947 245.094 420.627 244.519 419.923 cv
244.774 419.923 li
244.774 423.888 li
243.048 423.888 li
243.048 412.314 li
244.647 412.314 li
244.647 413.401 li
cp
246.629 419.476 mo
247.204 419.476 247.716 419.284 248.1 418.772 cv
248.483 418.261 248.675 417.494 248.675 416.471 cv
248.675 415.511 248.483 414.808 248.1 414.296 cv
247.78 413.785 247.268 413.529 246.693 413.529 cv
246.117 413.529 245.606 413.785 245.222 414.36 cv
244.838 414.936 244.583 415.703 244.583 416.598 cv
244.583 417.558 244.774 418.325 245.158 418.772 cv
245.542 419.284 246.053 419.476 246.629 419.476 cv
cp
255.389 412.122 mo
256.54 412.122 257.499 412.506 258.266 413.273 cv
259.034 413.977 259.417 415.064 259.417 416.407 cv
259.417 418.069 258.97 419.22 258.139 419.923 cv
257.371 420.627 256.412 420.947 255.389 420.947 cv
254.366 420.947 253.407 420.627 252.639 419.923 cv
251.808 419.156 251.425 418.069 251.425 416.534 cv
251.425 415.064 251.808 413.977 252.576 413.209 cv
253.343 412.506 254.302 412.122 255.389 412.122 cv
cp
255.389 419.476 mo
256.156 419.476 256.668 419.22 257.052 418.709 cv
257.435 418.133 257.627 417.43 257.627 416.471 cv
257.627 415.511 257.435 414.808 256.988 414.296 cv
256.604 413.849 256.028 413.593 255.389 413.593 cv
254.75 413.593 254.238 413.849 253.79 414.296 cv
253.407 414.808 253.151 415.575 253.151 416.534 cv
253.151 417.558 253.407 418.261 253.79 418.772 cv
254.238 419.284 254.75 419.476 255.389 419.476 cv
cp
262.551 420.755 mo
260.824 420.755 li
260.824 412.314 li
262.551 412.314 li
cp
262.551 411.099 mo
260.824 411.099 li
260.824 409.245 li
262.551 409.245 li
cp
271.375 420.755 mo
269.648 420.755 li
269.648 415.639 li
269.648 414.872 269.52 414.36 269.265 414.041 cv
269.009 413.785 268.625 413.657 268.114 413.657 cv
267.73 413.657 267.41 413.721 267.027 413.913 cv
266.707 414.105 266.451 414.36 266.323 414.68 cv
266.195 415 266.132 415.511 266.132 416.151 cv
266.132 420.755 li
264.405 420.755 li
264.405 412.314 li
266.004 412.314 li
266.004 413.465 li
265.748 413.465 li
266.068 413.082 266.387 412.698 266.835 412.506 cv
267.282 412.25 267.858 412.122 268.433 412.122 cv
268.881 412.122 269.329 412.25 269.776 412.378 cv
270.224 412.57 270.544 412.762 270.799 413.145 cv
271.055 413.465 271.247 413.785 271.311 414.169 cv
271.375 414.552 271.375 415 271.375 415.575 cv
cp
276.81 420.691 mo
276.298 420.819 275.915 420.883 275.595 420.883 cv
274.956 420.883 274.508 420.755 274.188 420.499 cv
273.869 420.307 273.677 419.987 273.613 419.668 cv
273.549 419.284 273.549 418.836 273.549 418.197 cv
273.549 413.721 li
272.526 413.721 li
272.526 412.314 li
273.549 412.314 li
273.549 410.396 li
275.275 409.437 li
275.275 412.314 li
276.618 412.314 li
276.618 413.721 li
275.275 413.721 li
275.275 418.325 li
275.275 418.709 275.275 418.964 275.339 419.092 cv
275.403 419.22 275.595 419.284 275.851 419.284 cv
276.043 419.284 276.298 419.22 276.618 419.22 cv
f
.239787 lw
419.659 427.597 mo
408.725 427.597 399.837 418.709 399.837 407.774 cv
399.837 396.84 408.725 387.952 419.659 387.952 cv
430.593 387.952 439.481 396.84 439.481 407.774 cv
439.481 418.709 430.593 427.597 419.659 427.597 cv
cp
@
348.81 407.327 mo
348.49 408.733 347.851 409.756 347.02 410.396 cv
346.188 411.035 345.165 411.355 344.014 411.355 cv
342.096 411.355 340.753 410.78 339.858 409.565 cv
339.027 408.414 338.579 406.943 338.579 405.28 cv
338.579 403.49 339.091 402.019 340.114 400.996 cv
341.137 399.973 342.416 399.398 344.014 399.398 cv
345.165 399.398 346.124 399.717 346.892 400.293 cv
347.723 400.868 348.298 401.764 348.618 402.978 cv
346.892 403.362 li
346.636 402.531 346.252 401.955 345.805 401.572 cv
345.293 401.188 344.718 400.996 344.014 400.996 cv
342.799 400.996 341.968 401.38 341.329 402.147 cv
340.753 402.915 340.433 404.002 340.433 405.28 cv
340.433 406.815 340.753 407.966 341.393 408.669 cv
342.032 409.373 342.863 409.756 343.886 409.756 cv
344.718 409.756 345.357 409.565 345.933 409.117 cv
346.444 408.669 346.828 407.902 347.02 406.879 cv
cp
353.862 402.531 mo
355.013 402.531 355.972 402.915 356.675 403.682 cv
357.442 404.385 357.826 405.472 357.826 406.815 cv
357.826 408.478 357.442 409.629 356.611 410.332 cv
355.78 411.035 354.885 411.355 353.862 411.355 cv
352.774 411.355 351.879 410.971 351.048 410.268 cv
350.281 409.565 349.897 408.478 349.897 406.943 cv
349.897 405.472 350.281 404.385 351.048 403.618 cv
351.815 402.915 352.711 402.531 353.862 402.531 cv
cp
353.862 409.884 mo
354.565 409.884 355.14 409.629 355.524 409.117 cv
355.908 408.542 356.1 407.838 356.1 406.879 cv
356.1 405.92 355.908 405.153 355.46 404.705 cv
355.013 404.193 354.501 404.002 353.862 404.002 cv
353.222 404.002 352.647 404.193 352.263 404.705 cv
351.815 405.217 351.624 405.92 351.624 406.943 cv
351.624 407.966 351.815 408.669 352.263 409.181 cv
352.711 409.693 353.222 409.884 353.862 409.884 cv
cp
366.267 411.163 mo
364.54 411.163 li
364.54 406.048 li
364.54 405.28 364.412 404.769 364.156 404.449 cv
363.901 404.193 363.517 404.066 363.005 404.066 cv
362.622 404.066 362.302 404.129 361.918 404.321 cv
361.599 404.513 361.343 404.769 361.215 405.089 cv
361.087 405.408 361.023 405.92 361.023 406.559 cv
361.023 411.163 li
359.297 411.163 li
359.297 402.723 li
360.895 402.723 li
360.895 403.874 li
360.639 403.874 li
360.895 403.426 361.279 403.106 361.727 402.915 cv
362.174 402.659 362.686 402.531 363.261 402.531 cv
363.709 402.531 364.156 402.595 364.604 402.787 cv
365.052 402.915 365.435 403.17 365.691 403.49 cv
365.947 403.874 366.075 404.193 366.139 404.577 cv
366.203 404.897 366.267 405.408 366.267 405.984 cv
cp
371.702 411.099 mo
371.19 411.227 370.806 411.291 370.487 411.291 cv
369.847 411.291 369.4 411.163 369.08 410.907 cv
368.76 410.652 368.568 410.396 368.505 410.012 cv
368.441 409.693 368.441 409.245 368.441 408.605 cv
368.441 404.066 li
367.417 404.066 li
367.417 402.723 li
368.441 402.723 li
368.441 400.74 li
370.103 399.845 li
370.103 402.723 li
371.51 402.723 li
371.51 404.066 li
370.103 404.066 li
370.103 408.669 li
370.103 409.053 370.167 409.373 370.231 409.501 cv
370.295 409.629 370.423 409.693 370.743 409.693 cv
370.934 409.693 371.19 409.629 371.446 409.629 cv
cp
380.014 411.163 mo
378.288 411.163 li
378.16 410.844 378.032 410.524 378.032 410.14 cv
377.201 410.971 376.242 411.355 375.155 411.355 cv
374.259 411.355 373.492 411.099 372.981 410.652 cv
372.469 410.204 372.213 409.629 372.213 408.861 cv
372.213 408.158 372.469 407.518 372.981 407.071 cv
373.492 406.623 374.323 406.304 375.538 406.176 cv
376.753 405.984 li
377.265 405.92 377.648 405.792 377.904 405.728 cv
377.904 405.408 377.84 405.153 377.84 405.025 cv
377.84 404.833 377.776 404.705 377.648 404.513 cv
377.521 404.385 377.329 404.257 377.073 404.129 cv
376.817 404.002 376.497 404.002 376.05 404.002 cv
375.474 404.002 375.091 404.066 374.771 404.257 cv
374.451 404.449 374.195 404.897 374.068 405.536 cv
372.469 405.344 li
372.597 404.321 372.981 403.618 373.62 403.17 cv
374.259 402.787 375.155 402.531 376.242 402.531 cv
377.265 402.531 378.032 402.659 378.48 402.978 cv
378.991 403.298 379.311 403.682 379.439 404.129 cv
379.503 404.577 379.567 405.089 379.567 405.728 cv
379.567 407.582 li
379.567 408.733 379.567 409.501 379.631 409.884 cv
379.695 410.204 379.822 410.652 380.014 411.163 cv
cp
377.904 407.455 mo
377.904 407.071 li
377.265 407.327 376.497 407.518 375.474 407.646 cv
374.515 407.774 374.004 408.158 374.004 408.797 cv
374.004 409.117 374.132 409.437 374.387 409.629 cv
374.579 409.82 374.963 409.948 375.474 409.948 cv
376.114 409.948 376.689 409.756 377.137 409.373 cv
377.648 408.989 377.904 408.35 377.904 407.455 cv
cp
388.519 408.03 mo
388.327 409.245 387.943 410.076 387.24 410.588 cv
386.6 411.099 385.833 411.355 385.002 411.355 cv
383.723 411.355 382.828 410.971 382.124 410.14 cv
381.485 409.309 381.101 408.286 381.101 406.943 cv
381.101 405.856 381.293 405.025 381.677 404.321 cv
382.06 403.682 382.572 403.234 383.147 402.915 cv
383.723 402.659 384.362 402.531 385.002 402.531 cv
385.833 402.531 386.6 402.787 387.24 403.234 cv
387.879 403.682 388.263 404.385 388.391 405.408 cv
386.792 405.6 li
386.6 405.025 386.409 404.577 386.153 404.321 cv
385.833 404.129 385.513 404.002 385.066 404.002 cv
384.298 404.002 383.787 404.257 383.403 404.769 cv
383.02 405.28 382.828 405.984 382.828 406.943 cv
382.828 407.902 383.02 408.669 383.403 409.117 cv
383.787 409.629 384.298 409.884 384.938 409.884 cv
385.513 409.884 385.961 409.756 386.281 409.437 cv
386.536 409.117 386.792 408.605 386.856 407.838 cv
cp
393.059 411.099 mo
392.547 411.227 392.163 411.291 391.844 411.291 cv
391.204 411.291 390.757 411.163 390.437 410.907 cv
390.117 410.652 389.925 410.396 389.862 410.012 cv
389.798 409.693 389.798 409.245 389.798 408.605 cv
389.798 404.066 li
388.775 404.066 li
388.775 402.723 li
389.798 402.723 li
389.798 400.74 li
391.524 399.845 li
391.524 402.723 li
392.867 402.723 li
392.867 404.066 li
391.524 404.066 li
391.524 408.669 li
391.524 409.053 391.524 409.373 391.588 409.501 cv
391.652 409.629 391.844 409.693 392.1 409.693 cv
392.291 409.693 392.547 409.629 392.867 409.629 cv
f
447.283 376.57 mo
459.432 376.57 469.279 366.723 469.279 354.637 cv
469.279 342.488 459.432 332.641 447.283 332.641 cv
435.197 332.641 425.35 342.488 425.35 354.637 cv
425.35 366.723 435.197 376.57 447.283 376.57 cv
cp
459.624 345.43 mo
464.739 352.208 463.332 361.863 456.49 366.915 cv
453.869 368.897 450.608 369.984 447.283 369.984 cv
443.957 369.984 440.76 368.897 438.075 366.915 cv
459.624 345.43 li
cp
435.005 363.845 mo
429.89 357.003 431.297 347.412 438.075 342.296 cv
440.76 340.314 443.957 339.227 447.283 339.227 cv
450.608 339.227 453.869 340.314 456.49 342.296 cv
435.005 363.845 li
0 .990631 1 .000396735 cmyk
ef
247.396 373.053 mo
259.545 373.053 269.393 363.206 269.393 351.057 cv
269.393 338.907 259.545 329.124 247.396 329.124 cv
235.247 329.124 225.464 338.907 225.464 351.057 cv
225.464 363.206 235.247 373.053 247.396 373.053 cv
cp
259.737 341.849 mo
264.789 348.691 263.446 358.282 256.604 363.398 cv
253.982 365.38 250.721 366.467 247.396 366.467 cv
244.071 366.467 240.874 365.38 238.188 363.398 cv
259.737 341.849 li
cp
235.119 360.264 mo
230.004 353.486 231.41 343.831 238.188 338.78 cv
240.874 336.733 244.071 335.71 247.396 335.71 cv
250.721 335.71 253.982 336.733 256.604 338.78 cv
235.119 360.264 li
ef
238.188 160.57 mo
228.725 165.302 li
220.988 161.465 li
230.451 156.733 li
238.188 160.57 li
cp
231.346 154.815 mo
221.883 159.483 li
216.703 156.925 li
226.167 152.193 li
231.346 154.815 li
cp
209.862 155.838 mo
219.325 151.106 li
223.993 153.089 li
216.703 156.925 li
214.977 158.46 li
209.862 155.838 li
cp
228.725 169.586 mo
209.862 160.186 li
209.862 155.838 li
228.725 165.302 li
228.725 169.586 li
.789425 .534295 0 0 cmyk
ef
238.188 160.57 mo
228.725 165.302 li
220.988 161.465 li
230.451 156.733 li
238.188 160.57 li
cp
.750179 .679652 .670191 .901488 cmyk
@
231.346 154.815 mo
221.883 159.483 li
216.703 156.925 li
226.167 152.193 li
231.346 154.815 li
cp
@
209.861 155.838 mo
219.325 151.106 li
223.993 153.089 li
216.703 156.925 li
214.977 158.46 li
209.861 155.838 li
cp
@
228.725 169.586 mo
209.861 160.186 li
209.861 155.838 li
228.725 165.302 li
228.725 169.586 li
cp
@
233.457 158.204 mo
231.346 154.815 li
221.883 159.483 li
223.993 162.936 li
233.457 158.204 li
cp
221.883 159.483 mo
216.703 156.925 li
214.977 158.46 li
223.993 162.936 li
221.883 159.483 li
.789425 .534295 0 0 cmyk
ef
233.457 158.204 mo
231.346 154.815 li
221.883 159.483 li
223.993 162.936 li
233.457 158.204 li
cp
.750179 .679652 .670191 .901488 cmyk
@
221.883 159.483 mo
216.703 156.925 li
214.977 158.46 li
223.993 162.936 li
221.883 159.483 li
cp
@
224.441 167.028 mo
224.441 165.877 223.865 164.854 223.162 164.854 cv
222.458 164.854 221.883 165.877 221.883 167.028 cv
221.883 168.243 222.458 169.202 223.162 169.202 cv
223.865 169.202 224.441 168.243 224.441 167.028 cv
cp
214.593 161.465 mo
214.593 160.25 214.018 159.291 213.25 159.291 cv
212.547 159.291 211.972 160.25 211.972 161.465 cv
211.972 162.616 212.547 163.575 213.25 163.575 cv
214.018 163.575 214.593 162.616 214.593 161.465 cv
.789425 .534295 0 0 cmyk
ef
.720426 lw
224.441 167.028 mo
224.441 165.877 223.865 164.854 223.162 164.854 cv
222.458 164.854 221.883 165.877 221.883 167.028 cv
221.883 168.243 222.458 169.202 223.162 169.202 cv
223.865 169.202 224.441 168.243 224.441 167.028 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
214.593 161.465 mo
214.593 160.25 214.018 159.291 213.25 159.291 cv
212.547 159.291 211.972 160.25 211.972 161.465 cv
211.972 162.616 212.547 163.575 213.25 163.575 cv
214.018 163.575 214.593 162.616 214.593 161.465 cv
cp
@
238.188 160.57 mo
238.188 164.854 li
228.725 169.586 li
228.725 165.302 li
238.188 160.57 li
.789425 .534295 0 0 cmyk
ef
.239787 lw
238.188 160.57 mo
238.188 164.854 li
228.725 169.586 li
228.725 165.302 li
238.188 160.57 li
cp
.750179 .679652 .670191 .901488 cmyk
@
232.625 166.197 mo
230.004 167.476 li
230.004 166.197 li
232.625 164.854 li
232.625 166.197 li
.789425 .534295 0 0 cmyk
ef
237.357 163.575 mo
234.735 164.854 li
234.735 163.575 li
237.357 162.296 li
237.357 163.575 li
ef
180.064 159.227 mo
190.487 164.854 li
192.213 161.465 195.282 158.907 198.991 157.82 cv
188.568 152.577 li
184.86 153.344 181.727 155.774 180.064 159.227 cv
cp
190.934 148.804 mo
201.357 154.048 li
206.984 151.17 li
196.625 145.991 li
190.934 148.804 li
cp
211.268 151.682 mo
200.846 146.439 li
198.991 147.142 li
206.984 151.17 li
206.984 153.792 li
211.268 151.682 li
cp
190.487 166.772 mo
211.268 156.35 li
211.268 151.682 li
198.991 157.82 li
195.282 158.907 192.213 161.465 190.487 164.854 cv
190.487 166.772 li
0 .990631 1 .000396735 cmyk
ef
180.064 159.227 mo
190.487 164.854 li
192.213 161.465 195.282 158.907 198.991 157.82 cv
188.568 152.577 li
184.86 153.344 181.727 155.774 180.064 159.227 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
190.934 148.804 mo
201.357 154.048 li
206.984 151.17 li
196.625 145.991 li
190.934 148.804 li
cp
@
211.268 151.682 mo
200.846 146.439 li
198.991 147.142 li
206.984 151.17 li
206.984 153.792 li
211.268 151.682 li
cp
@
190.487 166.772 mo
211.268 156.35 li
211.268 151.682 li
198.991 157.82 li
195.282 158.907 192.213 161.465 190.487 164.854 cv
190.487 166.772 li
cp
@
188.568 152.577 mo
190.934 148.804 li
201.357 154.048 li
198.991 157.82 li
188.568 152.577 li
cp
201.357 154.048 mo
206.984 151.17 li
209.862 152.385 li
198.991 157.82 li
201.357 154.048 li
.895628 .7673 0 0 cmyk
ef
188.568 152.577 mo
190.934 148.804 li
201.357 154.048 li
198.991 157.82 li
188.568 152.577 li
cp
.750179 .679652 .670191 .901488 cmyk
@
201.357 154.048 mo
206.984 151.17 li
209.862 152.385 li
198.991 157.82 li
201.357 154.048 li
cp
@
193.748 164.407 mo
193.748 163.128 194.387 162.041 195.219 162.041 cv
195.986 162.041 196.625 163.128 196.625 164.407 cv
196.625 165.685 195.986 166.772 195.219 166.772 cv
194.387 166.772 193.748 165.685 193.748 164.407 cv
cp
204.618 158.268 mo
204.618 156.989 205.258 155.902 206.089 155.902 cv
206.856 155.902 207.496 156.989 207.496 158.268 cv
207.496 159.547 206.856 160.634 206.089 160.634 cv
205.258 160.634 204.618 159.547 204.618 158.268 cv
0 0 0 0 cmyk
ef
.720426 lw
193.748 164.407 mo
193.748 163.128 194.387 162.041 195.219 162.041 cv
195.986 162.041 196.625 163.128 196.625 164.407 cv
196.625 165.685 195.986 166.772 195.219 166.772 cv
194.387 166.772 193.748 165.685 193.748 164.407 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
204.618 158.268 mo
204.618 156.989 205.258 155.902 206.089 155.902 cv
206.856 155.902 207.496 156.989 207.496 158.268 cv
207.496 159.547 206.856 160.634 206.089 160.634 cv
205.258 160.634 204.618 159.547 204.618 158.268 cv
cp
@
180.064 159.227 mo
180.064 161.593 li
190.487 166.772 li
190.487 164.854 li
180.064 159.227 li
0 0 0 0 cmyk
ef
.239787 lw
180.064 159.227 mo
180.064 161.593 li
190.487 166.772 li
190.487 164.854 li
180.064 159.227 li
cp
.750179 .679652 .670191 .901488 cmyk
@
206.984 188.513 mo
217.407 194.204 li
219.197 190.751 222.266 188.193 225.911 187.106 cv
215.489 181.927 li
211.78 182.63 208.647 185.06 206.984 188.513 cv
cp
217.854 178.09 mo
228.277 183.334 li
233.968 180.456 li
223.545 175.277 li
217.854 178.09 li
cp
238.188 180.968 mo
227.83 175.724 li
225.911 176.492 li
233.968 180.456 li
233.968 183.078 li
238.188 180.968 li
cp
217.407 196.058 mo
238.188 185.7 li
238.188 180.968 li
225.911 187.106 li
222.266 188.193 219.197 190.751 217.407 194.204 cv
217.407 196.058 li
0 .990631 1 .000396735 cmyk
ef
206.984 188.513 mo
217.407 194.204 li
219.197 190.751 222.266 188.193 225.911 187.106 cv
215.489 181.927 li
211.78 182.63 208.647 185.06 206.984 188.513 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
217.854 178.09 mo
228.277 183.334 li
233.968 180.456 li
223.545 175.277 li
217.854 178.09 li
cp
@
238.188 180.968 mo
227.83 175.724 li
225.911 176.492 li
233.968 180.456 li
233.968 183.078 li
238.188 180.968 li
cp
@
217.407 196.058 mo
238.188 185.7 li
238.188 180.968 li
225.911 187.106 li
222.266 188.193 219.197 190.751 217.407 194.204 cv
217.407 196.058 li
cp
@
215.488 181.927 mo
217.854 178.09 li
228.277 183.334 li
225.911 187.106 li
215.488 181.927 li
cp
228.277 183.334 mo
233.968 180.456 li
236.782 181.671 li
225.911 187.106 li
228.277 183.334 li
.895628 .7673 0 0 cmyk
ef
215.488 181.927 mo
217.854 178.09 li
228.277 183.334 li
225.911 187.106 li
215.488 181.927 li
cp
.750179 .679652 .670191 .901488 cmyk
@
228.277 183.334 mo
233.968 180.456 li
236.782 181.671 li
225.911 187.106 li
228.277 183.334 li
cp
@
220.732 193.693 mo
220.732 192.414 221.371 191.327 222.139 191.327 cv
222.906 191.327 223.545 192.414 223.545 193.693 cv
223.545 195.035 222.906 196.058 222.139 196.058 cv
221.371 196.058 220.732 195.035 220.732 193.693 cv
cp
231.602 187.554 mo
231.602 186.275 232.242 185.188 233.009 185.188 cv
233.776 185.188 234.416 186.275 234.416 187.554 cv
234.416 188.897 233.776 189.92 233.009 189.92 cv
232.242 189.92 231.602 188.897 231.602 187.554 cv
0 0 0 0 cmyk
ef
.720426 lw
220.732 193.693 mo
220.732 192.414 221.371 191.327 222.139 191.327 cv
222.906 191.327 223.545 192.414 223.545 193.693 cv
223.545 195.035 222.906 196.058 222.139 196.058 cv
221.371 196.058 220.732 195.035 220.732 193.693 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
231.602 187.554 mo
231.602 186.275 232.242 185.188 233.009 185.188 cv
233.776 185.188 234.416 186.275 234.416 187.554 cv
234.416 188.897 233.776 189.92 233.009 189.92 cv
232.242 189.92 231.602 188.897 231.602 187.554 cv
cp
@
206.984 188.513 mo
206.984 190.879 li
217.407 196.058 li
217.407 194.204 li
206.984 188.513 li
0 0 0 0 cmyk
ef
.239787 lw
206.984 188.513 mo
206.984 190.879 li
217.407 196.058 li
217.407 194.204 li
206.984 188.513 li
cp
.750179 .679652 .670191 .901488 cmyk
@
360.128 275.476 mo
370.487 281.103 li
372.277 277.714 375.346 275.156 378.991 274.069 cv
368.632 268.826 li
364.924 269.593 361.727 272.023 360.128 275.476 cv
cp
370.998 265.053 mo
381.357 270.232 li
387.048 267.419 li
376.625 262.24 li
370.998 265.053 li
cp
391.332 267.931 mo
380.909 262.687 li
378.991 263.391 li
387.048 267.419 li
387.048 270.041 li
391.332 267.931 li
cp
370.487 283.021 mo
391.332 272.598 li
391.332 267.931 li
378.991 274.069 li
375.346 275.156 372.277 277.714 370.487 281.103 cv
370.487 283.021 li
0 .990631 1 .000396735 cmyk
ef
360.128 275.476 mo
370.487 281.103 li
372.277 277.714 375.346 275.156 378.991 274.069 cv
368.632 268.826 li
364.924 269.593 361.727 272.023 360.128 275.476 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
370.998 265.053 mo
381.357 270.232 li
387.048 267.419 li
376.625 262.24 li
370.998 265.053 li
cp
@
391.332 267.931 mo
380.909 262.687 li
378.991 263.391 li
387.048 267.419 li
387.048 270.041 li
391.332 267.931 li
cp
@
370.487 283.021 mo
391.332 272.598 li
391.332 267.931 li
378.991 274.069 li
375.346 275.156 372.277 277.714 370.487 281.103 cv
370.487 283.021 li
cp
@
368.632 268.826 mo
370.998 265.053 li
381.357 270.232 li
378.991 274.069 li
368.632 268.826 li
cp
381.357 270.232 mo
387.048 267.419 li
389.862 268.634 li
378.991 274.069 li
381.357 270.232 li
.895628 .7673 0 0 cmyk
ef
368.632 268.826 mo
370.998 265.053 li
381.357 270.232 li
378.991 274.069 li
368.632 268.826 li
cp
.750179 .679652 .670191 .901488 cmyk
@
381.357 270.232 mo
387.048 267.419 li
389.862 268.634 li
378.991 274.069 li
381.357 270.232 li
cp
@
373.812 280.655 mo
373.812 279.376 374.451 278.289 375.219 278.289 cv
376.05 278.289 376.625 279.376 376.625 280.655 cv
376.625 281.934 376.05 283.021 375.219 283.021 cv
374.451 283.021 373.812 281.934 373.812 280.655 cv
cp
384.682 274.517 mo
384.682 273.238 385.322 272.151 386.089 272.151 cv
386.92 272.151 387.496 273.238 387.496 274.517 cv
387.496 275.796 386.92 276.883 386.089 276.883 cv
385.322 276.883 384.682 275.796 384.682 274.517 cv
0 0 0 0 cmyk
ef
.720426 lw
373.812 280.655 mo
373.812 279.376 374.451 278.289 375.219 278.289 cv
376.05 278.289 376.625 279.376 376.625 280.655 cv
376.625 281.934 376.05 283.021 375.219 283.021 cv
374.451 283.021 373.812 281.934 373.812 280.655 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
384.682 274.517 mo
384.682 273.238 385.322 272.151 386.089 272.151 cv
386.92 272.151 387.496 273.238 387.496 274.517 cv
387.496 275.796 386.92 276.883 386.089 276.883 cv
385.322 276.883 384.682 275.796 384.682 274.517 cv
cp
@
360.128 275.476 mo
360.128 277.842 li
370.487 283.021 li
370.487 281.103 li
360.128 275.476 li
0 0 0 0 cmyk
ef
.239787 lw
360.128 275.476 mo
360.128 277.842 li
370.487 283.021 li
370.487 281.103 li
360.128 275.476 li
cp
.750179 .679652 .670191 .901488 cmyk
@
406.87 420.563 mo
417.293 426.19 li
419.084 422.801 422.153 420.243 425.798 419.092 cv
415.375 413.913 li
411.666 414.68 408.533 417.11 406.87 420.563 cv
cp
417.741 410.14 mo
428.163 415.32 li
433.854 412.506 li
423.432 407.327 li
417.741 410.14 li
cp
438.075 412.954 mo
427.716 407.774 li
425.798 408.478 li
433.854 412.506 li
433.854 415.128 li
438.075 412.954 li
cp
417.293 428.108 mo
438.075 417.685 li
438.075 412.954 li
425.798 419.092 li
422.153 420.243 419.084 422.801 417.293 426.19 cv
417.293 428.108 li
0 .990631 1 .000396735 cmyk
ef
406.87 420.563 mo
417.293 426.19 li
419.084 422.801 422.153 420.243 425.798 419.092 cv
415.375 413.913 li
411.666 414.68 408.533 417.11 406.87 420.563 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
417.741 410.14 mo
428.163 415.32 li
433.854 412.506 li
423.432 407.327 li
417.741 410.14 li
cp
@
438.075 412.954 mo
427.716 407.774 li
425.798 408.478 li
433.854 412.506 li
433.854 415.128 li
438.075 412.954 li
cp
@
417.293 428.108 mo
438.075 417.685 li
438.075 412.954 li
425.798 419.092 li
422.153 420.243 419.084 422.801 417.293 426.19 cv
417.293 428.108 li
cp
@
415.375 413.913 mo
417.741 410.14 li
428.164 415.32 li
425.798 419.092 li
415.375 413.913 li
cp
428.164 415.32 mo
433.854 412.506 li
436.668 413.657 li
425.798 419.092 li
428.164 415.32 li
.895628 .7673 0 0 cmyk
ef
415.375 413.913 mo
417.741 410.14 li
428.164 415.32 li
425.798 419.092 li
415.375 413.913 li
cp
.750179 .679652 .670191 .901488 cmyk
@
428.163 415.32 mo
433.854 412.506 li
436.668 413.657 li
425.798 419.092 li
428.163 415.32 li
cp
@
420.618 425.742 mo
420.618 424.399 421.258 423.376 422.025 423.376 cv
422.792 423.376 423.432 424.399 423.432 425.742 cv
423.432 427.021 422.792 428.108 422.025 428.108 cv
421.258 428.108 420.618 427.021 420.618 425.742 cv
cp
431.489 419.604 mo
431.489 418.261 432.128 417.238 432.895 417.238 cv
433.663 417.238 434.302 418.261 434.302 419.604 cv
434.302 420.883 433.663 421.97 432.895 421.97 cv
432.128 421.97 431.489 420.883 431.489 419.604 cv
0 0 0 0 cmyk
ef
.720426 lw
420.618 425.742 mo
420.618 424.399 421.258 423.376 422.025 423.376 cv
422.792 423.376 423.432 424.399 423.432 425.742 cv
423.432 427.021 422.792 428.108 422.025 428.108 cv
421.258 428.108 420.618 427.021 420.618 425.742 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
431.489 419.604 mo
431.489 418.261 432.128 417.238 432.895 417.238 cv
433.663 417.238 434.302 418.261 434.302 419.604 cv
434.302 420.883 433.663 421.97 432.895 421.97 cv
432.128 421.97 431.489 420.883 431.489 419.604 cv
cp
@
406.87 420.563 mo
406.87 422.929 li
417.293 428.108 li
417.293 426.19 li
406.87 420.563 li
0 0 0 0 cmyk
ef
.239787 lw
406.87 420.563 mo
406.87 422.929 li
417.293 428.108 li
417.293 426.19 li
406.87 420.563 li
cp
.750179 .679652 .670191 .901488 cmyk
@
436.668 399.462 mo
427.204 404.193 li
419.467 400.357 li
428.931 395.625 li
436.668 399.462 li
cp
429.826 393.707 mo
420.362 398.439 li
415.183 395.817 li
424.647 391.085 li
429.826 393.707 li
cp
408.341 394.73 mo
417.741 390.062 li
422.473 391.98 li
415.183 395.817 li
413.457 397.352 li
408.341 394.73 li
cp
427.204 408.478 mo
408.341 399.078 li
408.341 394.73 li
427.204 404.193 li
427.204 408.478 li
.789425 .534295 0 0 cmyk
ef
436.668 399.462 mo
427.204 404.193 li
419.467 400.357 li
428.931 395.625 li
436.668 399.462 li
cp
.750179 .679652 .670191 .901488 cmyk
@
429.826 393.707 mo
420.362 398.439 li
415.183 395.817 li
424.647 391.085 li
429.826 393.707 li
cp
@
408.341 394.73 mo
417.741 390.062 li
422.473 391.98 li
415.183 395.817 li
413.457 397.352 li
408.341 394.73 li
cp
@
427.204 408.478 mo
408.341 399.078 li
408.341 394.73 li
427.204 404.193 li
427.204 408.478 li
cp
@
431.936 397.096 mo
429.826 393.707 li
420.362 398.439 li
422.473 401.828 li
431.936 397.096 li
cp
420.362 398.439 mo
415.183 395.817 li
413.457 397.352 li
422.473 401.828 li
420.362 398.439 li
.789425 .534295 0 0 cmyk
ef
431.936 397.096 mo
429.826 393.707 li
420.362 398.439 li
422.473 401.828 li
431.936 397.096 li
cp
.750179 .679652 .670191 .901488 cmyk
@
420.362 398.439 mo
415.183 395.817 li
413.457 397.352 li
422.473 401.828 li
420.362 398.439 li
cp
@
422.92 405.92 mo
422.92 404.769 422.345 403.81 421.641 403.81 cv
420.938 403.81 420.362 404.769 420.362 405.92 cv
420.362 407.135 420.938 408.094 421.641 408.094 cv
422.345 408.094 422.92 407.135 422.92 405.92 cv
cp
413.073 400.357 mo
413.073 399.142 412.497 398.183 411.73 398.183 cv
411.027 398.183 410.451 399.142 410.451 400.357 cv
410.451 401.508 411.027 402.467 411.73 402.467 cv
412.497 402.467 413.073 401.508 413.073 400.357 cv
.789425 .534295 0 0 cmyk
ef
.720426 lw
422.92 405.92 mo
422.92 404.769 422.345 403.81 421.641 403.81 cv
420.938 403.81 420.362 404.769 420.362 405.92 cv
420.362 407.135 420.938 408.094 421.641 408.094 cv
422.345 408.094 422.92 407.135 422.92 405.92 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
413.073 400.357 mo
413.073 399.142 412.497 398.183 411.73 398.183 cv
411.027 398.183 410.451 399.142 410.451 400.357 cv
410.451 401.508 411.027 402.467 411.73 402.467 cv
412.497 402.467 413.073 401.508 413.073 400.357 cv
cp
@
436.668 399.462 mo
436.668 403.81 li
427.204 408.478 li
427.204 404.193 li
436.668 399.462 li
.789425 .534295 0 0 cmyk
ef
.239787 lw
436.668 399.462 mo
436.668 403.81 li
427.204 408.478 li
427.204 404.193 li
436.668 399.462 li
cp
.750179 .679652 .670191 .901488 cmyk
@
431.105 405.089 mo
428.483 406.367 li
428.483 405.089 li
431.105 403.81 li
431.105 405.089 li
.789425 .534295 0 0 cmyk
ef
435.837 402.467 mo
433.215 403.81 li
433.215 402.467 li
435.837 401.188 li
435.837 402.467 li
ef
388.455 249.963 mo
378.991 254.694 li
371.254 250.794 li
380.718 246.062 li
388.455 249.963 li
cp
381.613 244.144 mo
372.149 248.875 li
366.97 246.318 li
376.433 241.586 li
381.613 244.144 li
cp
360.128 245.231 mo
369.592 240.499 li
374.323 242.417 li
366.97 246.318 li
365.243 247.788 li
360.128 245.231 li
cp
378.991 258.978 mo
360.128 249.515 li
360.128 245.231 li
378.991 254.694 li
378.991 258.978 li
ef
388.455 249.963 mo
378.991 254.694 li
371.254 250.794 li
380.718 246.062 li
388.455 249.963 li
cp
.750179 .679652 .670191 .901488 cmyk
@
381.613 244.144 mo
372.149 248.875 li
366.97 246.318 li
376.433 241.586 li
381.613 244.144 li
cp
@
360.128 245.231 mo
369.592 240.499 li
374.323 242.417 li
366.97 246.318 li
365.243 247.788 li
360.128 245.231 li
cp
@
378.991 258.978 mo
360.128 249.515 li
360.128 245.231 li
378.991 254.694 li
378.991 258.978 li
cp
@
383.723 247.597 mo
381.613 244.144 li
372.149 248.875 li
374.323 252.328 li
383.723 247.597 li
cp
372.149 248.875 mo
366.97 246.318 li
365.243 247.788 li
374.323 252.328 li
372.149 248.875 li
.789425 .534295 0 0 cmyk
ef
383.723 247.597 mo
381.613 244.144 li
372.149 248.875 li
374.323 252.328 li
383.723 247.597 li
cp
.750179 .679652 .670191 .901488 cmyk
@
372.149 248.875 mo
366.97 246.318 li
365.243 247.788 li
374.323 252.328 li
372.149 248.875 li
cp
@
374.707 256.357 mo
374.707 255.206 374.132 254.247 373.428 254.247 cv
372.725 254.247 372.149 255.206 372.149 256.357 cv
372.149 257.572 372.725 258.531 373.428 258.531 cv
374.132 258.531 374.707 257.572 374.707 256.357 cv
cp
364.86 250.794 mo
364.86 249.643 364.284 248.684 363.581 248.684 cv
362.814 248.684 362.238 249.643 362.238 250.794 cv
362.238 252.009 362.814 252.968 363.581 252.968 cv
364.284 252.968 364.86 252.009 364.86 250.794 cv
.789425 .534295 0 0 cmyk
ef
.720426 lw
374.707 256.357 mo
374.707 255.206 374.132 254.247 373.428 254.247 cv
372.725 254.247 372.149 255.206 372.149 256.357 cv
372.149 257.572 372.725 258.531 373.428 258.531 cv
374.132 258.531 374.707 257.572 374.707 256.357 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
364.86 250.794 mo
364.86 249.643 364.284 248.684 363.581 248.684 cv
362.814 248.684 362.238 249.643 362.238 250.794 cv
362.238 252.009 362.814 252.968 363.581 252.968 cv
364.284 252.968 364.86 252.009 364.86 250.794 cv
cp
@
388.455 249.963 mo
388.455 254.247 li
378.991 258.978 li
378.991 254.694 li
388.455 249.963 li
.789425 .534295 0 0 cmyk
ef
.239787 lw
388.455 249.963 mo
388.455 254.247 li
378.991 258.978 li
378.991 254.694 li
388.455 249.963 li
cp
.750179 .679652 .670191 .901488 cmyk
@
382.892 255.526 mo
380.334 256.804 li
380.334 255.526 li
382.892 254.247 li
382.892 255.526 li
.789425 .534295 0 0 cmyk
ef
387.624 252.968 mo
385.002 254.247 li
385.002 252.968 li
387.624 251.689 li
387.624 252.968 li
ef
499.076 354.126 mo
489.613 358.858 li
481.876 354.957 li
491.339 350.225 li
499.076 354.126 li
cp
492.171 348.307 mo
482.707 353.039 li
477.592 350.481 li
486.991 345.749 li
492.171 348.307 li
cp
470.686 349.394 mo
480.149 344.662 li
484.881 346.581 li
477.592 350.481 li
475.865 351.952 li
470.686 349.394 li
cp
489.613 363.142 mo
470.686 353.678 li
470.686 349.394 li
489.613 358.858 li
489.613 363.142 li
ef
499.076 354.126 mo
489.613 358.858 li
481.876 354.957 li
491.339 350.225 li
499.076 354.126 li
cp
.750179 .679652 .670191 .901488 cmyk
@
492.171 348.307 mo
482.707 353.039 li
477.592 350.481 li
486.991 345.749 li
492.171 348.307 li
cp
@
470.686 349.394 mo
480.149 344.662 li
484.881 346.581 li
477.592 350.481 li
475.865 351.952 li
470.686 349.394 li
cp
@
489.613 363.142 mo
470.686 353.678 li
470.686 349.394 li
489.613 358.858 li
489.613 363.142 li
cp
@
494.345 351.76 mo
492.171 348.307 li
482.707 353.039 li
484.881 356.492 li
494.345 351.76 li
cp
482.707 353.039 mo
477.592 350.481 li
475.865 351.952 li
484.881 356.492 li
482.707 353.039 li
.789425 .534295 0 0 cmyk
ef
494.345 351.76 mo
492.171 348.307 li
482.707 353.039 li
484.881 356.492 li
494.345 351.76 li
cp
.750179 .679652 .670191 .901488 cmyk
@
482.707 353.039 mo
477.592 350.481 li
475.865 351.952 li
484.881 356.492 li
482.707 353.039 li
cp
@
485.329 360.584 mo
485.329 359.369 484.753 358.41 483.986 358.41 cv
483.283 358.41 482.707 359.369 482.707 360.584 cv
482.707 361.735 483.283 362.694 483.986 362.694 cv
484.753 362.694 485.329 361.735 485.329 360.584 cv
cp
475.418 354.957 mo
475.418 353.806 474.842 352.847 474.139 352.847 cv
473.435 352.847 472.86 353.806 472.86 354.957 cv
472.86 356.172 473.435 357.131 474.139 357.131 cv
474.842 357.131 475.418 356.172 475.418 354.957 cv
.789425 .534295 0 0 cmyk
ef
.720426 lw
485.329 360.584 mo
485.329 359.369 484.753 358.41 483.986 358.41 cv
483.283 358.41 482.707 359.369 482.707 360.584 cv
482.707 361.735 483.283 362.694 483.986 362.694 cv
484.753 362.694 485.329 361.735 485.329 360.584 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
475.418 354.957 mo
475.418 353.806 474.842 352.847 474.139 352.847 cv
473.435 352.847 472.86 353.806 472.86 354.957 cv
472.86 356.172 473.435 357.131 474.139 357.131 cv
474.842 357.131 475.418 356.172 475.418 354.957 cv
cp
@
499.076 354.126 mo
499.076 358.41 li
489.613 363.142 li
489.613 358.858 li
499.076 354.126 li
.789425 .534295 0 0 cmyk
ef
.239787 lw
499.076 354.126 mo
499.076 358.41 li
489.613 363.142 li
489.613 358.858 li
499.076 354.126 li
cp
.750179 .679652 .670191 .901488 cmyk
@
493.449 359.689 mo
490.892 360.968 li
490.892 359.689 li
493.449 358.41 li
493.449 359.689 li
.789425 .534295 0 0 cmyk
ef
498.181 357.131 mo
495.624 358.41 li
495.624 357.131 li
498.181 355.852 li
498.181 357.131 li
ef
496.199 358.602 mo
506.622 364.293 li
508.348 360.904 511.418 358.346 515.126 357.195 cv
504.703 352.016 li
500.995 352.783 497.862 355.213 496.199 358.602 cv
cp
507.069 348.243 mo
517.492 353.423 li
523.119 350.609 li
512.76 345.43 li
507.069 348.243 li
cp
527.403 351.057 mo
516.981 345.877 li
515.126 346.581 li
523.119 350.609 li
523.119 353.167 li
527.403 351.057 li
cp
506.622 366.211 mo
527.403 355.788 li
527.403 351.057 li
515.126 357.195 li
511.418 358.346 508.348 360.904 506.622 364.293 cv
506.622 366.211 li
.799008 .00704967 .958679 .000854505 cmyk
ef
496.199 358.602 mo
506.622 364.293 li
508.348 360.904 511.418 358.346 515.126 357.195 cv
504.703 352.016 li
500.995 352.783 497.862 355.213 496.199 358.602 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
507.069 348.243 mo
517.492 353.423 li
523.119 350.609 li
512.76 345.43 li
507.069 348.243 li
cp
@
527.403 351.057 mo
516.981 345.877 li
515.126 346.581 li
523.119 350.609 li
523.119 353.167 li
527.403 351.057 li
cp
@
506.622 366.211 mo
527.403 355.788 li
527.403 351.057 li
515.126 357.195 li
511.418 358.346 508.348 360.904 506.622 364.293 cv
506.622 366.211 li
cp
@
504.703 352.016 mo
507.069 348.243 li
517.492 353.423 li
515.126 357.195 li
504.703 352.016 li
cp
517.492 353.423 mo
523.119 350.609 li
525.997 351.76 li
515.126 357.195 li
517.492 353.423 li
.799008 .00704967 .958679 .000854505 cmyk
ef
504.703 352.016 mo
507.069 348.243 li
517.492 353.423 li
515.126 357.195 li
504.703 352.016 li
cp
.750179 .679652 .670191 .901488 cmyk
@
517.492 353.423 mo
523.119 350.609 li
525.997 351.76 li
515.126 357.195 li
517.492 353.423 li
cp
@
509.947 363.845 mo
509.947 362.503 510.522 361.479 511.354 361.479 cv
512.121 361.479 512.76 362.503 512.76 363.845 cv
512.76 365.124 512.121 366.211 511.354 366.211 cv
510.522 366.211 509.947 365.124 509.947 363.845 cv
cp
520.753 357.707 mo
520.753 356.364 521.393 355.341 522.224 355.341 cv
522.991 355.341 523.631 356.364 523.631 357.707 cv
523.631 358.986 522.991 360.073 522.224 360.073 cv
521.393 360.073 520.753 358.986 520.753 357.707 cv
.799008 .00704967 .958679 .000854505 cmyk
ef
.720426 lw
509.947 363.845 mo
509.947 362.503 510.522 361.479 511.354 361.479 cv
512.121 361.479 512.76 362.503 512.76 363.845 cv
512.76 365.124 512.121 366.211 511.354 366.211 cv
510.522 366.211 509.947 365.124 509.947 363.845 cv
cp
.750179 .679652 .670191 .901488 cmyk
@
520.753 357.707 mo
520.753 356.364 521.393 355.341 522.224 355.341 cv
522.991 355.341 523.631 356.364 523.631 357.707 cv
523.631 358.986 522.991 360.073 522.224 360.073 cv
521.393 360.073 520.753 358.986 520.753 357.707 cv
cp
@
496.199 358.602 mo
496.199 360.968 li
506.622 366.211 li
506.622 364.293 li
496.199 358.602 li
.799008 .00704967 .958679 .000854505 cmyk
ef
.239787 lw
496.199 358.602 mo
496.199 360.968 li
506.622 366.211 li
506.622 364.293 li
496.199 358.602 li
cp
.750179 .679652 .670191 .901488 cmyk
@
303.41 427.597 mo
315.56 427.597 325.407 417.813 325.407 405.664 cv
325.407 393.515 315.56 383.668 303.41 383.668 cv
291.261 383.668 281.414 393.515 281.414 405.664 cv
281.414 417.813 291.261 427.597 303.41 427.597 cv
cp
315.751 396.456 mo
320.803 403.234 319.396 412.89 312.618 417.941 cv
309.933 419.987 306.735 421.01 303.41 421.01 cv
300.085 421.01 296.888 419.987 294.203 417.941 cv
315.751 396.456 li
cp
291.069 414.872 mo
286.018 408.03 287.425 398.439 294.203 393.323 cv
296.888 391.341 300.085 390.254 303.41 390.254 cv
306.735 390.254 309.933 391.341 312.618 393.323 cv
291.069 414.872 li
0 .990631 1 .000396735 cmyk
ef
249.059 211.405 mo
246.885 211.405 li
245.414 207.568 li
240.362 207.568 li
238.956 211.405 li
236.909 211.405 li
241.833 198.424 li
243.879 198.424 li
cp
244.838 205.842 mo
243.815 203.22 243.24 201.749 243.112 201.43 cv
242.984 201.046 242.856 200.598 242.664 200.087 cv
242.92 200.087 li
242.792 200.854 242.6 201.558 242.281 202.325 cv
240.938 205.842 li
.750179 .679652 .670191 .901488 cmyk
f
258.203 211.405 mo
249.506 211.405 li
249.506 210.51 249.762 209.742 250.274 208.975 cv
250.785 208.208 251.68 207.376 253.023 206.481 cv
253.918 205.586 254.622 204.819 255.261 204.115 cv
255.901 203.412 256.22 202.708 256.22 202.005 cv
256.22 201.43 256.028 200.918 255.581 200.534 cv
255.197 200.151 254.686 199.959 254.046 199.959 cv
253.407 199.959 252.831 200.151 252.384 200.534 cv
252 200.982 251.744 201.621 251.744 202.517 cv
249.762 202.325 li
249.89 200.982 250.338 199.959 251.105 199.32 cv
251.872 198.68 252.895 198.36 254.046 198.36 cv
255.325 198.36 256.348 198.68 257.116 199.447 cv
257.819 200.151 258.203 201.046 258.203 202.005 cv
258.203 202.9 257.883 203.732 257.307 204.563 cv
256.668 205.458 255.517 206.545 253.727 207.952 cv
252.831 208.655 252.256 209.231 252 209.55 cv
258.203 209.55 li
f
2.16021 lw
[2.16021 4.32149 ] 0 dsh
567.112 27.8239 mo
388.455 27.8239 li
469.599 27.8239 li
.874174 .544579 0 .00030518 cmyk
@
468.448 23.1561 mo
477.783 27.8239 li
468.448 32.5557 li
468.448 23.1561 li
ef
gsave
588.981 25.0104 mo
580.092 29.4865 li
572.739 25.7778 li
581.691 21.3657 li
588.981 25.0104 li
cp
582.522 19.5113 mo
573.57 23.9874 li
568.711 21.5575 li
577.663 17.0815 li
582.522 19.5113 li
cp
562.188 20.5344 mo
571.14 16.0584 li
575.616 17.9128 li
568.711 21.5575 li
567.048 22.9642 li
562.188 20.5344 li
cp
580.092 33.5149 mo
562.188 24.5628 li
562.188 20.5344 li
580.092 29.4865 li
580.092 33.5149 li
eclp
561.357 37.2236 mo
591.538 37.2236 li
591.538 15.2271 li
561.357 15.2271 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[30.1812 0 0 21.9964 561.357 401.902 ]ct
<<
/T 1
/W 119 
/H 87 
/M[119 0 0 -87 0 87 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
eGfO=oFV*GqXgcgYOqHd!FP]qWWB<noFV*GqYR;hWWB<roL/dVqXgcgYOV5s!?_11WWB<qoMbiuqXgcg
YOV5s!?_11WXuB,6q'L46q'L46q'L46r3[OWWB<noFV*GqXgcgYOqHd!FP]qWWB<noFV*GqXgcgYP%f^
q*b<[qXgcgYOV5s!?_11WWB<qoMbiuqXgcgYOV5s!?_11WXZ0)6q'L46q'L46q'L4!^oi\oVqqqnamCo
+8YW0!O).f;upA&oVqqqnamCo+8YW0!O)1g70-3\rMoXm!O)%c&HO!MoVqqqo^l)`?i'Dp!O)%c&HO!M
oVrJ+ogD5:779R4779R4779rJp8S4pWitsb&HO!MoVqqqo^l)`?i'Dp!O)%c&HO!MoVqqqp%1ZR:\s^`
!O)%m&bck<+8YW0!O).f;upA&oVqqqnamCo+8YW0&?kap779R4779R4779R4:\s^`!O)%f&Hi[fs8Vrh
WWTI)s7H"a"(2*.qY$okYQ+Xmp(7BKs8VrhWWTI)s7Q(S"&JssqY$okYQ+Xmp(7HMs8VqqWq`RrYQ+Xp
p/D-$s8VrhWWTI)s7,dp"!@RCqY$p%YQ+Xq6q'L46q'L46q'L>s8VrhWW96bs5*d+~>

%%EndBinary
grestore
np
f
586.679 32.3639 mo
590.771 32.3639 li
590.771 36.4563 li
586.679 36.4563 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 586.679 406.762 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiB#dWi?XCWiAKVWi?XCWiB#tWi?XCWiAKVWi?XC~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
.239787 lw
0 lc
[.239787 .960213 ] 0 dsh
588.981 25.0104 mo
580.092 29.4865 li
572.739 25.7777 li
581.691 21.3657 li
588.981 25.0104 li
cp
.750179 .679652 .670191 .901488 cmyk
@
582.522 19.5113 mo
573.57 23.9873 li
568.711 21.5575 li
577.663 17.0815 li
582.522 19.5113 li
cp
@
562.188 20.5344 mo
571.14 16.0583 li
575.616 17.9127 li
568.711 21.5575 li
567.048 22.9642 li
562.188 20.5344 li
cp
@
580.093 33.5149 mo
562.188 24.5628 li
562.188 20.5344 li
580.093 29.4865 li
580.093 33.5149 li
cp
@
gsave
584.505 22.7724 mo
582.522 19.5113 li
573.57 23.9874 li
575.616 27.2484 li
584.505 22.7724 li
cp
573.57 23.9874 mo
568.711 21.5575 li
567.048 22.9642 li
575.616 27.2484 li
573.57 23.9874 li
eclp
566.984 19.4474 mo
571.076 19.4474 li
571.076 23.5397 li
566.984 23.5397 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 566.984 419.678 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5uR<E14e<E4p6<E14e<E5ur<E14e<E4p6<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
571.076 19.4474 mo
575.169 19.4474 li
575.169 23.5397 li
571.076 23.5397 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 571.076 419.678 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5uR<E14e<E4p6<E14e<E5ur<E14e<E4p6<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
575.169 19.4474 mo
579.261 19.4474 li
579.261 23.5397 li
575.169 23.5397 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 575.169 419.678 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5uR<E14e<E4p6<E14e<E5ur<E14e<E4p6<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
579.261 19.4474 mo
583.353 19.4474 li
583.353 23.5397 li
579.261 23.5397 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 579.261 419.678 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5uR<E14e<E4p6<E14e<E5ur<E14e<E4p6<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
583.354 19.4474 mo
587.446 19.4474 li
587.446 23.5397 li
583.354 23.5397 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 583.354 419.678 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5uR<E14e<E4p6<E14e<E5ur<E14e<E4p6<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
566.984 23.5397 mo
571.076 23.5397 li
571.076 27.6321 li
566.984 27.6321 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 566.984 415.586 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5uR<E14e<E4p6<E14e<E5ur<E14e<E4p6<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
571.076 23.5397 mo
575.169 23.5397 li
575.169 27.6321 li
571.076 27.6321 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 571.076 415.586 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5uR<E14e<E4p6<E14e<E5ur<E14e<E4p6<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
575.169 23.5397 mo
579.261 23.5397 li
579.261 27.6321 li
575.169 27.6321 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 575.169 415.586 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5uR<E14e<E4p6<E14e<E5ur<E14e<E4p6<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
579.261 23.5397 mo
583.353 23.5397 li
583.353 27.6321 li
579.261 27.6321 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 579.261 415.586 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5uR<E14e<E4p6<E14e<E5ur<E14e<E4p6<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
583.354 23.5397 mo
587.446 23.5397 li
587.446 27.6321 li
583.354 27.6321 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 583.354 415.586 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5uR<E14e<E4p6<E14e<E5ur<E14e<E4p6<E14e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
584.505 22.7724 mo
582.522 19.5113 li
573.57 23.9873 li
575.616 27.2484 li
584.505 22.7724 li
cp
@
573.57 23.9873 mo
568.711 21.5575 li
567.048 22.9643 li
575.616 27.2484 li
573.57 23.9873 li
cp
@
gsave
576 31.085 mo
576 29.9341 575.489 29.0388 574.785 29.0388 cv
574.146 29.0388 573.57 29.9341 573.57 31.085 cv
573.57 32.1721 574.146 33.1312 574.785 33.1312 cv
575.489 33.1312 576 32.1721 576 31.085 cv
cp
566.664 25.7778 mo
566.664 24.6907 566.153 23.7955 565.449 23.7955 cv
564.81 23.7955 564.235 24.6907 564.235 25.7778 cv
564.235 26.9287 564.81 27.8239 565.449 27.8239 cv
566.153 27.8239 566.664 26.9287 566.664 25.7778 cv
eclp
564.171 23.7316 mo
568.263 23.7316 li
568.263 27.8239 li
564.171 27.8239 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 564.171 415.394 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAo.WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
568.263 23.7316 mo
572.355 23.7316 li
572.355 27.8239 li
568.263 27.8239 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 568.263 415.394 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAo.WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
572.355 23.7316 mo
576.448 23.7316 li
576.448 27.8239 li
572.355 27.8239 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 572.355 415.394 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAo.WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
564.171 27.8239 mo
568.263 27.8239 li
568.263 31.9163 li
564.171 31.9163 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 564.171 411.302 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAo.WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
568.263 27.8239 mo
572.355 27.8239 li
572.355 31.9163 li
568.263 31.9163 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 568.263 411.302 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAo.WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
572.355 27.8239 mo
576.448 27.8239 li
576.448 31.9163 li
572.355 31.9163 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 572.355 411.302 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAo.WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
564.171 31.9163 mo
568.263 31.9163 li
568.263 36.0086 li
564.171 36.0086 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 564.171 407.209 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAo.WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
568.263 31.9163 mo
572.355 31.9163 li
572.355 36.0086 li
568.263 36.0086 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 568.263 407.209 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAo.WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
572.355 31.9163 mo
576.448 31.9163 li
576.448 36.0086 li
572.355 36.0086 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 572.355 407.209 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~WiAo.WiAHTWi?dKWiAHTWiAonWiAHTWi?dKWiAHT~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
575.616 30.8292 mo
575.936 30.3816 li
576.32 30.7653 li
576 31.149 li
575.616 30.8292 li
cp
574.146 30.0619 mo
573.634 30.1898 li
573.506 29.6783 li
574.018 29.5504 li
574.146 30.0619 li
cp
574.721 32.7475 mo
574.849 33.2591 li
574.401 33.387 li
574.21 32.9394 li
574.721 32.7475 li
cp
566.281 25.5219 mo
566.6 25.1383 li
566.984 25.458 li
566.664 25.8417 li
566.281 25.5219 li
cp
564.81 24.7546 mo
564.298 24.8825 li
564.171 24.371 li
564.682 24.2431 li
564.81 24.7546 li
cp
565.385 27.5042 mo
565.513 27.9518 li
565.066 28.0797 li
565.002 28.0797 li
564.874 27.6321 li
565.385 27.5042 li
f
gsave
588.981 25.0104 mo
588.981 29.0388 li
580.092 33.5149 li
580.092 29.4865 li
588.981 25.0104 li
eclp
580.029 24.9465 mo
584.121 24.9465 li
584.121 29.0388 li
580.029 29.0388 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 580.029 414.179 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5b;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
584.121 24.9465 mo
588.213 24.9465 li
588.213 29.0388 li
584.121 29.0388 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 584.121 414.179 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5b;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
588.213 24.9465 mo
592.306 24.9465 li
592.306 29.0388 li
588.213 29.0388 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 588.213 414.179 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5b;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
580.029 29.0388 mo
584.121 29.0388 li
584.121 33.1312 li
580.029 33.1312 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 580.029 410.087 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5b;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
584.121 29.0388 mo
588.213 29.0388 li
588.213 33.1312 li
584.121 33.1312 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 584.121 410.087 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5b;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
588.213 29.0388 mo
592.306 29.0388 li
592.306 33.1312 li
588.213 33.1312 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 588.213 410.087 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5b;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
580.029 33.1312 mo
584.121 33.1312 li
584.121 37.2236 li
580.029 37.2236 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 580.029 405.994 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5b;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
584.121 33.1312 mo
588.213 33.1312 li
588.213 37.2236 li
584.121 37.2236 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 584.121 405.994 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5b;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
588.213 33.1312 mo
592.306 33.1312 li
592.306 37.2236 li
588.213 37.2236 li
cp
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 588.213 405.994 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~<E5b;<E4j2<E1Lu<E4j2<E5cf<E4j2<E1Lu<E4j2~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
588.981 25.0104 mo
588.981 29.0388 li
580.092 33.5149 li
580.092 29.4865 li
588.981 25.0104 li
cp
@
gsave
583.737 30.2538 mo
581.307 31.4687 li
581.307 30.2538 li
583.737 29.0388 li
583.737 30.2538 li
eclp
581.243 28.9749 mo
585.336 28.9749 li
585.336 33.0673 li
581.243 33.0673 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 581.243 410.151 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~6q+,U&J;%C<)flt&J;%C77F5V&J;%C<)flt&J;%C~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
584.057 29.7422 mo
583.737 30.1259 li
583.354 29.7422 li
583.737 29.4225 li
584.057 29.7422 li
cp
580.924 31.085 mo
581.307 30.7653 li
581.627 31.085 li
581.307 31.4687 li
580.924 31.085 li
f
gsave
588.213 27.8239 mo
585.719 29.0388 li
585.719 27.8239 li
588.213 26.609 li
588.213 27.8239 li
eclp
585.719 26.5451 mo
589.812 26.5451 li
589.812 30.6375 li
585.719 30.6375 li
cp
.789425 .534295 0 0 cmyk
gsave
clp
[1 0 0 -1 0 439.126 ]ct
[4.09235 0 0 -4.09235 585.719 412.58 ]ct
<<
/T 1
/W 16 
/H 16 
/M[16 0 0 -16 0 16 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~Ll,24+sL#eW2N]r+sL#eMMbD6+sL#eW2N]r+sL#e~>
/O 1
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
f
grestore
588.533 27.3123 mo
588.213 27.696 li
587.83 27.3123 li
588.213 26.9926 li
588.533 27.3123 li
cp
585.4 28.6552 mo
585.719 28.3354 li
586.103 28.6552 li
585.719 29.0388 li
585.4 28.6552 li
f
572.739 47.0069 mo
584.888 47.0069 594.735 37.1596 594.735 25.0104 cv
594.735 12.8612 584.888 3.01398 572.739 3.01398 cv
560.654 3.01398 550.806 12.8612 550.806 25.0104 cv
550.806 37.1596 560.654 47.0069 572.739 47.0069 cv
cp
585.08 15.8026 mo
590.195 22.5806 588.789 32.236 581.947 37.3515 cv
579.325 39.3337 576.064 40.4207 572.739 40.4207 cv
569.414 40.4207 566.217 39.3337 563.531 37.3515 cv
585.08 15.8026 li
cp
560.462 34.2182 mo
555.346 27.4403 556.753 17.7849 563.531 12.6694 cv
566.217 10.6872 569.414 9.60013 572.739 9.60013 cv
576.064 9.60013 579.325 10.6872 581.947 12.6694 cv
560.462 34.2182 li
0 .990631 1 .000396735 cmyk
ef
547.929 51.8026 mo
548.632 51.9944 549.272 52.3781 549.656 52.9536 cv
550.103 53.5291 550.295 54.1685 550.295 54.9359 cv
550.295 55.6392 550.103 56.3426 549.719 56.982 cv
549.336 57.5575 548.824 58.0051 548.121 58.3248 cv
547.417 58.6446 546.522 58.7724 545.371 58.7724 cv
540.384 58.7724 li
540.384 45.792 li
545.307 45.792 li
546.906 45.792 547.993 46.1117 548.696 46.8151 cv
549.336 47.5184 549.656 48.3497 549.656 49.181 cv
549.656 49.7564 549.528 50.268 549.208 50.7795 cv
548.888 51.2911 548.441 51.6108 547.929 51.8026 cv
cp
542.43 51.0992 mo
544.988 51.0992 li
545.499 51.0992 545.947 51.0353 546.33 50.9714 cv
546.714 50.9074 547.034 50.7795 547.29 50.5238 cv
547.545 50.268 547.673 49.8843 547.673 49.3728 cv
547.673 48.8612 547.545 48.4776 547.29 48.2218 cv
546.97 47.966 546.65 47.7742 546.267 47.7103 cv
545.883 47.6463 545.371 47.6463 544.732 47.6463 cv
542.43 47.6463 li
cp
542.43 56.9181 mo
545.371 56.9181 li
546.458 56.9181 547.162 56.7263 547.609 56.4065 cv
547.993 56.0229 548.185 55.5113 548.185 54.9359 cv
548.185 54.2964 547.993 53.7849 547.545 53.4651 cv
547.098 53.0815 546.33 52.8896 545.18 52.8896 cv
542.43 52.8896 li
.750179 .679652 .670191 .901488 cmyk
f
554.259 50.8434 mo
554.835 50.268 555.602 50.0122 556.433 50.0122 cv
557.521 50.0122 558.48 50.3958 559.311 51.1632 cv
560.142 51.9944 560.526 53.0175 560.526 54.2964 cv
560.526 55.5753 560.142 56.7262 559.311 57.6214 cv
558.48 58.5166 557.393 58.9642 556.05 58.9642 cv
554.963 58.9642 554.004 58.6445 553.236 58.069 cv
552.405 57.4296 551.957 56.4705 551.83 55.1277 cv
553.748 54.9998 li
553.94 55.831 554.195 56.4705 554.579 56.7902 cv
554.963 57.1738 555.474 57.3657 556.05 57.3657 cv
556.817 57.3657 557.393 57.046 557.84 56.5344 cv
558.288 55.9589 558.544 55.2556 558.544 54.4243 cv
558.544 53.593 558.288 52.9536 557.84 52.442 cv
557.393 51.9944 556.753 51.7387 556.05 51.7387 cv
555.091 51.7387 554.387 52.1863 553.812 52.9536 cv
552.085 52.7617 li
553.364 45.9198 li
559.95 45.9198 li
559.95 47.7742 li
554.899 47.7742 li
f
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
