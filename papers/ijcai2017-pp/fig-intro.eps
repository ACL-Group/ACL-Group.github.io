%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 230.000000 106.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.4 (Build 16E195) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 228 105
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 228 105
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: TimesNewRomanPSMT
%!FontType1-1.0: TimesNewRomanPSMT 1.0000.5.0100
14 dict begin/FontName /TimesNewRomanPSMT def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /M put
dup 34 /a put
dup 35 /l put
dup 36 /e put
dup 37 /p put
dup 38 /r put
dup 39 /n put
dup 40 /t put
dup 41 /s put
dup 42 /g put
dup 43 /d put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1164 1 index div -628 2 index div 4096 3 index div 2062 5 -1 roll div]cvx def
/sfnts [<


01160125011800EA00EA00AE0000003E05BB008A04D70053003FFF8CFFD500150028002200990062004A00E4006D00EE00E5004803C00033FE4E02B1FF460370007905DF0051FFA7FF1F010A0068FF6C004F00BC00A5070500AB0080001E05A50025008B04660230006900290016012F0080005C059F000040425554403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A1918171614131211100F0E0D0C0B0A090807060504030201002C4523466020B02660B004262348482D2C452346236120B02661B004262348482D2C45234660B0206120B04660B004262348482D2C4523462361B0206020B02661B02061B004262348482D2C45234660B0406120B06660B004262348482D2C4523462361B0406020B02661B04061B004262348482D2C0110203C003C2D2C20452320B0CD442320B8015A51582320B08D44235920B0ED51582320B04D44235920B09051582320B00D44235921212D2C20204518684420B001602045B04676688A4560442D2C01B10B0A432343650A2D2C00B10A0B4323430B2D2C00B0172370B101173E01B0172370B10217453AB10200080D2D2C45B01A234445B01923442D2C2045B00325456164B050515845441B2121592D2CB00143632362B0002342B00F2B2D2C2045B0004360442D2C01B00643B00743650A2D2C2069B04061B0008B20B12CC08A8CB8100062602B0C642364615C58B00361592D2C45B0112BB0172344B0177AE4182D2C45B0112BB01723442D2CB01243588745B0112BB0172344B0177AE41B038A45186920B01723448A8A8720B0A05158B0112BB0172344B0177AE41B21B0177AE45959182D2CB0022546608A46B040618C482D2C4B53205C58B002855958B00185592D2C20B0032545B019234445B01A23444565234520B00325606A20B009234223688A6A606120B01A8AB000527921B21A1A40B9FFE0001A45208A54582321B03F1B235961441CB114008A5279B31940201945208A54582321B03F1B235961442D2CB110114323430B2D2CB10E0F4323430B2D2CB10C0D4323430B2D2CB10C0D432343650B2D2CB10E0F432343650B2D2CB11011432343650B2D2C4B525845441B2121592D2C0120B003252349B04060B0206320B000525823B002253823B002256538008A63381B212121212159012D2C4BB06451584569B00943608A103A1B212110592D2C01B005251023208AF500B0016023EDEC2D2C01B005251023208AF500B0016123EDEC2D2C01B0062510F500EDEC2D2C20B001600110203C003C2D2C20B001610110203C003C2D2CB02B2BB02A2A2D2C00B00743B006430B2D2C3EB02A2A2D2C352D2C76B802B023701020B802B04520B0005058B00161593A2F182D2C21210C6423648BB84000622D2C21B08051580C6423648BB82000621B
B200402F2B59B002602D2C21B0C051580C6423648BB81555621BB200802F2B59B002602D2C0C6423648BB84000626023212D2CB4000100000015B00826B00826B00826B008260F10161345683AB001162D2CB4000100000015B00826B00826B00826B008260F1016134568653AB001162D2C4B53234B515A5820458A60441B2121592D2C4B545820458A60441B2121592D2C4B53234B515A58381B2121592D2C4B5458381B2121592D2C014B53234B515AB00225B00425B006254923451869525A58B00225B00225B00525462345696048592121212D2CB0134358031B02592D2CB0134358021B03592D2C4B54B012435C5A58381B2121592D2CB012435C580CB00425B00425060C6423646164B807085158B00425B00425012046B01060482046B0106048590A21211B2121592D2CB012435C580CB00425B00425060C6423646164B807085158B00425B00425012046B8FFF060482046B8FFF06048590A21211B2121592D2C4B53234B515A58B03A2B1B2121592D2C4B53234B515A58B03B2B1B2121592D2C4B53234B515AB012435C5A58381B2121592D2C0C8A034B54B00426024B545A8A8A0AB012435C5A58381B2121592D2C462346608A8A462320468A608A61B8FF8062232010238AB9035803588A70456020B0005058B00161B8FFBA8B1BB0468C59B0106068013A2D2CB1020042B123018851B1400188535A58B910000020885458B202010243604259592D2CB0024354584B53234B515A58381B2121591B21212121592D0000000002011C0000051C050000030007004DB10201BB02BE0006000702BFB2000504B802BEB403000A0704B802BEB5010019080605BF02BE0002000301290009016B015E00182B10F63CFD3C4E10F43C4DFD3C003F3CFD3C10FC3CFD3C31302111211125211121011C0400FC2003C0FC400500FB002004C000010022000006F2054C003001C940E80F18010E0008170E190D280F290F2A043007123D013D2F59186F0168186D2F791897019A2FCB18DA18E801EB180D0D18010A1706304630033618363047180316302718263003061805301717032B00291826303B003A173918351935303F324F3268007A007618791974308A008918853099009730A900A630A032B032CC17C918C032DC17D918D032ED17EA18EA19E032F600FA17F7302548014917462F5A015917562F6A177819C618C530D618D630E518E5300E0F1F1B092122201F1B1A21222E1F1B282122021F1B082123101F1B162123211F1B272123171818220001140018190001191818B802C9403E302F14301817302F182F012F180316171A1919170209080800003030272808305B000002192F2E22202021A021B021C021D021E02106219E403201320102B802C9400D100F200F1102550F9E3161DC182B4E10F42B3C4DFD3C4D105DF65D3C4DFD











00000100140610000001000604000001000410000001001002000001000200000001000002010802004A00B013034B024B534201B0124B004B5442B0372B4BB807FF52B0382B4BB008505B58B101018E59B0382BB00288B801005458B801FFB101018E851BB0124358B90001012F858D1BB90001017C858D5959014BB0C063004B6220B0F65323B8010A515AB0052342180016763F183F123E113946443E113946443E113946443E113946443E11394660443E11394660442B2B2B2B2B2B2B2B2B2B2B182B2B2B2B2B2B2B2B2B2B2B2B2B181DB0964B5358B0AA1D59B0324B5358B0FF1D594BB04753205C58B90271026F4544B90270026F45445958B9017A0271455258B90271017A4459594BB04753205C58B9002202704544B9003C027045445958B901B30022455258B9002201B34459594BB04C53205C58B9014900224544B1222245445958B901C20149455258B9014901C24459594BB06753205C58B9002402714544B90050027145445958B9021E0024455258B90024021E4459594BB8020153205C58B9010F00224544B1222245445958B90C00010F455258B9010F0C004459594BB01C53205C58B125254544B12C2545445958B13725455258B125374459594BB0AB53205C58B125254544B1232545445958B901590025455258B9002501594459594BB8010153205C58B125254544B1282545445958B902080025455258B9002502084459592B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B65422B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B01B361DC6463456523456023456560234560B08B766818B080622020B164DC4565234520B003266062636820B003266165B0DC236544B064234420B161634565234520B003266062636820B003266165B063236544B0612344B10063455458B163406544B26140614523614459B3A67F434B456523456023456560234560B089766818B080622020B1437F4565234520B003266062636820B003266165B07F236544B043234420B1A64B4565234520B003266062636820B003266165B04B236544B0A62344B1004B455458B14B406544B2A640A645236144594B5242014B5058B108004259435C58B108004259B3020B0A124358601B2159421610703EB0124358B93B21187E1BBA040001A8000B2B59B00C2342B00D2342B0124358B92D412D411BBA04000400000B2B59B00E2342B00F2342B0124358B9187E3B211BBA01A80400000B2B59B0102342B0112342002B0018456944456944456944456944737373747373737475752B7373747475184569447373742B4BB021534B

00>] def
/CharStrings 12 dict dup begin
/.notdef 0 def
/M 1 def
/a 2 def
/d 3 def
/e 4 def
/g 5 def
/l 6 def
/n 7 def
/p 8 def
/r 9 def
/s 10 def
/t 11 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1164 -628 4096 2062}def
/UniqueID 4291674 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B64DFC330C1264D9E86DB21FFDE360EA73793134E310C3576495659FA930C228F2795196FF0452DD60B347A7F8F4024CD202C335BDBDBFED386229F881364708C0D32059F58BE479883E9DB0CD7607F720A7758ABAC8C3E6FB743E3F8148F9B815F1EC1B3FE63DF0619D5E767296240B22AE182392C5202E7B089F166C4E5906D0C6731578B4DFD638C274FD08F2557A367146C9F4B8914F7875543354F16EF997FD03E196C7411A6A85DE29086A697A5A532E300870491D2C5A23A6D37A607C516C1ABDAFA74F7E038A2F76DA37A7F879CD5BF1BE7A3342CAAF66F2D08199574911F4C5F0FDE66571B58AD77653405CB682B755909FCCBC9048D30E17CC6A893A46A01177529E7CFF672E74FD170A52060338D1477EB7174D08B4CFA9EF68EFF8EADC91D4F8DF6E6D669665B24AA8C2CB119BBA89BE08C900388BFE8601E92AF8A1C9700095D09ED74EDFCAD9E649A4E126D758BF6A74F9F132FE5BA95B66487600666CE9A75FC938EADD95179CA3D081D7221DD69E74F026488B22E354BABDB2047F518DB5B9B2E46BA6F410EE5B059356BE6EF9B88E28BE64821297F3DEA78F22231C0B94CE407889F322989370B9D60AE1FCA624B5FFD238FABFC9A0B54495C088F6149B7154886D73FFEEFDC88B13DB70D71CB74C25966E114118346DBE5526278D8CF225DE9903AF14D0A9CCC9AB1C47577EF602505036DAFB8380423AD84B356F92A73D64C762C5AC16453517BCFE500A885BF690C781C296DFEAB5E5
121023F9052026CD96D67128C7E9FD419A78E10138C9A55663F1B08CDA4FACAED5924309523DFD97A6913C0FB0E6E1CF39314BBBB9639FC7C8725BD624650D43880032038D1C4875EC6A2184C07583BA9D8826AE789B96167088B027B1961EE5BCF2248F749008230B35B35556BCBE3F6DF99905FAAB6F226A9E8D56DFD845C903673D3C6F3CAE3D95B954F5515A3EAE7A9BBEA8EE5D0C909C521D46534B752D7027C8F42C61A3D6FD1A8DC574A2B1B40FE48E1D34EFA6BB8071BBA96830FF1D69FCF67A0931DE4E709AF501B79C934C9779BEF024F5B964B94602F7F682805B1F78CD6C0DAFF1EF6E2D7375B80C51EDF3AFE86BFB9F4DDF624AD667F32E3B5F880CEF57D38BF7A4DA91504BE45685898E439D38EAB399B170C443F5D4127E48AF20E7DBA64F80513F24632E206FEFDC94FE280C9ED1BBD7FF9F45ED33948B4BB7C2A23F812D806818689FE9D3D5592F5F9BE6AADFB9B841417C74446FBFA572DCB945EE9FD328B4F0F16676D58936D049EC53FEF7AB14001289A16614E6565BEE835DED58537914DBE452C41BE1EA9DF7C76E5606DE092CEEA9BABFC159478A8A36428D484E2C6B40C303AB903A85BCE5B1321343F6028644EB747B853612708C7463D9EC8D1EC41C2274F177833877AA0C09111B61EFBEE5CC9A336B3B134957681E76285F70DAD13F7C79337B7806070112A295F676347ED584270EF26181892D1AB13BFAC4616F74DFF983CF29444E229867546CC6FFA0087C6DF130A076E626182BED49B58BD69A14BA6C9F6F1649D7202F984C23ED9BE016395DA725A113DBCDD9316FDB5A921C8A2CA62CBC04573E8DF8C79B13DA889F7DB3C0C011C51722101CBC9C7C9AC92028BE417A1EFE210DC48D27F3941D4FC245E3D6167ABA599B505FB2D51415B2A84701DDE557D35D43FA40D325BF35FCADC6ED9A45980B0E3174FD5206B3751E626A8ABDC5058D259D4FD6E019BCA77ECB1625EF18C4A02B47FB8EB44339F7997E9ADE1F6959AF2C9DCB1FEA0406AA305233F2B2D4A0EB48CBBE7E20A2E42FF8ECF6BE35EE3ACC0B83256A748C4F5F4C3661A6DF27A1D597397098117BE775CE2FBB097C25E13EDD4CC25573B8E50D14AC9356FA0F98734D9CECBA33B42FB1D9AB10D5B948736740A82E7E12FB941CB85058200C18C726AB783802A849A90994D34B2D1B59D478E6FB748C88B1AAF15409A4A23335CBE59C767C3B9C62692F8556838FE073941BE69D1D82F0DDEB745E545C609AFBAAF45026EF1E2B3953C907EB2D0040A025A00EA4178817CF3011F97876E8B42C48DCCC69B0765642DC52E95F66D376C71E200FA702A40564505B3081DB482BAA33F360367F3DF0BF0BCB5B18B5ABFE7F9E2F62172DB53C7662FBAEFFBE2410E1B113AD31F7903B697D8A7E924C914E0F706E8E731730B7EAE4C6CA29988D3494ADC4
FB679C24A7C7C0DCD9481BE0520FCD38E2CCA2D0976320C2CD0955CA39CE286D43E779A9109BF4D4C55497F6307573E5BE77E5F1FFB185764D4CED3587EB1B27588F1E56DF9383B646AC494AB0FF046599CC0678C6592D9FDAAE6B30EB24782ED13174838E5793C7784A34CCBF6312EEDFA7A556517C1710D0BC36244CBED55B119F8CD9B4CBDE76761DD1D6846B644955E8B395BCAEAA1FEDF7A93786DD0EE8FAAEF850DA4F423079988131C47DDEC053C7A9C9A70B6B9E49D998BBC4BB4A847704066D79E088F9BEF614D4EB5811275C57DCAF70C9C2DFADB306F868EDE5174DC449D206BA947E864129C77A2470A600ADE331040045E2D083783D7EC5B0DC84391662A7CD7BC34222839CD20B944A4676E1068356567A4CBE848C2A83DEEE08CD5A89D26902ECF2BCF1412CFC0AA13A5ED24ACE15383DE507C9A9576CFA9556EF691D5A076B2DCF9182E5706864DA79CEAC6A8DFBF3F561182E8462A51128B5A351383230BFEEE2FA9D0D0C6466E182D5F2396ADC085814C4BBE9E95B40AB779548266397776736C05EF4DF73E7273122622806749CEB0868896E518830B746DDDFFAF9DFBE0000B597348C072BFB43EA86AD5244A6004EA627602D317DCD9A11D9C64C7D13A2AAA4F7F931D8F768F28F0F8CF812E0A2A185654CE6889897C41372A6D466078B02F675501715256AB3A9F80EA01E41D5EBF18600D6251184E8D584C70558DE0B1A0D4C577DC02E0C09ECF8578E62C223B3C0E04EDC4E5A3F6E20435A1DAA6F864E62F14A58F18F251784C1275E67F0DB364706A93D7F441C795CAAF78D1B086450A7543EF49AC7BD32350B000E717E404FD47776AF1A25B4C224133BD611C5DC5DED1C7EA5B1A1FFBB3693A092F25D6FFD37CC71C9FAAF6ACDF1A8AFE049004EE0A6050C21344CBC908028DCB796D6884434E9F0CA95301FD44E1C3E89E15E3A24232CA2D18A98B34EFE8F53145F6D9EC063B90AA9173D5DF4A53F0B99FB162BBC75F0205EB4A8476E54950F86F359BB930E0799F21BE320542539E97182429420737B1C59ADF1BFC20740BC80FBCAECA471FDE8EFF941776938750E96B2ED2BC9D9ABF553DB531109D5CB83E0A5C0D08BA25C210A8A129AAE5C47A29F9C99AFBABD988B48C4E84246FBBAB2FEA9CBCCA85A04A3EB7BDFB852CDA35E07792C6B8F2F09C79A87F38BE9E25CD0C1B813C3CECD843EEB8433A9759CC3AFE0C8CB37EFCBC14B53AC1858C356A919F20FC7DE3A5D7389523A70449DA6A21339F51102896C8DDFAE228BF26444574C8F8820C3D1A4EF833A2A24A99DD66583654187E12CE254C91E432620789EA03C6ABB640B07274C5793F1FE5E44D17115F9AA0439DF41B73D165EF6F6271C1718A922AFE86C10D972547401103A9C022D4AC674B974CD65BF9BE0A523E848BAADEA054AE27B681690010D73C9
A7D647E29E536E7B95AA1FDF37C1B313392FA77BE0C2A0C944632D439CB96A36EB15C007DE11CBF3276E188B1F55758720844D17753BB71C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/TimesNewRomanPSMT cguidfix
/F1.1/TimesNewRomanPSMT renmfont
%RBIBeginFontSubset: CambriaMath
%!FontType1-1.0: CambriaMath 1.0000.6.9000
14 dict begin/FontName /CambriaMath def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /gid7 put
dup 34 /gid5 put
dup 35 /gid6 put
dup 36 /gid2 put
dup 37 /gid3 put
dup 38 /gid1 put
dup 39 /gid8 put
dup 40 /gid4 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -3020 1 index div -5046 2 index div 5873 3 index div 6383 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-3020 -5046 5873 6383}def
/UniqueID 4480348 def
currentdict currentfile eexec



0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/CambriaMath cguidfix
/F2.1/CambriaMath renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 227.7 104.94 rc
0 104.94 m
227.7 104.94 l
227.7 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-3311.6262 4894.4077 m
3694.5278 4894.4077 l
3694.5278 -2005.1307 l
-3311.6262 -2005.1307 l
h
-3311.6262 4894.4077 m
f
228 0 0 105 0 0 cm
BI
/Width 684
/Height 315
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHK
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]K
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHK
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]K
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHK
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]K
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHK
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]K
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHK
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]K
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHK
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]K
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHK
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]K
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHK
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]K
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHK
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]K
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$rVqHK
JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$rVqHKJcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcC<$JcG]KJcC<$JcC<$JcC<$
JcC<$JcC<$JcC<$JcC<$JcC<$rVqB
~> %APLeod
EI
Q
0.60000002 i
/Cs2 SC
0.90980393 0.98039222 0.87058818 sc
q
0 104.94 m
227.7 104.94 l
227.7 0 l
0 0 l
h
0 104.94 m
W
0 0 227.7 104.94 rc
182.16 5.9399991 m
225.72 5.9399991 l
225.72 29.699999 l
182.16 29.699999 l
h
f
25400 w
8 M
0 0 0 sc
0.00007795 0 0 -0.00007795 182.16 29.700001 cm
0 0 m
558800 0 l
558800 304800 l
0 304800 l
h
S
0.99000001 0 0 0.99000001 190.68826 11.851389 cm
/F1.1[ 14 0 0 14 0 0]sf
0 0 m
(!"#$)[ 11.999400 6.007400 4.005400 0.000000 ] xS
CM
89.949516 88.094376 m
95.888596 85.122536 l
89.947678 82.154381 l
89.948296 84.134377 l
39.599693 84.150002 l
39.600307 86.129997 l
89.948906 86.11438 l
h
f
179.57135 82.168037 m
185.51045 85.139999 l
179.56947 88.10804 l
179.57007 86.128044 l
132.6597 86.112534 l
132.66029 84.132538 l
179.57076 84.148041 l
h
f
204.93001 67.321938 m
204.99248 35.416874 l
206.97247 35.420753 l
204.01416 29.474953 l
201.03247 35.409122 l
203.01247 35.413002 l
202.95 67.318062 l
h
f
0.99000001 0 0 0.99000001 47.86253 73.321114 cm
/F1.1[ 12 0 0 12 0 0]sf
0 0 m
(%"&$'\(\))[ 6.000000 5.000400 3.999600 5.000400 6.000000 3.000000 0.000000 ] xS
0.99000001 0 0 0.99000001 138.47556 71.761124 cm
0 0 m
(%"&$'\(\))[ 6.000000 5.000400 3.999600 5.000400 6.000000 3.000000 0.000000 ] xS
0.99000001 0 0 0.99000001 167.65175 47.613625 cm
0 0 m
(*$'+$&)[ 6.000000 5.000400 6.000000 6.000000 5.000400 0.000000 ] xS
0.97254902 0.79607838 0.67843139 sc
CM
1.98 85.635002 m
1.98 95.750099 10.401525 103.95 20.790001 103.95 c
31.178476 103.95 39.599998 95.750099 39.599998 85.635002 c
39.599998 75.519905 31.178476 67.32 20.790001 67.32 c
10.401525 67.32 1.98 75.519905 1.98 85.635002 c
h
f
0 0 0 sc
0.00007795 0 0 -0.00007795 1.98 103.95 cm
0 234950 m
0 105190.7 108033.7 0 241300 0 c
374566.31 0 482600 105190.7 482600 234950 c
482600 364709.31 374566.31 469900 241300 469900 c
108033.7 469900 0 364709.31 0 234950 c
h
S
0.99000001 0 0 0.99000001 3.9781625 81.855736 cm
/F2.1[ 14 0 0 14 0 0]sf
0 0 m
(!)s
0.99000001 0 0 0.99000001 11.898167 78.885735 cm
/F2.1[ 10 0 0 10 0 0]sf
0 0 m
("#$%)[ 5.000000 6.000000 6.000000 0.000000 ] xS
0.97254902 0.79607838 0.67843139 sc
CM
96.029999 85.635002 m
96.029999 95.750099 104.22987 103.95 114.345 103.95 c
124.46013 103.95 132.66 95.750099 132.66 85.635002 c
132.66 75.519905 124.46013 67.32 114.345 67.32 c
104.22987 67.32 96.029999 75.519905 96.029999 85.635002 c
h
f
0 0 0 sc
0.00007795 0 0 -0.00007795 96.029999 103.95 cm
0 234950 m
0 105190.7 105190.7 0 234950 0 c
364709.31 0 469900 105190.7 469900 234950 c
469900 364709.31 364709.31 469900 234950 469900 c
105190.7 469900 0 364709.31 0 234950 c
h
S
0.99000001 0 0 0.99000001 105.87347 80.061218 cm
/F2.1[ 14 0 0 14 0 0]sf
0 0 m
(&)s
0.99000001 0 0 0.99000001 113.79347 77.091225 cm
/F2.1[ 10 0 0 10 0 0]sf
0 0 m
(')s
0.97254902 0.79607838 0.67843139 sc
CM
186.12 85.635002 m
186.12 95.750099 194.31987 103.95 204.435 103.95 c
214.55013 103.95 222.75 95.750099 222.75 85.635002 c
222.75 75.519905 214.55013 67.32 204.435 67.32 c
194.31987 67.32 186.12 75.519905 186.12 85.635002 c
h
f
0 0 0 sc
0.00007795 0 0 -0.00007795 186.12 103.95 cm
0 234950 m
0 105190.7 105190.7 0 234950 0 c
364709.31 0 469900 105190.7 469900 234950 c
469900 364709.31 364709.31 469900 234950 469900 c
105190.7 469900 0 364709.31 0 234950 c
h
S
0.99000001 0 0 0.99000001 190.20078 81.855736 cm
/F2.1[ 14 0 0 14 0 0]sf
0 0 m
(!)s
0.99000001 0 0 0.99000001 198.12079 78.885735 cm
/F2.1[ 10 0 0 10 0 0]sf
0 0 m
(\()s
0.99000001 0 0 0.99000001 204.06078 78.885735 cm
0 0 m
($%)[ 6.000000 0.000000 ] xS
ep
end
