%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 173 575 618
%%Creator: yExport 1.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, November 24, 2012 3:01:26 PM CST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
537 430 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
537.000 0.00000 l
537.000 430.000 l
0.00000 430.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 537 430 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 25.0000 25.0000 ] concat
1.00000 1.00000 1.00000 RG
newpath
-25.0000 -25.0000 m
512.000 -25.0000 l
512.000 405.000 l
-25.0000 405.000 l
-25.0000 -25.0000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 25.0000 25.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 25.0000 25.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 25.0000 25.0000 ] defaultmatrix matrix concatmatrix setmatrix
0 J
1.45000 M
newpath
164.603 64.5029 m
161.915 71.7686 l
167.274 71.7686 l
164.603 64.5029 l
h
163.478 62.5654 m
165.712 62.5654 l
171.274 77.1436 l
169.228 77.1436 l
167.899 73.4092 l
161.321 73.4092 l
159.993 77.1436 l
157.915 77.1436 l
163.478 62.5654 l
h
175.378 64.1904 m
175.378 75.5186 l
177.753 75.5186 l
179.774 75.5186 181.250 75.0628 182.183 74.1514  c
183.115 73.2399 183.581 71.7998 183.581 69.8311  c
183.581 67.8831 183.115 66.4561 182.183 65.5498  c
181.250 64.6436 179.774 64.1904 177.753 64.1904  c
175.378 64.1904 l
h
173.409 62.5654 m
177.456 62.5654 l
180.279 62.5654 182.352 63.1514 183.675 64.3232  c
184.998 65.4951 185.659 67.3311 185.659 69.8311  c
185.659 72.3519 184.995 74.2008 183.667 75.3779  c
182.339 76.5550 180.269 77.1436 177.456 77.1436  c
173.409 77.1436 l
173.409 62.5654 l
h
190.778 64.1904 m
190.778 75.5186 l
193.153 75.5186 l
195.174 75.5186 196.651 75.0628 197.583 74.1514  c
198.515 73.2399 198.981 71.7998 198.981 69.8311  c
198.981 67.8831 198.515 66.4561 197.583 65.5498  c
196.651 64.6436 195.174 64.1904 193.153 64.1904  c
190.778 64.1904 l
h
188.810 62.5654 m
192.856 62.5654 l
195.679 62.5654 197.752 63.1514 199.075 64.3232  c
200.398 65.4951 201.060 67.3311 201.060 69.8311  c
201.060 72.3519 200.396 74.2008 199.067 75.3779  c
197.739 76.5550 195.669 77.1436 192.856 77.1436  c
188.810 77.1436 l
188.810 62.5654 l
h
f
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
150.000 10.0000 m
210.000 10.0000 l
210.000 130.000 l
150.000 130.000 l
150.000 10.0000 l
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
q
[ 1.00000 0.00000 0.00000 1.00000 -1.00000 -3.00000 ] concat
0 0 18 26 rc
q
q
newpath
8.03125 4.42188 m
8.03125 5.85938 l
7.46875 5.59896 6.93750 5.40104 6.43750 5.26562  c
5.93750 5.13021 5.45833 5.06250 5.00000 5.06250  c
4.18750 5.06250 3.56250 5.21875 3.12500 5.53125  c
2.68750 5.84375 2.46875 6.29167 2.46875 6.87500  c
2.46875 7.35417 2.61458 7.71615 2.90625 7.96094  c
3.19792 8.20573 3.75000 8.40625 4.56250 8.56250  c
5.45312 8.75000 l
6.55729 8.95833 7.37240 9.32812 7.89844 9.85938  c
8.42448 10.3906 8.68750 11.0990 8.68750 11.9844  c
8.68750 13.0469 8.33333 13.8516 7.62500 14.3984  c
6.91667 14.9453 5.87500 15.2188 4.50000 15.2188  c
3.97917 15.2188 3.42708 15.1589 2.84375 15.0391  c
2.26042 14.9193 1.65625 14.7448 1.03125 14.5156  c
1.03125 13.0000 l
1.63542 13.3333 2.22396 13.5859 2.79688 13.7578  c
3.36979 13.9297 3.93750 14.0156 4.50000 14.0156  c
5.34375 14.0156 5.99479 13.8490 6.45312 13.5156  c
6.91146 13.1823 7.14062 12.7083 7.14062 12.0938  c
7.14062 11.5521 6.97656 11.1302 6.64844 10.8281  c
6.32031 10.5260 5.78125 10.3021 5.03125 10.1562  c
4.12500 9.96875 l
3.02083 9.75000 2.22135 9.40625 1.72656 8.93750  c
1.23177 8.46875 .984375 7.81771 .984375 6.98438  c
.984375 6.01562 1.32552 5.25260 2.00781 4.69531  c
2.69010 4.13802 3.63021 3.85938 4.82812 3.85938  c
5.33854 3.85938 5.85938 3.90625 6.39062 4.00000  c
6.92188 4.09375 7.46875 4.23438 8.03125 4.42188  c
h
f
newpath
17.1406 17.7031 m
17.1406 22.0000 l
15.9688 22.0000 l
15.9688 17.7500 l
15.9688 17.0729 15.8385 16.5677 15.5781 16.2344  c
15.3177 15.9010 14.9219 15.7344 14.3906 15.7344  c
13.7656 15.7344 13.2708 15.9349 12.9062 16.3359  c
12.5417 16.7370 12.3594 17.2865 12.3594 17.9844  c
12.3594 22.0000 l
11.1875 22.0000 l
11.1875 14.8906 l
12.3594 14.8906 l
12.3594 16.0000 l
12.6406 15.5729 12.9688 15.2526 13.3438 15.0391  c
13.7188 14.8255 14.1562 14.7188 14.6562 14.7188  c
15.4688 14.7188 16.0859 14.9714 16.5078 15.4766  c
16.9297 15.9818 17.1406 16.7240 17.1406 17.7031  c
h
f
Q
Q
Q
2 J
10.0000 M
0 J
1.45000 M
newpath
-4.16479 37.1545 m
-2.74292 37.1545 l
-.180420 44.0452 l
2.38208 37.1545 l
3.81958 37.1545 l
.741455 45.3577 l
-1.10229 45.3577 l
-4.16479 37.1545 l
h
9.39966 41.2327 m
8.31632 41.2327 7.56372 41.3577 7.14185 41.6077  c
6.71997 41.8577 6.50903 42.2847 6.50903 42.8889  c
6.50903 43.3577 6.66528 43.7327 6.97778 44.0139  c
7.29028 44.2952 7.71737 44.4358 8.25903 44.4358  c
9.00903 44.4358 9.61060 44.1728 10.0637 43.6467  c
10.5168 43.1207 10.7434 42.4150 10.7434 41.5295  c
10.7434 41.2327 l
9.39966 41.2327 l
h
12.0872 40.6702 m
12.0872 45.3577 l
10.7434 45.3577 l
10.7434 44.1077 l
10.4309 44.6077 10.0455 44.9775 9.58716 45.2170  c
9.12882 45.4566 8.56632 45.5764 7.89966 45.5764  c
7.06632 45.5764 6.40226 45.3394 5.90747 44.8655  c
5.41268 44.3915 5.16528 43.7587 5.16528 42.9670  c
5.16528 42.0504 5.47257 41.3577 6.08716 40.8889  c
6.70174 40.4202 7.62362 40.1858 8.85278 40.1858  c
10.7434 40.1858 l
10.7434 40.0452 l
10.7434 39.4306 10.5403 38.9514 10.1340 38.6077  c
9.72778 38.2639 9.15487 38.0920 8.41528 38.0920  c
7.94653 38.0920 7.48820 38.1493 7.04028 38.2639  c
6.59237 38.3785 6.16528 38.5504 5.75903 38.7795  c
5.75903 37.5295 l
6.24862 37.3420 6.72778 37.1988 7.19653 37.0999  c
7.66528 37.0009 8.11841 36.9514 8.55591 36.9514  c
9.74341 36.9514 10.6288 37.2587 11.2122 37.8733  c
11.7955 38.4879 12.0872 39.4202 12.0872 40.6702  c
h
19.6228 38.4202 m
19.4666 38.3264 19.2999 38.2587 19.1228 38.2170  c
18.9457 38.1754 18.7478 38.1545 18.5291 38.1545  c
17.7686 38.1545 17.1853 38.4019 16.7791 38.8967  c
16.3728 39.3915 16.1697 40.1025 16.1697 41.0295  c
16.1697 45.3577 l
14.8103 45.3577 l
14.8103 37.1545 l
16.1697 37.1545 l
16.1697 38.4358 l
16.4509 37.9358 16.8181 37.5634 17.2712 37.3186  c
17.7244 37.0738 18.2791 36.9514 18.9353 36.9514  c
19.0291 36.9514 19.1306 36.9592 19.2400 36.9749  c
19.3494 36.9905 19.4718 37.0087 19.6072 37.0295  c
19.6228 38.4202 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
79.0322 37.4147 m
61.2509 29.3679 l
61.2509 27.0554 l
79.0322 19.0085 l
79.0322 21.5241 l
64.3290 28.2116 l
79.0322 34.8991 l
79.0322 37.4147 l
h
98.7656 37.4147 m
80.9844 29.3679 l
80.9844 27.0554 l
98.7656 19.0085 l
98.7656 21.5241 l
84.0625 28.2116 l
98.7656 34.8991 l
98.7656 37.4147 l
h
f
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
50.0000 -10.0000 m
110.000 -10.0000 l
110.000 60.0000 l
50.0000 60.0000 l
50.0000 -10.0000 l
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
79.0322 127.415 m
61.2509 119.368 l
61.2509 117.055 l
79.0322 109.008 l
79.0322 111.524 l
64.3290 118.212 l
79.0322 124.899 l
79.0322 127.415 l
h
98.7656 127.415 m
80.9844 119.368 l
80.9844 117.055 l
98.7656 109.008 l
98.7656 111.524 l
84.0625 118.212 l
98.7656 124.899 l
98.7656 127.415 l
h
f
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
50.0000 80.0000 m
110.000 80.0000 l
110.000 150.000 l
50.0000 150.000 l
50.0000 80.0000 l
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
q
[ 1.00000 0.00000 0.00000 1.00000 -8.00000 87.0000 ] concat
0 0 31 26 rc
q
q
newpath
8.03125 4.42188 m
8.03125 5.85938 l
7.46875 5.59896 6.93750 5.40104 6.43750 5.26562  c
5.93750 5.13021 5.45833 5.06250 5.00000 5.06250  c
4.18750 5.06250 3.56250 5.21875 3.12500 5.53125  c
2.68750 5.84375 2.46875 6.29167 2.46875 6.87500  c
2.46875 7.35417 2.61458 7.71615 2.90625 7.96094  c
3.19792 8.20573 3.75000 8.40625 4.56250 8.56250  c
5.45312 8.75000 l
6.55729 8.95833 7.37240 9.32812 7.89844 9.85938  c
8.42448 10.3906 8.68750 11.0990 8.68750 11.9844  c
8.68750 13.0469 8.33333 13.8516 7.62500 14.3984  c
6.91667 14.9453 5.87500 15.2188 4.50000 15.2188  c
3.97917 15.2188 3.42708 15.1589 2.84375 15.0391  c
2.26042 14.9193 1.65625 14.7448 1.03125 14.5156  c
1.03125 13.0000 l
1.63542 13.3333 2.22396 13.5859 2.79688 13.7578  c
3.36979 13.9297 3.93750 14.0156 4.50000 14.0156  c
5.34375 14.0156 5.99479 13.8490 6.45312 13.5156  c
6.91146 13.1823 7.14062 12.7083 7.14062 12.0938  c
7.14062 11.5521 6.97656 11.1302 6.64844 10.8281  c
6.32031 10.5260 5.78125 10.3021 5.03125 10.1562  c
4.12500 9.96875 l
3.02083 9.75000 2.22135 9.40625 1.72656 8.93750  c
1.23177 8.46875 .984375 7.81771 .984375 6.98438  c
.984375 6.01562 1.32552 5.25260 2.00781 4.69531  c
2.69010 4.13802 3.63021 3.85938 4.82812 3.85938  c
5.33854 3.85938 5.85938 3.90625 6.39062 4.00000  c
6.92188 4.09375 7.46875 4.23438 8.03125 4.42188  c
h
f
newpath
17.1406 17.7031 m
17.1406 22.0000 l
15.9688 22.0000 l
15.9688 17.7500 l
15.9688 17.0729 15.8385 16.5677 15.5781 16.2344  c
15.3177 15.9010 14.9219 15.7344 14.3906 15.7344  c
13.7656 15.7344 13.2708 15.9349 12.9062 16.3359  c
12.5417 16.7370 12.3594 17.2865 12.3594 17.9844  c
12.3594 22.0000 l
11.1875 22.0000 l
11.1875 14.8906 l
12.3594 14.8906 l
12.3594 16.0000 l
12.6406 15.5729 12.9688 15.2526 13.3438 15.0391  c
13.7188 14.8255 14.1562 14.7188 14.6562 14.7188  c
15.4688 14.7188 16.0859 14.9714 16.5078 15.4766  c
16.9297 15.9818 17.1406 16.7240 17.1406 17.7031  c
h
18.8799 17.9219 m
22.3018 17.9219 l
22.3018 18.9531 l
18.8799 18.9531 l
18.8799 17.9219 l
h
24.5396 20.9219 m
26.6333 20.9219 l
26.6333 13.6875 l
24.3521 14.1406 l
24.3521 12.9844 l
26.6177 12.5156 l
27.9146 12.5156 l
27.9146 20.9219 l
30.0083 20.9219 l
30.0083 22.0000 l
24.5396 22.0000 l
24.5396 20.9219 l
h
f
Q
Q
Q
2 J
10.0000 M
0 J
1.45000 M
newpath
-4.16479 127.155 m
-2.74292 127.155 l
-.180420 134.045 l
2.38208 127.155 l
3.81958 127.155 l
.741455 135.358 l
-1.10229 135.358 l
-4.16479 127.155 l
h
9.39966 131.233 m
8.31632 131.233 7.56372 131.358 7.14185 131.608  c
6.71997 131.858 6.50903 132.285 6.50903 132.889  c
6.50903 133.358 6.66528 133.733 6.97778 134.014  c
7.29028 134.295 7.71737 134.436 8.25903 134.436  c
9.00903 134.436 9.61060 134.173 10.0637 133.647  c
10.5168 133.121 10.7434 132.415 10.7434 131.530  c
10.7434 131.233 l
9.39966 131.233 l
h
12.0872 130.670 m
12.0872 135.358 l
10.7434 135.358 l
10.7434 134.108 l
10.4309 134.608 10.0455 134.977 9.58716 135.217  c
9.12882 135.457 8.56632 135.576 7.89966 135.576  c
7.06632 135.576 6.40226 135.339 5.90747 134.865  c
5.41268 134.392 5.16528 133.759 5.16528 132.967  c
5.16528 132.050 5.47257 131.358 6.08716 130.889  c
6.70174 130.420 7.62362 130.186 8.85278 130.186  c
10.7434 130.186 l
10.7434 130.045 l
10.7434 129.431 10.5403 128.951 10.1340 128.608  c
9.72778 128.264 9.15487 128.092 8.41528 128.092  c
7.94653 128.092 7.48820 128.149 7.04028 128.264  c
6.59237 128.378 6.16528 128.550 5.75903 128.780  c
5.75903 127.530 l
6.24862 127.342 6.72778 127.199 7.19653 127.100  c
7.66528 127.001 8.11841 126.951 8.55591 126.951  c
9.74341 126.951 10.6288 127.259 11.2122 127.873  c
11.7955 128.488 12.0872 129.420 12.0872 130.670  c
h
19.6228 128.420 m
19.4666 128.326 19.2999 128.259 19.1228 128.217  c
18.9457 128.175 18.7478 128.155 18.5291 128.155  c
17.7686 128.155 17.1853 128.402 16.7791 128.897  c
16.3728 129.392 16.1697 130.102 16.1697 131.030  c
16.1697 135.358 l
14.8103 135.358 l
14.8103 127.155 l
16.1697 127.155 l
16.1697 128.436 l
16.4509 127.936 16.8181 127.563 17.2712 127.319  c
17.7244 127.074 18.2791 126.951 18.9353 126.951  c
19.0291 126.951 19.1306 126.959 19.2400 126.975  c
19.3494 126.990 19.4718 127.009 19.6072 127.030  c
19.6228 128.420 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
268.248 79.6416 m
271.764 79.6416 l
271.764 83.4229 l
268.248 83.4229 l
268.248 79.6416 l
h
f
newpath
268.248 103.362 m
271.764 103.362 l
271.764 107.144 l
268.248 107.144 l
268.248 103.362 l
h
f
newpath
268.248 127.083 m
271.764 127.083 l
271.764 130.864 l
268.248 130.864 l
268.248 127.083 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
79.0322 277.415 m
61.2509 269.368 l
61.2509 267.055 l
79.0322 259.008 l
79.0322 261.524 l
64.3290 268.212 l
79.0322 274.899 l
79.0322 277.415 l
h
98.7656 277.415 m
80.9844 269.368 l
80.9844 267.055 l
98.7656 259.008 l
98.7656 261.524 l
84.0625 268.212 l
98.7656 274.899 l
98.7656 277.415 l
h
f
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
50.0000 230.000 m
110.000 230.000 l
110.000 300.000 l
50.0000 300.000 l
50.0000 230.000 l
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
78.2480 164.642 m
81.7637 164.642 l
81.7637 168.423 l
78.2480 168.423 l
78.2480 164.642 l
h
f
newpath
78.2480 188.362 m
81.7637 188.362 l
81.7637 192.144 l
78.2480 192.144 l
78.2480 188.362 l
h
f
newpath
78.2480 212.083 m
81.7637 212.083 l
81.7637 215.864 l
78.2480 215.864 l
78.2480 212.083 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
79.0322 367.415 m
61.2509 359.368 l
61.2509 357.055 l
79.0322 349.008 l
79.0322 351.524 l
64.3290 358.212 l
79.0322 364.899 l
79.0322 367.415 l
h
98.7656 367.415 m
80.9844 359.368 l
80.9844 357.055 l
98.7656 349.008 l
98.7656 351.524 l
84.0625 358.212 l
98.7656 364.899 l
98.7656 367.415 l
h
f
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
50.0000 320.000 m
110.000 320.000 l
110.000 390.000 l
50.0000 390.000 l
50.0000 320.000 l
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
q
[ 1.00000 0.00000 0.00000 1.00000 -1.00000 237.000 ] concat
0 0 18 26 rc
q
q
newpath
8.03125 4.42188 m
8.03125 5.85938 l
7.46875 5.59896 6.93750 5.40104 6.43750 5.26562  c
5.93750 5.13021 5.45833 5.06250 5.00000 5.06250  c
4.18750 5.06250 3.56250 5.21875 3.12500 5.53125  c
2.68750 5.84375 2.46875 6.29167 2.46875 6.87500  c
2.46875 7.35417 2.61458 7.71615 2.90625 7.96094  c
3.19792 8.20573 3.75000 8.40625 4.56250 8.56250  c
5.45312 8.75000 l
6.55729 8.95833 7.37240 9.32812 7.89844 9.85938  c
8.42448 10.3906 8.68750 11.0990 8.68750 11.9844  c
8.68750 13.0469 8.33333 13.8516 7.62500 14.3984  c
6.91667 14.9453 5.87500 15.2188 4.50000 15.2188  c
3.97917 15.2188 3.42708 15.1589 2.84375 15.0391  c
2.26042 14.9193 1.65625 14.7448 1.03125 14.5156  c
1.03125 13.0000 l
1.63542 13.3333 2.22396 13.5859 2.79688 13.7578  c
3.36979 13.9297 3.93750 14.0156 4.50000 14.0156  c
5.34375 14.0156 5.99479 13.8490 6.45312 13.5156  c
6.91146 13.1823 7.14062 12.7083 7.14062 12.0938  c
7.14062 11.5521 6.97656 11.1302 6.64844 10.8281  c
6.32031 10.5260 5.78125 10.3021 5.03125 10.1562  c
4.12500 9.96875 l
3.02083 9.75000 2.22135 9.40625 1.72656 8.93750  c
1.23177 8.46875 .984375 7.81771 .984375 6.98438  c
.984375 6.01562 1.32552 5.25260 2.00781 4.69531  c
2.69010 4.13802 3.63021 3.85938 4.82812 3.85938  c
5.33854 3.85938 5.85938 3.90625 6.39062 4.00000  c
6.92188 4.09375 7.46875 4.23438 8.03125 4.42188  c
h
f
newpath
12.5000 20.9219 m
16.9688 20.9219 l
16.9688 22.0000 l
10.9531 22.0000 l
10.9531 20.9219 l
11.4427 20.4219 12.1068 19.7474 12.9453 18.8984  c
13.7839 18.0495 14.3125 17.5000 14.5312 17.2500  c
14.9375 16.7917 15.2214 16.4010 15.3828 16.0781  c
15.5443 15.7552 15.6250 15.4427 15.6250 15.1406  c
15.6250 14.6302 15.4505 14.2188 15.1016 13.9062  c
14.7526 13.5938 14.2917 13.4375 13.7188 13.4375  c
13.3125 13.4375 12.8880 13.5052 12.4453 13.6406  c
12.0026 13.7760 11.5260 13.9896 11.0156 14.2812  c
11.0156 12.9844 l
11.5365 12.7760 12.0208 12.6172 12.4688 12.5078  c
12.9167 12.3984 13.3229 12.3438 13.6875 12.3438  c
14.6771 12.3438 15.4635 12.5911 16.0469 13.0859  c
16.6302 13.5807 16.9219 14.2396 16.9219 15.0625  c
16.9219 15.4479 16.8490 15.8151 16.7031 16.1641  c
16.5573 16.5130 16.2917 16.9219 15.9062 17.3906  c
15.8021 17.5156 15.4661 17.8724 14.8984 18.4609  c
14.3307 19.0495 13.5312 19.8698 12.5000 20.9219  c
h
f
Q
Q
Q
2 J
10.0000 M
0 J
1.45000 M
q
[ 1.00000 0.00000 0.00000 1.00000 -1.00000 327.000 ] concat
0 0 18 26 rc
q
q
newpath
8.03125 4.42188 m
8.03125 5.85938 l
7.46875 5.59896 6.93750 5.40104 6.43750 5.26562  c
5.93750 5.13021 5.45833 5.06250 5.00000 5.06250  c
4.18750 5.06250 3.56250 5.21875 3.12500 5.53125  c
2.68750 5.84375 2.46875 6.29167 2.46875 6.87500  c
2.46875 7.35417 2.61458 7.71615 2.90625 7.96094  c
3.19792 8.20573 3.75000 8.40625 4.56250 8.56250  c
5.45312 8.75000 l
6.55729 8.95833 7.37240 9.32812 7.89844 9.85938  c
8.42448 10.3906 8.68750 11.0990 8.68750 11.9844  c
8.68750 13.0469 8.33333 13.8516 7.62500 14.3984  c
6.91667 14.9453 5.87500 15.2188 4.50000 15.2188  c
3.97917 15.2188 3.42708 15.1589 2.84375 15.0391  c
2.26042 14.9193 1.65625 14.7448 1.03125 14.5156  c
1.03125 13.0000 l
1.63542 13.3333 2.22396 13.5859 2.79688 13.7578  c
3.36979 13.9297 3.93750 14.0156 4.50000 14.0156  c
5.34375 14.0156 5.99479 13.8490 6.45312 13.5156  c
6.91146 13.1823 7.14062 12.7083 7.14062 12.0938  c
7.14062 11.5521 6.97656 11.1302 6.64844 10.8281  c
6.32031 10.5260 5.78125 10.3021 5.03125 10.1562  c
4.12500 9.96875 l
3.02083 9.75000 2.22135 9.40625 1.72656 8.93750  c
1.23177 8.46875 .984375 7.81771 .984375 6.98438  c
.984375 6.01562 1.32552 5.25260 2.00781 4.69531  c
2.69010 4.13802 3.63021 3.85938 4.82812 3.85938  c
5.33854 3.85938 5.85938 3.90625 6.39062 4.00000  c
6.92188 4.09375 7.46875 4.23438 8.03125 4.42188  c
h
f
newpath
11.6094 20.9219 m
13.7031 20.9219 l
13.7031 13.6875 l
11.4219 14.1406 l
11.4219 12.9844 l
13.6875 12.5156 l
14.9844 12.5156 l
14.9844 20.9219 l
17.0781 20.9219 l
17.0781 22.0000 l
11.6094 22.0000 l
11.6094 20.9219 l
h
f
Q
Q
Q
2 J
10.0000 M
0 J
1.45000 M
newpath
-4.16479 277.155 m
-2.74292 277.155 l
-.180420 284.045 l
2.38208 277.155 l
3.81958 277.155 l
.741455 285.358 l
-1.10229 285.358 l
-4.16479 277.155 l
h
9.39966 281.233 m
8.31632 281.233 7.56372 281.358 7.14185 281.608  c
6.71997 281.858 6.50903 282.285 6.50903 282.889  c
6.50903 283.358 6.66528 283.733 6.97778 284.014  c
7.29028 284.295 7.71737 284.436 8.25903 284.436  c
9.00903 284.436 9.61060 284.173 10.0637 283.647  c
10.5168 283.121 10.7434 282.415 10.7434 281.530  c
10.7434 281.233 l
9.39966 281.233 l
h
12.0872 280.670 m
12.0872 285.358 l
10.7434 285.358 l
10.7434 284.108 l
10.4309 284.608 10.0455 284.977 9.58716 285.217  c
9.12882 285.457 8.56632 285.576 7.89966 285.576  c
7.06632 285.576 6.40226 285.339 5.90747 284.865  c
5.41268 284.392 5.16528 283.759 5.16528 282.967  c
5.16528 282.050 5.47257 281.358 6.08716 280.889  c
6.70174 280.420 7.62362 280.186 8.85278 280.186  c
10.7434 280.186 l
10.7434 280.045 l
10.7434 279.431 10.5403 278.951 10.1340 278.608  c
9.72778 278.264 9.15487 278.092 8.41528 278.092  c
7.94653 278.092 7.48820 278.149 7.04028 278.264  c
6.59237 278.378 6.16528 278.550 5.75903 278.780  c
5.75903 277.530 l
6.24862 277.342 6.72778 277.199 7.19653 277.100  c
7.66528 277.001 8.11841 276.951 8.55591 276.951  c
9.74341 276.951 10.6288 277.259 11.2122 277.873  c
11.7955 278.488 12.0872 279.420 12.0872 280.670  c
h
19.6228 278.420 m
19.4666 278.326 19.2999 278.259 19.1228 278.217  c
18.9457 278.175 18.7478 278.155 18.5291 278.155  c
17.7686 278.155 17.1853 278.402 16.7791 278.897  c
16.3728 279.392 16.1697 280.102 16.1697 281.030  c
16.1697 285.358 l
14.8103 285.358 l
14.8103 277.155 l
16.1697 277.155 l
16.1697 278.436 l
16.4509 277.936 16.8181 277.563 17.2712 277.319  c
17.7244 277.074 18.2791 276.951 18.9353 276.951  c
19.0291 276.951 19.1306 276.959 19.2400 276.975  c
19.3494 276.990 19.4718 277.009 19.6072 277.030  c
19.6228 278.420 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
-4.16479 367.155 m
-2.74292 367.155 l
-.180420 374.045 l
2.38208 367.155 l
3.81958 367.155 l
.741455 375.358 l
-1.10229 375.358 l
-4.16479 367.155 l
h
9.39966 371.233 m
8.31632 371.233 7.56372 371.358 7.14185 371.608  c
6.71997 371.858 6.50903 372.285 6.50903 372.889  c
6.50903 373.358 6.66528 373.733 6.97778 374.014  c
7.29028 374.295 7.71737 374.436 8.25903 374.436  c
9.00903 374.436 9.61060 374.173 10.0637 373.647  c
10.5168 373.121 10.7434 372.415 10.7434 371.530  c
10.7434 371.233 l
9.39966 371.233 l
h
12.0872 370.670 m
12.0872 375.358 l
10.7434 375.358 l
10.7434 374.108 l
10.4309 374.608 10.0455 374.977 9.58716 375.217  c
9.12882 375.457 8.56632 375.576 7.89966 375.576  c
7.06632 375.576 6.40226 375.339 5.90747 374.865  c
5.41268 374.392 5.16528 373.759 5.16528 372.967  c
5.16528 372.050 5.47257 371.358 6.08716 370.889  c
6.70174 370.420 7.62362 370.186 8.85278 370.186  c
10.7434 370.186 l
10.7434 370.045 l
10.7434 369.431 10.5403 368.951 10.1340 368.608  c
9.72778 368.264 9.15487 368.092 8.41528 368.092  c
7.94653 368.092 7.48820 368.149 7.04028 368.264  c
6.59237 368.378 6.16528 368.550 5.75903 368.780  c
5.75903 367.530 l
6.24862 367.342 6.72778 367.199 7.19653 367.100  c
7.66528 367.001 8.11841 366.951 8.55591 366.951  c
9.74341 366.951 10.6288 367.259 11.2122 367.873  c
11.7955 368.488 12.0872 369.420 12.0872 370.670  c
h
19.6228 368.420 m
19.4666 368.326 19.2999 368.259 19.1228 368.217  c
18.9457 368.175 18.7478 368.155 18.5291 368.155  c
17.7686 368.155 17.1853 368.402 16.7791 368.897  c
16.3728 369.392 16.1697 370.102 16.1697 371.030  c
16.1697 375.358 l
14.8103 375.358 l
14.8103 367.155 l
16.1697 367.155 l
16.1697 368.436 l
16.4509 367.936 16.8181 367.563 17.2712 367.319  c
17.7244 367.074 18.2791 366.951 18.9353 366.951  c
19.0291 366.951 19.1306 366.959 19.2400 366.975  c
19.3494 366.990 19.4718 367.009 19.6072 367.030  c
19.6228 368.420 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
164.603 304.503 m
161.915 311.769 l
167.274 311.769 l
164.603 304.503 l
h
163.478 302.565 m
165.712 302.565 l
171.274 317.144 l
169.228 317.144 l
167.899 313.409 l
161.321 313.409 l
159.993 317.144 l
157.915 317.144 l
163.478 302.565 l
h
175.378 304.190 m
175.378 315.519 l
177.753 315.519 l
179.774 315.519 181.250 315.063 182.183 314.151  c
183.115 313.240 183.581 311.800 183.581 309.831  c
183.581 307.883 183.115 306.456 182.183 305.550  c
181.250 304.644 179.774 304.190 177.753 304.190  c
175.378 304.190 l
h
173.409 302.565 m
177.456 302.565 l
180.279 302.565 182.352 303.151 183.675 304.323  c
184.998 305.495 185.659 307.331 185.659 309.831  c
185.659 312.352 184.995 314.201 183.667 315.378  c
182.339 316.555 180.269 317.144 177.456 317.144  c
173.409 317.144 l
173.409 302.565 l
h
190.778 304.190 m
190.778 315.519 l
193.153 315.519 l
195.174 315.519 196.651 315.063 197.583 314.151  c
198.515 313.240 198.981 311.800 198.981 309.831  c
198.981 307.883 198.515 306.456 197.583 305.550  c
196.651 304.644 195.174 304.190 193.153 304.190  c
190.778 304.190 l
h
188.810 302.565 m
192.856 302.565 l
195.679 302.565 197.752 303.151 199.075 304.323  c
200.398 305.495 201.060 307.331 201.060 309.831  c
201.060 312.352 200.396 314.201 199.067 315.378  c
197.739 316.555 195.669 317.144 192.856 317.144  c
188.810 317.144 l
188.810 302.565 l
h
f
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
150.000 250.000 m
210.000 250.000 l
210.000 370.000 l
150.000 370.000 l
150.000 250.000 l
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
268.248 249.642 m
271.764 249.642 l
271.764 253.423 l
268.248 253.423 l
268.248 249.642 l
h
f
newpath
268.248 273.362 m
271.764 273.362 l
271.764 277.144 l
268.248 277.144 l
268.248 273.362 l
h
f
newpath
268.248 297.083 m
271.764 297.083 l
271.764 300.864 l
268.248 300.864 l
268.248 297.083 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
298.248 164.642 m
301.764 164.642 l
301.764 168.423 l
298.248 168.423 l
298.248 164.642 l
h
f
newpath
298.248 188.362 m
301.764 188.362 l
301.764 192.144 l
298.248 192.144 l
298.248 188.362 l
h
f
newpath
298.248 212.083 m
301.764 212.083 l
301.764 215.864 l
298.248 215.864 l
298.248 212.083 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
364.603 184.503 m
361.915 191.769 l
367.274 191.769 l
364.603 184.503 l
h
363.478 182.565 m
365.712 182.565 l
371.274 197.144 l
369.228 197.144 l
367.899 193.409 l
361.321 193.409 l
359.993 197.144 l
357.915 197.144 l
363.478 182.565 l
h
375.378 184.190 m
375.378 195.519 l
377.753 195.519 l
379.774 195.519 381.250 195.063 382.183 194.151  c
383.115 193.240 383.581 191.800 383.581 189.831  c
383.581 187.883 383.115 186.456 382.183 185.550  c
381.250 184.644 379.774 184.190 377.753 184.190  c
375.378 184.190 l
h
373.409 182.565 m
377.456 182.565 l
380.279 182.565 382.352 183.151 383.675 184.323  c
384.998 185.495 385.659 187.331 385.659 189.831  c
385.659 192.352 384.995 194.201 383.667 195.378  c
382.339 196.555 380.269 197.144 377.456 197.144  c
373.409 197.144 l
373.409 182.565 l
h
390.778 184.190 m
390.778 195.519 l
393.153 195.519 l
395.174 195.519 396.651 195.063 397.583 194.151  c
398.515 193.240 398.981 191.800 398.981 189.831  c
398.981 187.883 398.515 186.456 397.583 185.550  c
396.651 184.644 395.174 184.190 393.153 184.190  c
390.778 184.190 l
h
388.810 182.565 m
392.856 182.565 l
395.679 182.565 397.752 183.151 399.075 184.323  c
400.398 185.495 401.060 187.331 401.060 189.831  c
401.060 192.352 400.396 194.201 399.067 195.378  c
397.739 196.555 395.669 197.144 392.856 197.144  c
388.810 197.144 l
388.810 182.565 l
h
f
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
350.000 130.000 m
410.000 130.000 l
410.000 250.000 l
350.000 250.000 l
350.000 130.000 l
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
463.809 186.882 m
463.809 188.398 l
463.350 188.169 462.876 187.994 462.387 187.875  c
461.897 187.755 461.387 187.695 460.855 187.695  c
460.053 187.695 459.452 187.820 459.051 188.070  c
458.650 188.320 458.449 188.690 458.449 189.179  c
458.449 189.554 458.592 189.848 458.879 190.062  c
459.165 190.276 459.741 190.481 460.605 190.679  c
461.168 190.789 l
462.314 191.039 463.129 191.388 463.613 191.835  c
464.098 192.283 464.340 192.908 464.340 193.710  c
464.340 194.627 463.978 195.351 463.254 195.882  c
462.530 196.414 461.538 196.679 460.277 196.679  c
459.746 196.679 459.194 196.630 458.621 196.531  c
458.048 196.432 457.444 196.278 456.809 196.070  c
456.809 194.398 l
457.413 194.710 458.004 194.945 458.582 195.101  c
459.160 195.257 459.736 195.335 460.309 195.335  c
461.069 195.335 461.655 195.205 462.066 194.945  c
462.478 194.684 462.684 194.315 462.684 193.835  c
462.684 193.398 462.535 193.062 462.238 192.828  c
461.941 192.593 461.293 192.367 460.293 192.148  c
459.730 192.023 l
458.720 191.804 457.993 191.479 457.551 191.046  c
457.108 190.614 456.887 190.013 456.887 189.242  c
456.887 188.325 457.215 187.614 457.871 187.109  c
458.527 186.604 459.460 186.351 460.668 186.351  c
461.262 186.351 461.822 186.395 462.348 186.484  c
462.874 186.572 463.361 186.705 463.809 186.882  c
h
466.749 192.539 m
466.749 186.585 l
468.358 186.585 l
468.358 192.476 l
468.358 193.414 468.541 194.114 468.905 194.578  c
469.270 195.041 469.817 195.273 470.546 195.273  c
471.421 195.273 472.111 194.994 472.616 194.437  c
473.121 193.880 473.374 193.122 473.374 192.164  c
473.374 186.585 l
474.999 186.585 l
474.999 196.429 l
473.374 196.429 l
473.374 194.914 l
472.978 195.518 472.522 195.963 472.007 196.250  c
471.491 196.536 470.890 196.679 470.202 196.679  c
469.067 196.679 468.207 196.328 467.624 195.625  c
467.041 194.921 466.749 193.893 466.749 192.539  c
h
485.985 188.476 m
486.392 187.747 486.876 187.210 487.438 186.867  c
488.001 186.523 488.662 186.351 489.423 186.351  c
490.444 186.351 491.233 186.710 491.790 187.429  c
492.347 188.148 492.626 189.169 492.626 190.492  c
492.626 196.429 l
491.001 196.429 l
491.001 190.539 l
491.001 189.601 490.834 188.903 490.501 188.445  c
490.168 187.986 489.657 187.757 488.970 187.757  c
488.136 187.757 487.478 188.036 486.993 188.593  c
486.509 189.151 486.267 189.908 486.267 190.867  c
486.267 196.429 l
484.626 196.429 l
484.626 190.539 l
484.626 189.591 484.459 188.890 484.126 188.437  c
483.793 187.984 483.277 187.757 482.579 187.757  c
481.756 187.757 481.103 188.036 480.618 188.593  c
480.134 189.151 479.892 189.908 479.892 190.867  c
479.892 196.429 l
478.267 196.429 l
478.267 186.585 l
479.892 186.585 l
479.892 188.117 l
480.256 187.513 480.696 187.067 481.212 186.781  c
481.728 186.494 482.340 186.351 483.048 186.351  c
483.767 186.351 484.376 186.533 484.876 186.898  c
485.376 187.263 485.746 187.789 485.985 188.476  c
h
f
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
22.5000 10.0000 m
37.5981 10.0000 l
S
newpath
49.9731 10.0000 m
36.4731 3.25000 l
36.4731 16.7500 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
22.5000 40.0000 m
37.5981 40.0000 l
S
newpath
49.9731 40.0000 m
36.4731 33.2500 l
36.4731 46.7500 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
110.000 25.0000 m
137.586 25.0000 l
S
newpath
149.961 25.0000 m
136.461 18.2500 l
136.461 31.7500 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
110.000 115.000 m
137.586 115.000 l
S
newpath
149.961 115.000 m
136.461 108.250 l
136.461 121.750 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
22.5000 100.000 m
37.5981 100.000 l
S
newpath
49.9731 100.000 m
36.4731 93.2500 l
36.4731 106.750 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
22.5000 130.000 m
37.5981 130.000 l
S
newpath
49.9731 130.000 m
36.4731 123.250 l
36.4731 136.750 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
210.000 70.0000 m
242.596 70.0000 l
S
newpath
254.971 70.0000 m
241.471 63.2500 l
241.471 76.7500 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
22.5000 250.000 m
37.5981 250.000 l
S
newpath
49.9731 250.000 m
36.4731 243.250 l
36.4731 256.750 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
22.5000 340.000 m
37.5981 340.000 l
S
newpath
49.9731 340.000 m
36.4731 333.250 l
36.4731 346.750 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
22.5000 280.000 m
37.5981 280.000 l
S
newpath
49.9731 280.000 m
36.4731 273.250 l
36.4731 286.750 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
22.5000 370.000 m
37.5981 370.000 l
S
newpath
49.9731 370.000 m
36.4731 363.250 l
36.4731 376.750 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
110.000 265.000 m
137.586 265.000 l
S
newpath
149.961 265.000 m
136.461 258.250 l
136.461 271.750 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
110.000 355.000 m
137.586 355.000 l
S
newpath
149.961 355.000 m
136.461 348.250 l
136.461 361.750 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
210.000 310.000 m
242.581 310.000 l
S
newpath
254.956 310.000 m
241.456 303.250 l
241.456 316.750 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
318.000 235.000 m
337.594 235.000 l
S
newpath
349.969 235.000 m
336.469 228.250 l
336.469 241.750 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
318.000 145.000 m
337.594 145.000 l
S
newpath
349.969 145.000 m
336.469 138.250 l
336.469 151.750 l
h
f
1.00000 w
2 J
10.0000 M
2.00000 w
0 J
1.45000 M
newpath
410.000 190.000 m
442.625 190.000 l
S
newpath
455.000 190.000 m
441.500 183.250 l
441.500 196.750 l
h
f
1.00000 w
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
