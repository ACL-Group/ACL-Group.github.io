%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Visio-TimeComparisonOfOfflineAndOnline.pdf
%%Creator: Adobe Acrobat 9.0.0
%%For: Administrator
%%CreationDate: 2013-02-22, 13:45:30
%%BoundingBox: 0 0 312 159
%%HiResBoundingBox: 0 0 311.6389 158.6321
%%CropBox: 0 0 311.6389 158.6321
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1066 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c041 52.342996, 2008/05/07-20:48:00        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2013-02-22T13:45:12+08:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   xmp:ModifyDate="2013-02-22T13:45:12+08:00"
   pdf:Producer="Acrobat Distiller 9.0.0 (Windows)"
   xmpMM:DocumentID="uuid:229d261f-6e44-4e1e-9da6-d022dca5d3c1"
   xmpMM:InstanceID="uuid:5bcb1f5b-e524-4e36-93f1-0bc6b5e550b5">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Administrator</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Visio-TimeComparisonOfOfflineAndOnline.vsd</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -158.632 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 158.632 li
311.639 158.632 li
311.639 0 li
cp
clp
[1 0 0 1 -17.373 0 ]ct
false sop
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: Arial-BoldMT Initial
ct_T42Dict begin
-0.625 -0.375 2 1.008
 256 array 0 1 255 {1 index exch /.notdef put} for  /Arial-BoldMT
Type42DictBegin
[<00010000000c000c000c000c4f532f320e0b3397000000cc000000566376
7420ef1f94cc000001240000073a6670676d08e8ba2800000860000005d7
676c7966c7a23d32000070c80003a50e68656164cee221a800000e380000
003668686561127e12ff00000e7000000024686d7478a006329b00000e94
00001a286c6f63610cceaeba000028bc00001a2c6d6178700d8312030000
42e8000000206e616d65cc67f6d30000430800001d4f7072657041216403
000060580000106f67646972000000000000000000000000000103d402bc
00050000059a05330000011b059a0533000003d1006602120805020b0704
02020202020400007a878000000000000008000000004d6f6e6f00200020
fffc05d3fe510133073e01b2400001ffffff0000000005ba001c05ba001c
05a7001c0426001c0000ffe40000ffe40000ffe4fe69ffe405ba001cfe69
ffe402ea0000011d0000011d000000000000000000b200ac00d701280120
00b301fa001700f8011901310049000400f7000300af00fd009500140054
00960112002400160055004901040119012b008c019bff76ffe9003d0092
00a2ffb70182ffaa0016008f00c600f8001c00de04010037004e00550055
006500e903e50059ff9a00080087000b003b00520116006100d600d600f5
00000093009400be017cfff80004001400820092003c00410041ffc1fffc
002a008c049005d809b5009100bb0106ff63ff69001e0022008a022bffd6
ffdf0026005900a300ac0104012b01c004480021006b00850098011903c6
006b009500a400fe010c025d034305bf000000490056006e0077008a00aa
00ca0112015005d805f0ff7bffe70006001300280061006900e90135014d
02a5040cff3effda005b00b900c801190119011901c0045b04a7055bfe3f
ff9dffc2001500b7010a01bc01c10532058efd81ffa1ffae000c00260031
003d004e00560062008300c100c900f100f2027fff7f00480053007700c5
011d01200126012801d60219027e027e03d3002e0041005d006b0075009f
00b000b200ba00bb00bd00d600db00e000e50114011b014a0162019101f2
020c026402cf039b03b403d4040104a9001600230025002a007400a500b6
00cc00cd00cf0105012001300150016a016f0197019d01e002b002ec02f7
0408048304fb04fd0526fee0fefbff4efff50018001a004c007a007f0091
00a300b300b400ce00d500f200f300f601100138016801a101b001e001ec
02090222024f0270029602a502ad034e039103c104350442046b04cd04da
0586058b076107fefca6fe93feadfed1ffb7ffd10003000e001800260046
00690081008f00a500bf00d300d500d900dd00e20119012b0138013b015a
015e016801730188019401ad01c501d101ea01f20200020002000222023b
0244024f026f0272027e02820293029402a502cf02cf02d002da02dd02eb
02f5030503220336037103a103b003b803d003e604100426042e0431044f
045a04ff053205320547055305a805ab05c205f0063c0664067006e80782
078408ccfd2afddefe00fe68feb0feb3ffaa00080059007a0091009e00a2
00af00b400bb00ca00cc00ce00d900e000f40114011a01210127012b0139
0146014b014d0157015c01650182018701920198019b01a201ae01c501c5
01d102070222022b024102530261026502840287028d02b402b402ba02c9
02d602d802ed02f503170323032b03310349035a035b036e03710374037e
03840391039103aa03cf03d303e703e803ed04080417041e0475047a0499
04a704b404d1054c056d056d05a205bf05c005d105fc05fc0602061a061c
062f066a06a806e2070607360750078907d407f30870011c012a011a0120
0000000000000000000000000219000b001e02aa0214047f01ed0000001d
0104000f0091002b01880153011201f3003f03fe0168010e047f01ed036e
03150219041300000000064004b00000027401bb003501c5007f06020301
000004e000b201dc02e004c3023d00d50160011904a7036e05ca022100ab
0426009002bc02bb014200b4023c0256029c030001e501a800e5006b0078
0094016b017300ab01ed013a017d0137017f00d4021603530184003cffa2
02040109014901f0006e031500810464005e000000000000000000000000
000000000000000000000000000000000000013900dc00e9fe9e040d047c
012b00b80096005900ac00df01a900fa0105ffec00170003005500610004
008c00a3008500280120005d00d6007f012601190104016c06cf00b40106
00000737063e047a00f000f900e905ba042604420000ffe7fe69049e04e3
ff37ff2d01200105012000a800740068004700f200e500d900bd00a80068
0047005c0048000a0028003200410050005a0064007d00870091ffb0ff9c
ff83ff79ff6f00cb012000fa012c01fa01a000d500b8005c003c00c800c8
008f00d9018b00b300470000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000fe6400c000ea01180125013203b003ed0576059005aa05b405be
05cd063100780084009b00cc00e200f4010a0120016300d100ea00f70108
01420019002c00340041003800480058006c025903bd0043011a007000d3
0028003700420050005a0064007300780082008c009c00a500bd00ce00f0
0110015c00be00d801020117012c016300ea01080041004b0055005f0073
00a60109018301b300410064001e002a00eb00fa010e01380274002c0040
0082009600b600c000cc00dc00e600f000ff010a0120012c013b01440156
016300f70057006401100136005001b10000ffb60039004e004403cc00e5
002401100042012201a400f0006000e0000e001d003905e30102002cfe4e
ff38026903bd011600ff000e00a00054001b003d01710041000f005000fd
0015014f0035fe52002c00d30000404154403f3e3d3c3b3a393837353433
3231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a1918171615
14131211100f0e0d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00
b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a2344
45b01923442d2c2045b00325456164b050515845441b2121592d2cb00143
632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a
2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0
0361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2c
b01243588745b0112bb0172344b0177ae41b038a45186920b01723448a8a
8720b0c05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2c
b0022546608a46b040618c482d2c4b53205c58b002855958b00185592d2c
20b0032545b019234445b01a23444565234520b00325606a20b009234223
688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a54582321
b03f1b235961441cb114008a5279b31940201945208a54582321b03f1b23
5961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b
2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b
2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b00052
5823b002253823b002256538008a63381b212121212159012d2c4bb06451
584569b00943608a103a1b212121592d2c01b005251023208af500b00160
23edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500
edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2cb02b
2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b8023623
701020b802364520b0005058b00161593a2f182d2c21210c6423648bb840
00622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c
21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c642364
8bb84000626023212d2cb4000100000015b00826b00826b00826b008260f
10161345683ab001162d2cb4000100000015b00826b00826b00826b00826
0f1016134568653ab001162d2c4b53234b515a5820458a60441b2121592d
2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b
5458381b2121592d2cb0134358031b02592d2cb0134358021b03592d2c4b
54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c6423
646164b0035158b00425b00425012046b01060482046b0106048590a2121
1b2121592d2cb012435c580cb00425b00425060c6423646164b807085158
b00425b00425012046b8fff060482046b8fff06048590a21211b2121592d
2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121
592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426
024b545a8a8a0ab012435c5a58381b2121592d2c462346608a8a46232046
8a608a61b8ff8062232010238ab902a702a78a70456020b0005058b00161
b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b1400188
535a58b910000020885458b202010243604259b12401885158b920000040
885458b202020243604259b12401885458b2022002436042004b014b5258
b2020802436042591bb940000080885458b202040243604259b940000080
63b80100885458b202080243604259b94000010063b80200885458b20210
02436042595959592d00000100000002e6675c9a4cf75f0f3cf508190800
00000000a2e33c1d00000000b9d5b513fafafcfd10000815000100090001
00010000000000010000073efe4e00431000fafafe261000000100000000
00000000000000000000068a0600010000000000023900000239000002aa
00b803cb00700473001204730046071d005905c7005a01e7005c02aa006b
02aa0043031d001c04ac00550239007502aa0073023900930239fffd0473
0056047300a2047300330473004d047300260473005b0473005704730057
047300530473004102aa00c902aa00aa04ac005f04ac005504ac005f04e3
006a07cd003d05c7000005c7009605c7006105c700940556009504e30097
0639006205c700960239008c0473002305c7009904e3009d06aa009105c7
009806390059055600950639005905c700960556004a04e3002c05c70093
0556ffff078d0007055600000556fffd04e3001602aa00920239fffd02aa
002604ac00730473ffed02aa002a0473004904e300870473005504e30054
0473004102aa001804e3005404e30092023900930239ffa2047300890239
0093071d007e04e3009104e3005204e3008b04e3005b031d008704730030
02aa001f04e3008d0473000b063900090473000c0473000e04000022031d
003c023d00b0031d002d04ac004305c7000005c7000005c7006105560095
05c700980639005905c70093047300490473004904730049047300490473
004904730049047300570473004104730041047300410473004102390092
0239ffe90239ffcd0239ffd004e3009104e3005204e3005204e3005204e3
005204e3005204e3008d04e3008d04e3008d04e3008d0473004403330056
047300540473000d0473003b02cd00420473fffe04e3008b05e5fff705e5
fff7080000d802aa00bb02aa0005046400310800ffaa0639003f05b40098
046400320464003c0464003c04730001049c006f03f4002c05b4007a0696
00a1046400000231000002f6002502ec001a06250037071d005804e30057
04e3006502aa00c304ac0055046400540473ffec0464001f04e5001a0473
00600473006a080000c905c7000005c700000639005908000048078d0058
0473fffc08000000040000840400006902390098023900720464003103f4
002f0473000e0556fff70156fea90473ffe002aa004b02aa004b04e3001f
04e3001f047300440239009302390075040000710800000105c700000556
009505c7000005560095055600950239006a0239ffae0239ffbf0239ffc1
06390059063900590639005905c7009305c7009305c700930239009302aa
000302aafff302aa001302aa001a02aa00cd02aa009102aa002602aa0060
02aa00a002aa000304e3000a0239000a0556004a0473003004e300160400
0022023d00b005c7fffd04e300530556fff70473000e0556009504e3008b
04ac005504ac006d02aa005b02aa001902aa002806ac005c06ac005c06ac
0028047300000639006204e300540239008c0556004a0473003005c70061
0473005505c700610473005504e30054046bffed02aa01ea05c700000473
004905c700000473004905c7009405c0005105c7fffd0556009504730041
055600950473004104e3009d0239007904e3009d0315009504e3009a03d5
009005c7009804e3009105c7009804e300910639005904e3005205c70096
031d008705c70096031d00500556004a0473003004e3002c02aa001f04e3
002c03d5001e05c7009304e3008d05c7009304e3008d04e3001604000022
04e300160400002204cf009a063900560691005604eb004e04da004e03cc
004e0579004e0392003005b9004e046bffed04d500b8032b004f08c00029
0800004f040000990800004f040000990800004f040000980400009807d5
016a05c7008f04ab005504d5009d04ac005504d5022204d5010505abffe9
050001c905ab027e05abffe905ab027e05abffe905ab027e05abffe905ab
ffe905abffe905abffe905abffe905ab01c005ab027e05ab01c005ab01c0
05abffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905ab
ffe905abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905ab02d605ab0066
05abffea05d5ffff04d500920800000007eb013007eb012007eb013007eb
012004d500b204d5008004d5002a082b0198086b01b807550010060000f4
0600006f0440003a0540003704c0003f0415004004000025060000550647
008c0473009005abffc701eb008d03d500860715002303e9001804d50092
02d6005c02d6005c04d500b202d6004d05c700000473004905c700610473
005505c70061047300550556009504730041055600950473004105560095
047300410639006204e300540639006204e300540639006204e3005405c7
009604e3009205c7000504e300190239ffba0239ffbb0239ffda0239ffda
0239ffe10239ffe20239006e02390075047300230239ffa205c700990473
00890473008d04e3009d0239ffed05c7009804e3009105c9009c04e3008e
0639005904e300520639005904e3005205c70096031d002a0556004a0473
003004e3002c02aa000705c7009304e3008d05c7009304e3008d05c70093
04e3008d05c7009304e3008d078d0007063900090556fffd0473000e0239
008d05c70000047300490800ffaa071d00580639003f04e3005702aa00c9
078d000706390009078d000706390009078d0007063900090556fffd0473
000e0239009502aaffd70473000d04cd005a06ac005c06ac002906ac0030
06ac002f02aa00bc02aa002602aa00bb03b8fff405c7ffe806d3ffbb073f
ffbb03caffbb0699ffa6076bffc806b4ff9c0239ff2905c7000005c70096
05c000000556009504e3001605c700960239008c05c700990556000006aa
009105c70098052600660639005905c7009a0556009504cd005a04e3002c
0556fffd0556000006790056066a00620239ffcc0556ffff04eb004e039c
004e04e3008e0239008204a8006c04e200900473000f03af004e04e3008e
0453004e023900930476008e0473000f04e500900473000b0390004e04e3
005204f300760429004e04a80076049b00110607007606c2004e0239ffcd
04a8007604e3004e04a8007606c2004e055a00970715002f048900a405b1
00580556004a0239008c0235ffca0473002308c0001a0880009d07000037
04e2009a04fa000005c0009905c7000005c0009b05c70096048900a405b3
fffa05560095073b00170503002c05c0009905c0009904e2009a059d0020
06aa009105c700960639005905c000990556009505c7006104e3002c04fa
000006d400590556000005d8009a059f007d080a009a0827009a06f5001a
07d5009d05c0009b05b100570840009605c000040473004904f1005c04eb
0096035500880514fff90473004105acffff03fa001804eb008c04eb008c
040100880515001905eb009b04d5008804e3005204d5008804e3008b0473
005503eb00150473000e070000540473000c04eb008904a5007206ab008c
06c0008d05d5002806d5009504eb0099046b003806d5009104abfffb0473
004504e3000003550088046b005104730030023900930240ffd00239ffa2
07c000180740008c04e30000040100880473001204d5008803e500960393
00880800004108eb00a30620003002aa010102aa001e02aa003102aa0031
02aa010102aa007f02aa007e02aa008c02aa008c02aa010102aa001002aa
010102aa01210393007d02aa008c026500c802aa030202aaff0102aa00c9
04a90059049b004103a7000a0466003204ea0082022f0087034e005a04ed
00870503007d022f0087042c002803ed004b03f8004104e30087050a0037
022f00870316004b04e800500459000a04c0006404b2006403ff000a0418
000a04950082042c002805b8005a0563002d045e0087045e0087045e0087
0236005004090050068b0087022fffac042c0028042c002803f8ff1603f8
ff160479003205b8005a05b8005a05b8005a05b8005a04a9005904a90059
04a90059049b004103a2000a0466003204ea008202950000038100000503
007d02950000042c002803ed004b03f80041050a00370316004b04e80050
04c0006404b200640418000a04950082042c002805b8005a0563002d022f
0087049b004103ed004b04b2006404db00410000ffdc0000ff250000ffdc
0000fe51028d00ab028d00a002da004303c0007e0196ffba019c004601e5
0046019c0046019c004601ad0048019c004601b1004601510046047e0188
047e0150047e0104047e009e047e012d047e00ea047e00d5047e009c047e
00bc047e00ee04350085028d00c1043500b3060001000600010002be0058
06000100047e00a5047e00bd047e00de0600010006000100060001000600
01000600010001b100460600010006000100060001000600010006000100
06000100060001000600010004e6ffba0600010006000100060001000532
003905320039022cffba022cffba06000100060001000600010006000100
049e0034047800300430ffba0430ffba0376000a0376000a060e00290708
002902e2ffba0456ffba060e00290708002902e2ffba0456ffba05280097
046f000a0600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010001cf003001b1004601b1004601b1004001b100460600
0100060001000000ffdc0000fe510000ff160000ff160000ff160000ff16
0000ff160000ff160000ff160000ff160000ff160000ffdc0000ff160000
ffdc0000ff200000ffdc0473002d08000000060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
01000600010006000100028d007f028d00670600010005a0002e03c0007e
01e800000207ffc301bc005e01e0fffa039c0006039c000601bc005e01e0
001a05280097049e0011022cffba022cffba01bc008801e0001a05320039
05320039022cffba022cffba02be0036035200030532003905320039022c
ffba022cffba0532003c0532003c022cffba022cffba049e003404780030
0430ffba0430ffba049e0034047800300430ffba0430ffba049e00340478
00300430ffba0430ffba02be006902be006902be006902be00690376000a
0376000a0376000a0376000a073200400732004004deffba04deffba0732
00400732004004deffba04deffba0880004008800040062cffba062cffba
0880004008800040062cffba062cffba0430ffba0430ffba0430ffba0430
ffba0430ffba0430ffba0430ffba0430ffba0454003403c000460454ffba
02e2ffba0454003403c000460454ffba02e2ffba0610002f0610002f0270
ffba0298ffba04e6002704e600270270ffba0298ffba0454002904540029
02e2ffba02e2ffba039c0023039c002301e0ffba01e0ffba02e2002102e2
00210352ffba0352ffba0454003e0454003e022cffba022cffba02be0058
0352000303c0ffba039cffba039c0006039c000605280097046f000a0528
0097049e0011022cffba022cffba0454000004c4000003e400220454001a
03e400220454001a03e400220454001a0600010006000100019c0046019c
00460600010006000100060001000151004601b100460600010006000100
01ad004801e5004606000100060001000600010001b1004601b1004601b1
004601b1004601b1004001cf003006000100019c0046019c004606000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100028d00ca028d00c7028d00c606000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010002be00690100ffba0800ffba1000
ffbb06d3005905b0005206a3009305cb008d0000fd880000fbc10000fc5f
0000fe310000fcad0000fd550000fe260000fdf10000fd180000fc690000
fd950000fbe00000fc700000fed40000fecd0000fea0041b007806ac005c
06ac00190000fe450000fd550000fda60000fc5f0000fe250000fd180000
fbe00000fafa0000fb360000fc700000fb870000fb9b0000fcce0000fc54
0000fbc30000fc940000fbf50000fdb00000fe590000fd7e0000fc820000
fd340000fe500000fe460000fcd10000fd3e0000fd020000fc3a0000fce9
0000fc260000fc070000fc2f0000fb9e0000fb760239009305c700000473
004905c700000473004905c700000473004905c700000473004905c70000
0473004905c700000473004905c700000473004905c700000473004905c7
00000473004905c700000473004905c700000473004905c7000004730049
055600950473004105560095047300410556009504730041055600950473
004105560095047300410556009504730041055600950473004105560095
047300410239006a0239005d0239008c023900930639005904e300520639
005904e300520639005904e300520639005904e300520639005904e30052
0639005904e300520639005904e3005206d3005905b0005206d3005905b0
005206d3005905b0005206d3005905b0005206d3005905b0005205c70093
04e3008d05c7009304e3008d06a3009305cb008d06a3009305cb008d06a3
009305cb008d06a3009305cb008d06a3009305cb008d0556fffd0473000e
0556fffd0473000e0556fffd0473000e05c70000047300490239ffca0239
ffca0639005904e3005205c7009304e3008d05c7009304e3008d05c70093
04e3008d05c7009304e3008d05c7009304e3008d0000fef90000fef90000
fef40000feef0489fffd03550007073b001705acffff04e2009a04010088
04e2009a0401008805c7009604d500880473000104730012047300010473
0012055600000473000c059f007d04a50072059f009c04e3009205cf0059
0473004c0639005604e3005205320039022cffba0270ffba0298ffba04e6
0027022c0065022c0016022c0016022c0011022c0043022cffd20000fef0
01a8000f01a8fff502aa009002aa009001e8000001bc005e01bc005e0000
ffcb01bc000f01e0ffbf01bcfff501e0ffcd01bc001d01e0000901bc0088
01e0001a039c0006039c0006039c0006039c000605280097046f000a0532
003905320039022cffba022cffba0532003905320039022cffba022cffba
0532003905320039022cffba022cffba0532003905320039022cffba022c
ffba0532003905320039022cffba022cffba0532003905320039022cffba
022cffba0532003905320039022cffba022cffba049e0034047800300430
ffba0430ffba049e0034047800300430ffba0430ffba049e003404780030
0430ffba0430ffba049e0034047800300430ffba0430ffba049e00340478
00300430ffba0430ffba049e0034047800300430ffba0430ffba02be004f
02be004f02be006902be006902be006902be006902be004f02be004f02be
006602be006602be006902be006902be006902be006902be002f02be002f
02be002202be00220376000a0376000a0376000a0376000a0376000a0376
000a0376000a0376000a0376000a0376000a0376000a0376000a0376000a
0376000a0376000a0376000a073200400732004004deffba04deffba0732
00400732004004deffba04deffba073200400732004004deffba04deffba
0880004008800040062cffba062cffba0880004008800040062cffba062c
ffba0430ffba0430ffba0454003403c000460454ffba02e2ffba0610002f
0610002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298
ffba0610002f0610002f0270ffba0298ffba0610002f0610002f0270ffba
0298ffba0610002f0610002f0270ffba0298ffba04e6002704e6002704e6
002704e60027060e00290708002902e2ffba0456ffba060e002907080029
02e2ffba0456ffba045400290454002902e2ffba02e2ffba045400290454
002902e2ffba02e2ffba045400290454002902e2ffba02e2ffba060e0029
0708002902e2ffba0456ffba060e00290708002902e2ffba0456ffba060e
00290708002902e2ffba0456ffba060e00290708002902e2ffba0456ffba
060e00290708002902e2ffba0456ffba039c0023039c002301e0ffba01e0
ffba039c0023039c002301e0ffb101e0ffb1039c0023039c002301e0ffba
01e0ffba039c0023039c002301e0ffba01e0ffba0454003e0454003e022c
ffba022cffba0454003e0454003e0454003e0454003e0454003e0454003e
022cffba022cffba0454003e0454003e049e0034047800300430ffba0430
ffba02be005803520003031a001a031a001a031a001a039c0006039c0006
039c0006039c0006039c0006039c0006039c0006039c0006039c0006039c
0006039c0006039c0006039c0006039c0006039c0006039c000605280042
046fffd905280097046f000a022cffba022cffba039c0006039c00060528
0097046f000a022cffba022cffba05280097046f000a067f0044067f0045
067f0044067f004501a800280000fe290000fe8c0000ff250000ff230000
fefa0000ff7a0000fe5908fc003208ad00320000ffb50000ffb60000fef0
0000ff590000fe590000ff8c01b4000002f700000000fe850000ff0704cd
00320000ff580000ff580000ff59073200400732004004deffba04deffba
0880004008800040062cffba062cffba0454003403c000460454ffba02e2
ffba03c0007e02e2002102be0058022cffba0290ffba01f4002f01f4003b
01f4001201f400b101f4006d060e002907080029022f00870000fec80350
0000045e008703e4fff50454fff503e400220454001a03e400220454001a
03e400220454001a03e400220454001a03e400220454001a03e400220454
001a047e0072047e00bd03e4000f0454000f000000000000006c0000006c
0000006c0000006c0000011a000001ba0000038800000630000007960000
0948000009a800000a3200000abc00000bf000000c6c00000cdc00000d2a
00000d6800000dbe00000ec200000f44000010ea000012420000135c0000
14ce00001602000016be0000185c000019a2000019fc00001a8800001b12
00001b9400001c2200001d1000001ea40000201e00002186000022c00000
23aa00002468000025040000264a0000271e000027a60000284400002a0e
00002a6a00002cbe00002ebc00002fc4000030940000322e000033920000
35f20000368800003768000038a200003ae400003c6000003d5600003ee8
00003f5c00003fb000004018000040ca000040fe00004162000043700000
446c000045a800004698000048a4000049a400004b8000004c8000004d22
00004dfa00004f2600004f920000514600005230000053200000541c0000
551e000056020000594800005a6800005b5000005ca400005f0a000060e0
0000625e000063ec000065140000657a000066b20000677a000067bc0000
67fc000068380000687e000068c6000069160000695a00006994000069c4
000069f400006a3600006a7800006aaa00006aee00006b3a00006b840000
6bb400006bfa00006c3600006c7600006cb200006cea00006d3a00006d76
00006db200006de200006e2400006e7400006ebe00006ef600006f380000
6f6c00006fe40000706a000072160000738200007578000075c20000765c
000077aa0000799a00007b4e00007c6800007cca00007d2200007e020000
7f34000080ac000081d40000829a0000837000008430000085d400008690
0000877200008850000088b60000894a00008a0e00008b4a00008be20000
8d2200008fc40000914a00009250000092f00000934a0000942a000095d8
00009744000097ee000098e2000099c800009a3c00009a7400009aba0000
9af800009c7400009e8a00009ec400009efa00009fc20000a0960000a106
0000a1240000a1c60000a2a00000a2dc0000a3160000a37c0000a5140000
a5b20000a6440000a7a00000a8ca0000a9b40000a9f20000aa020000aa20
0000ac2a0000ac6c0000acba0000acf60000ad360000ad840000adc20000
ae000000ae3a0000ae7c0000aeb40000aee40000af1e0000af620000af92
0000afda0000b03c0000b0a80000b1560000b18a0000b1fa0000b2400000
b2f60000b3900000b4240000b49a0000b4f60000b5ca0000b6960000b6c6
0000b6f60000b75a0000b7b00000b8380000b9620000bada0000bb100000
bb400000bc480000bd1c0000bd580000beee0000bf6c0000c07a0000c1ae
0000c35a0000c4e80000c7300000c7e60000c82a0000c86a0000c89c0000
c8e00000c91c0000c9600000c99a0000c9cc0000c9fe0000cb2e0000cb64
0000cb9c0000cbe80000cc2a0000cc6c0000ccac0000cce20000ce200000
ce380000ce640000ce9c0000ceda0000cf0a0000cf3a0000cf780000d036
0000d0e80000d11c0000d1520000d18e0000d1cc0000d21a0000d24c0000
d27e0000d2ba0000d2f60000d3320000d36e0000d3a00000d3d00000d400
0000d5120000d6a00000d6de0000d8520000d8960000d8ce0000d9060000
d93c0000d98c0000d9ce0000da140000da660000dab20000dbc40000dcd0
0000ddb80000dea80000dfae0000e0980000e1080000e2320000e2820000
e2b20000e3ac0000e5e00000e6200000e6600000e6a00000e6de0000e73c
0000e79a0000e8080000e8280000e8c80000e9620000e9980000e9fc0000
ea460000ea900000eaac0000eac80000eae80000eb080000eb280000eb48
0000eb6e0000eb940000ebba0000ebe00000ec100000ec380000ec600000
ec8c0000ecb80000ecec0000ed160000ed420000ed780000eda20000edce
0000ee040000ee2e0000ee580000ee8c0000eebc0000eef00000ef340000
ef640000ef980000efda0000f00e0000f0400000f0820000f0b60000f0e6
0000f1280000f16c0000f1b20000f20e0000f22a0000f2460000f2620000
f27e0000f29a0000f4080000f6b20000f9220000f93e0000f9580000f974
0000f9900000f9ac0000f9c80000fa240000fa5e0000fac80000fb920000
fc320000fd080000fd880000fe100000fe800000ff160000ff740000ffba
000100180001007a000100ba000101160001017a000101ec0001022a0001
03bc000104cc000104f6000105120001053e00010576000105c2000105f2
000106220001065600010686000106b6000106e600010716000107460001
0776000107a6000107d600010806000108360001086600010896000108c6
00010a5000010bfe00010c2e00010c5e00010d4a00010e6200010e920001
0ec000010ef000010f1e00010f4e00010f7c000110580001113a00011174
00011254000112a40001130a0001145000011482000114a8000114d00001
150e000115e4000116dc0001170c0001173c0001176c0001179c000117cc
000117fa0001182a0001185a0001191c00011a3000011a6000011a900001
1ac000011af000011b2000011b5000011c5600011d6400011d9400011dc4
00011df400011e2400011ec400011f1600011fe400012014000120440001
2074000120a4000120d600012106000121360001216600012196000121ca
000121fe0001222e0001225e000122bc000122e60001246c000125540001
27080001295c00012b9400012d3200012d9200012e1800012e2800012eea
0001308e0001316200013238000132c4000133e8000134fc0001366e0001
36a4000136b4000136c40001379e000137ae000137be000137ce000137de
000137ee000138f40001390400013914000139be000139ce00013a200001
3a3000013b2400013b3400013b4400013b5400013c2600013d4000013d74
00013da800013dd800013e0800013e3800013e6600013e9a00013f840001
407a0001415a00014224000142e400014336000144680001457c00014640
000146500001475c0001476c0001483600014914000149dc00014afa0001
4bc600014cc400014cf600014d2a00014d5a00014d8a00014dba00014dee
00014ed000014f0000015024000150340001504400015078000150880001
518e0001527a0001534800015378000153a80001542800015438000154ee
000154fe00015556000155f400015604000157e60001590a00015a300001
5a6000015b8a00015c0200015c1200015c2200015c3200015c8600015c96
00015ca600015cb600015dae00015eac00015ebc00015f2800015fb60001
603e000160dc0001619a000162820001633c000164660001658c000166ca
000166da00016800000168ee0001694c00016a1c00016a2c00016c120001
6d5600016e3a00016e6a00016f800001700a000171c40001724a0001725a
000172c4000172d4000172e40001734e0001735e000174b2000174c20001
754c000175d80001766800017718000177d4000178d40001799200017a98
00017ba400017cd200017d0600017e4200017e7000017f8600017f960001
7fa600017fd800017fe8000180f4000181d8000182d60001831000018340
000183e00001843e000184ae000184ea0001868000018704000187960001
88e6000189a600018a9600018aec00018b7a00018c4800018c8c00018ce4
00018d4600018e4600018ea000018ee400018f1c00018f6000018fae0001
8ffa000190400001909c000191f200019294000193aa00019408000194a4
000194e20001959c00019612000197100001974a000197d4000198900001
9932000199b800019a8400019ac200019b4a00019c1800019cf600019dbe
00019ecc00019f820001a08e0001a1400001a1c80001a2c80001a3b00001
a4080001a4600001a4b40001a5020001a59a0001a6a60001a6ea0001a728
0001a7700001a7a60001a8100001a8f00001a9280001a9560001a98e0001
a9bc0001a9ee0001aa200001aa9a0001aaf00001ac4e0001acee0001ae0c
0001aebc0001af080001b05e0001b10e0001b1380001b1b40001b1fc0001
b3340001b4320001b4a00001b6220001b7e00001b9460001ba540001ba7e
0001bc0e0001bd4c0001bd780001bdac0001bdd80001be080001bf760001
bfa00001c0b00001c1620001c2120001c2a60001c3740001c4b00001c4c0
0001c4f40001c5b80001c7740001c8520001c8c00001c9ea0001ca4c0001
cb620001cc340001ccc00001cd3e0001ce1a0001cf5a0001d0540001d10a
0001d1f60001d2be0001d39c0001d46c0001d54a0001d5de0001d80a0001
d8340001d85e0001d86e0001d8980001d9d20001daf00001dc000001dc2a
0001dc540001dc7e0001dca80001dcd20001deba0001dee40001df0e0001
df380001df620001df8c0001dfb60001dfe00001e00a0001e03e0001e068
0001e0920001e0bc0001e2560001e2660001e39e0001e3ae0001e3d80001
e4020001e42c0001e4560001e5f00001e86a0001e9c80001e9d80001eb4a
0001eb5a0001ecb80001ee9c0001ef9e0001f1240001f2ee0001f5420001
f6b00001f8a40001f8b40001f8c40001f8ee0001f9180001f9420001f96c
0001f9960001f9c00001f9ea0001fa140001fa3e0001fa680001fa920001
fabc0001fae60001fb100001fb3a0001fb640001fe200002000800020196
000203da0002055600020580000205aa000205da0002060a0002065a0002
06aa000206ea0002075c000207b00002080e000208640002089a000208dc
000209220002096c0002099c000209d400020a0400020b6a00020eb00002
0eda00020f0400020f2e00020f5800020f8200020fac00020fd600021000
0002102a000210540002107e000210a8000210d2000210fc000211260002
11500002117a000211a4000211ce000211f8000212220002124c00021276
000212a0000212ca000212f40002131e00021348000213e0000214700002
149a000218220002192c00021aa400021c2a00021e0c00021fe0000221fe
0002220e000223b60002254e000227c000022a0000022b7800022b880002
2c3400022cde00022e1a00022e2a00022ef600022f06000230a800023290
000233fc0002340c00023514000235240002369e000236ae000237dc0002
37ec0002392800023adc00023bd400023be400023cd600023e3400023ee0
00023ef000024032000241e0000242d6000242e60002438a0002439a0002
4482000244920002455c0002456c00024682000246920002485800024868
000249d6000249e600024c5800024c6800024e7800024e88000250040002
5014000251460002515600025314000253240002549a000254aa00025618
000256280002563800025648000258080002581800025828000258380002
598800025ac000025bd800025cd200025e74000260060002616e000262bc
0002648200026492000265e4000267460002692c0002693c00026ac40002
6c6800026ea200026eb200026ec200026ed20002703c0002704c0002711e
0002712e00027266000272760002735c0002736c000274a6000274b60002
757000027580000276a60002780a0002797800027b2600027c5600027c66
00027de000027f2200028142000283140002842400028434000286b60002
88e200028bac00028e08000290c80002930a000294c8000296220002964c
000296760002968600029696000296c0000296ea00029714000297240002
97340002975e0002978800029798000297a8000297d2000297fc00029826
000298360002984600029856000298660002987600029886000298b00002
98c0000298d0000298fa000299240002994e00029978000299a2000299cc
000299f600029a2000029a4a00029a7400029a9e00029ac800029af20002
9b1c00029b4600029b7000029b9a00029bc400029bee00029c1800029c42
00029c6c00029c9600029cc000029cea00029d1400029d3e00029d680002
9d9200029dbc00029de600029e1000029e3a00029e6400029e8e00029eb8
00029ee200029f0c00029f3600029f6000029f8a00029fb400029fde0002
a0080002a0320002a05c0002a0860002a0b00002a0da0002a1040002a12e
0002a1580002a1820002a1ac0002a2540002a2980002a30e0002a3380002
a3620002a38c0002a3b60002a3e00002a40a0002a4340002a45e0002a488
0002a4b20002a4dc0002a5060002a5300002a55a0002a5840002a5ae0002
a5d80002a6020002a62c0002a6560002a6800002a6aa0002a6d40002a786
0002a7ba0002a7ee0002a8220002a9a60002ab260002ac920002ade00002
aea00002af620002afd40002b0a60002b1780002b1ea0002b2ae0002b3a0
0002b4640002b5560002b5fc0002b7080002b79a0002b8e20002ba200002
ba840002bbac0002bd7a0002bfc20002c02e0002c09a0002c1040002c170
0002c21e0002c2cc0002c3720002c4180002c4be0002c4ee0002c51e0002
c54e0002c5600002c5720002c5840002c5960002c5a80002c6180002c68a
0002c6ba0002c6cc0002c6de0002c6ee0002c6fe0002c7100002c7220002
c7340002c7460002c7580002c76a0002c8760002c91c0002ca280002cace
0002cb260002cb4c0002cb720002cb9c0002cbca0002cc140002cc700002
ccaa0002cd020002cd420002cd920002cdca0002ce200002ce620002cea2
0002cef40002cf660002cfb00002d01c0002d05c0002d0c80002d1080002
d1700002d1b20002d2060002d22c0002d2520002d27c0002d2ac0002d2dc
0002d30c0002d35a0002d3b60002d3f40002d44e0002d4960002d4ec0002
d5300002d5840002d5ca0002d60c0002d6320002d6680002d68e0002d6b4
0002d6da0002d7000002d72e0002d7580002d7a20002d7fe0002d8380002
d8900002d8d00002d9240002d95c0002d9ac0002d9ee0002da2e0002da68
0002daa40002dae00002db1c0002db4a0002db740002dbb20002dbe20002
dc080002dc2e0002dc540002dc7a0002dca40002dcce0002dd0e0002dd5a
0002dda00002ddd80002de020002de2c0002de5c0002de8c0002deb20002
ded80002df020002df2c0002df5e0002df900002dfc00002dff00002e020
0002e0500002e0800002e0ae0002e0de0002e10e0002e13e0002e16e0002
e1a20002e2020002e2360002e29a0002e2ce0002e32e0002e3620002e3c6
0002e46e0002e53e0002e6540002e7260002e7a00002e80e0002e9f00002
ebba0002ecda0002edec0002ef300002f0440002f0d40002f1540002f1e8
0002f26a0002f32a0002f3ca0002f4960002f57c0002f6340002f7000002
f77c0002f78c0002f85a0002f91a0002f9e40002fa980002fb8e0002fc04
0002fd2c0002fe460002ffce0003005000030140000302360003032e0003
03c0000305d200030762000307e80003096a000309d600030a4000030aae
00030c7000030e3800030ec800030f1400030f5200030f9400030fdc0003
10080003104e00031084000310c0000310fe0003113c000311c40003124c
0003128e000312c6000313000003133a000313620003138a000313ce0003
1412000314500003148e000314be000314ee000315140003153a0003157c
000315be000316040003164a000316a2000316fa00031756000317b20003
180e0003186a000318b8000319060003192e000319560003197c000319a2
000319e600031a2a00031a7600031ac200031b0c00031b5600031ba40003
1bf200031c3200031cd200031cf800031d1e00031d6800031dd800031e00
00031e2800031e6e00031eb400031f0a00031f6000031fae000320680003
2090000320b80003210c00032160000321a0000321e0000322060003222c
00032292000322f80003233a0003237c000323a2000323c80003241e0003
2474000324d00003252c00032580000325d40003262200032670000326ba
000327040003275e000327b80003280c00032860000328a2000328e40003
298200032a2000032a6a00032ab400032b0600032b5800032bbe00032c24
00032c7c00032cd400032d0000032d2c00032d5800032d8400032db00003
2ddc00032e0800032e3400032e5a00032e8000032eac00032ed800032f26
00032f7400032fc00003300c0003305c000330ac00033126000331880003
32000003324a000333dc00033410000334440003347a0003349e00033508
00033572000335f40003365c000336a4000336ec00033738000337a20003
37ca000337f2000338180003383e0003388e000338de00033972000339c4
00033a2200033a8000033ae600033b4c00033c5e00033da800033e8c0003
3fe400034050000340b60003411400034176000341fc00034282000342e6
0003434a000343b60003442200034478000344ce00034500000345320003
45580003457e000345ea00034650000346ae00034710000348220003492e
00034a3c00034b4000034b6600034b8e00034bb200034bd600034bfe0003
4c2600034c4c00034c7200034d9400034ed000034ffe0003512a000351e4
0003529e0003535e0003541e00035502000355e6000356e2000357de0003
58c2000359a600035a7c00035b5200035b9c00035be600035c0c00035c32
00035c8200035cd200035cf600035d1a00035df000035e0000035e540003
5ea800035f0600035f6400035fa400035fe40003602e00036078000360c8
000361180003616e000361c40003621600036254000362ce000363100003
6354000363e20003647000036622000366320003666c000366a6000366d6
000367060003673a0003676e000367a8000367e2000368360003688a0003
68ec0003694e00036afe00036c8600036cc200036cfa00036d4400036d8e
00036dd400036e1a00036e6a00037090000370b6000370dc000371300003
73da000374ac0003754800037596000375d400037606000377f400037ab0
00037b8200037ce600037e2000037ecc00038062000382b6000384f20003
854c000385920003866000038752000387700003881a0003894000038a1c
00038a2e00038b8e00038d1400038d3a00038df800038e1600038e3c0003
8e6200038e8800038eae00038ed400038efa00038f2000038f4600038f92
00038ff20003901a000390400003919e0003937a0003938a0003945a0003
956a000395c8000396e00003986e0003991400039a5a00039aac00039afe
00039b3600039b8200039bae00039bf400039c2000039c5c00039cb60003
9d0000039d4c00039dbc00039e8200039efe00039fbe0003a0360003a110
0003a1a00003a1da0003a2160003a38e0003a47e0003a4c80003a50e0001
0000068a00f2003c006f000600020010002f00550000064e106f00030002
0000005f047a000000030000000000fe00000000000300000001000a013e
0000000300000002000805de0000000300000003005805c0000000030000
0004001405d20000000300000005001805e8000000030000000600180618
000000030000000700c40630000000030000000800260780000000030000
0009008a0da8000000030000000a04c200fe000000030000000b00620e32
000000030000000c00660e94000000030000000d06b406f4000000030000
000e005c0efa0001000000000000007f0f56000100000000000100050ff5
0001000000000002000412450001000000000003002c1236000100000000
0004000a123f0001000000000005000c124a0001000000000006000c1262
00010000000000070062126e000100000000000800131316000100000000
00090045162a000100000000000a02610fd5000100000000000b0031166f
000100000000000c003316a0000100000000000d035a12d0000100000000
000e002e16d30003000104030002000e170d0003000104030004001a1701
0003000104050002000a172700030001040500040016171b000300010406
00020006173d00030001040600040012173100030001040700020008174f
0003000104070004001417430003000104080002000c1763000300010408
000400181757000300010409000000fe00000003000104090001000a013e
0003000104090002000805de0003000104090003005805c0000300010409
0004001405d20003000104090005001805e8000300010409000600180618
000300010409000700c40630000300010409000800260780000300010409
0009008a0da8000300010409000a04c200fe000300010409000b00620e32
000300010409000c00660e94000300010409000d06b406f4000300010409
000e005c0efa00030001040a0002000e177b00030001040a0004001a176f
00030001040b00020012179500030001040b0004001e178900030001040c
0002000817b300030001040c0004001417a700030001040e0002001017d1
00030001040e0004001c17c50003000104100002001217b3000300010410
0004001e17a70003000104130002000617ed0003000104130004001217e1
0003000104140002000e17ff0003000104140004001a17f3000300010415
00020014181900030001041500040020180d0003000104160002000e1839
0003000104160004001a182d000300010419000200141853000300010419
00040020184700030001041b0002000a187300030001041b000400161867
00030001041d00020006174f00030001041d00040012174300030001041f
0002000a188900030001041f00040016187d0003000104240002000c189f
00030001042400040018189300030001042a0002000818b700030001042a
0004001418ab00030001042d0002000a18cb00030001042d0004001618bf
00030001080a0002000e177b00030001080a0004001a176f000300010816
0002000e18390003000108160004001a182d000300010c0a0002000e177b
000300010c0a0004001a176f000300010c0c0002000817b3000300010c0c
0004001417a700540079007000650066006100630065002000a900200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e00200070006c0063002e00200044
006100740061002000a900200054006800650020004d006f006e006f0074
00790070006500200043006f00720070006f0072006100740069006f006e
00200070006c0063002f005400790070006500200053006f006c00750074
0069006f006e007300200049006e0063002e00200031003900390030002d
0031003900390032002e00200041006c006c002000520069006700680074
00730020005200650073006500720076006500640043006f006e00740065
006d0070006f0072006100720079002000730061006e0073002000730065
007200690066002000640065007300690067006e002c0020004100720069
0061006c00200063006f006e007400610069006e00730020006d006f0072
0065002000680075006d0061006e00690073007400200063006800610072
006100630074006500720069007300740069006300730020007400680061
006e0020006d0061006e00790020006f0066002000690074007300200070
00720065006400650063006500730073006f0072007300200061006e0064
002000610073002000730075006300680020006900730020006d006f0072
006500200069006e002000740075006e0065002000770069007400680020
0074006800650020006d006f006f00640020006f00660020007400680065
0020006c006100730074002000640065006300610064006500730020006f
006600200074006800650020007400770065006e00740069006500740068
002000630065006e0074007500720079002e002000200054006800650020
006f0076006500720061006c006c002000740072006500610074006d0065
006e00740020006f00660020006300750072007600650073002000690073
00200073006f006600740065007200200061006e0064002000660075006c
006c006500720020007400680061006e00200069006e0020006d006f0073
007400200069006e0064007500730074007200690061006c002000730074
0079006c0065002000730061006e00730020007300650072006900660020
00660061006300650073002e00200020005400650072006d0069006e0061
006c0020007300740072006f006b00650073002000610072006500200063
007500740020006f006e002000740068006500200064006900610067006f
006e0061006c002000770068006900630068002000680065006c00700073
00200074006f002000670069007600650020007400680065002000660061
00630065002000610020006c0065007300730020006d0065006300680061
006e006900630061006c00200061007000700065006100720061006e0063
0065002e002000200041007200690061006c00200069007300200061006e
002000650078007400720065006d0065006c007900200076006500720073
006100740069006c0065002000660061006d0069006c00790020006f0066
002000740079007000650066006100630065007300200077006800690063
0068002000630061006e0020006200650020007500730065006400200077
00690074006800200065007100750061006c002000730075006300630065
0073007300200066006f0072002000740065007800740020007300650074
00740069006e006700200069006e0020007200650070006f007200740073
002c002000700072006500730065006e0074006100740069006f006e0073
002c0020006d006100670061007a0069006e006500730020006500740063
002c00200061006e006400200066006f007200200064006900730070006c
00610079002000750073006500200069006e0020006e0065007700730070
00610070006500720073002c002000610064007600650072007400690073
0069006e006700200061006e0064002000700072006f006d006f00740069
006f006e0073002e004d006f006e006f0074007900700065003a00410072
00690061006c00200042006f006c0064003a00560065007200730069006f
006e00200033002e0030003000200028004d006900630072006f0073006f
0066007400290041007200690061006c002d0042006f006c0064004d0054
0041007200690061006c00ae002000540072006100640065006d00610072
006b0020006f006600200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e0020
0070006c0063002000720065006700690073007400650072006500640020
0069006e0020007400680065002000550053002000500061007400200026
00200054004d0020004f00660066002e00200061006e006400200065006c
0073006500770068006500720065002e004e004f00540049004600490043
004100540049004f004e0020004f00460020004c004900430045004e0053
0045002000410047005200450045004d0045004e0054000d000a000d000a
005400680069007300200074007900700065006600610063006500200069
00730020007400680065002000700072006f007000650072007400790020
006f00660020004d006f006e006f00740079007000650020005400790070
006f00670072006100700068007900200061006e00640020006900740073
002000750073006500200062007900200079006f00750020006900730020
0063006f0076006500720065006400200075006e00640065007200200074
006800650020007400650072006d00730020006f0066002000610020006c
006900630065006e00730065002000610067007200650065006d0065006e
0074002e00200059006f0075002000680061007600650020006f00620074
00610069006e006500640020007400680069007300200074007900700065
006600610063006500200073006f00660074007700610072006500200065
006900740068006500720020006400690072006500630074006c00790020
00660072006f006d0020004d006f006e006f00740079007000650020006f
007200200074006f00670065007400680065007200200077006900740068
00200073006f006600740077006100720065002000640069007300740072
0069006200750074006500640020006200790020006f006e00650020006f
00660020004d006f006e006f0074007900700065002700730020006c0069
00630065006e0073006500650073002e000d000a000d000a005400680069
007300200073006f00660074007700610072006500200069007300200061
002000760061006c007500610062006c0065002000610073007300650074
0020006f00660020004d006f006e006f0074007900700065002e00200055
006e006c00650073007300200079006f0075002000680061007600650020
0065006e0074006500720065006400200069006e0074006f002000610020
007300700065006300690066006900630020006c006900630065006e0073
0065002000610067007200650065006d0065006e00740020006700720061
006e00740069006e006700200079006f0075002000610064006400690074
0069006f006e0061006c0020007200690067006800740073002c00200079
006f0075007200200075007300650020006f006600200074006800690073
00200073006f0066007400770061007200650020006900730020006c0069
006d006900740065006400200074006f00200079006f0075007200200077
006f0072006b00730074006100740069006f006e00200066006f00720020
0079006f007500720020006f0077006e0020007000750062006c00690073
00680069006e00670020007500730065002e00200059006f00750020006d
006100790020006e006f007400200063006f007000790020006f00720020
006400690073007400720069006200750074006500200074006800690073
00200073006f006600740077006100720065002e000d000a000d000a0049
006600200079006f00750020006800610076006500200061006e00790020
007100750065007300740069006f006e00200063006f006e006300650072
006e0069006e006700200079006f00750072002000720069006700680074
007300200079006f0075002000730068006f0075006c0064002000720065
007600690065007700200074006800650020006c006900630065006e0073
0065002000610067007200650065006d0065006e007400200079006f0075
002000720065006300650069007600650064002000770069007400680020
00740068006500200073006f0066007400770061007200650020006f0072
00200063006f006e00740061006300740020004d006f006e006f00740079
0070006500200066006f00720020006100200063006f007000790020006f
006600200074006800650020006c006900630065006e0073006500200061
0067007200650065006d0065006e0074002e000d000a000d000a004d006f
006e006f0074007900700065002000630061006e00200062006500200063
006f006e007400610063007400650064002000610074003a000d000a000d
000a0055005300410020002d002000280038003400370029002000370031
0038002d0030003400300030000900090055004b0020002d002000300031
003100340034002000300031003700330037002000370036003500390035
0039000d000a0068007400740070003a002f002f007700770077002e006d
006f006e006f0074007900700065002e0063006f006d004d006f006e006f
007400790070006500200054007900700065002000440072006100770069
006e00670020004f006600660069006300650020002d00200052006f0062
0069006e0020004e006900630068006f006c00610073002c002000500061
0074007200690063006900610020005300610075006e0064006500720073
002000310039003800320068007400740070003a002f002f007700770077
002e006d006f006e006f0074007900700065002e0063006f006d002f0068
0074006d006c002f006d0074006e0061006d0065002f006d0073005f0061
007200690061006c002e00680074006d006c0068007400740070003a002f
002f007700770077002e006d006f006e006f0074007900700065002e0063
006f006d002f00680074006d006c002f006d0074006e0061006d0065002f
006d0073005f00770065006c0063006f006d0065002e00680074006d006c
0068007400740070003a002f002f007700770077002e006d006f006e006f
0074007900700065002e0063006f006d002f00680074006d006c002f0074
007900700065002f006c006900630065006e00730065002e00680074006d
006c547970656661636520a920546865204d6f6e6f7479706520436f7270
6f726174696f6e20706c632e204461746120a920546865204d6f6e6f7479
706520436f72706f726174696f6e20706c632f5479706520536f6c757469
6f6e7320496e632e20313939302d313939322e20416c6c20526967687473
205265736572766564436f6e74656d706f726172792073616e7320736572
69662064657369676e2c20417269616c20636f6e7461696e73206d6f7265
2068756d616e69737420636861726163746572697374696373207468616e
206d616e79206f6620697473207072656465636573736f727320616e6420
61732073756368206973206d6f726520696e2074756e6520776974682074
6865206d6f6f64206f6620746865206c6173742064656361646573206f66
20746865207477656e74696574682063656e747572792e2020546865206f
766572616c6c2074726561746d656e74206f662063757276657320697320
736f6674657220616e642066756c6c6572207468616e20696e206d6f7374
20696e647573747269616c207374796c652073616e732073657269662066
616365732e20205465726d696e616c207374726f6b657320617265206375
74206f6e2074686520646961676f6e616c2077686963682068656c707320
746f20676976652074686520666163652061206c657373206d656368616e
6963616c20617070656172616e63652e2020417269616c20697320616e20
65787472656d656c7920766572736174696c652066616d696c79206f6620
7479706566616365732077686963682063616e2062652075736564207769
746820657175616c207375636365737320666f7220746578742073657474
696e6720696e207265706f7274732c2070726573656e746174696f6e732c
206d6167617a696e6573206574632c20616e6420666f7220646973706c61
792075736520696e206e6577737061706572732c20616476657274697369
6e6720616e642070726f6d6f74696f6e732e4d6f6e6f747970653a417269
616c20426f6c643a56657273696f6e20332e303020284d6963726f736f66
7429417269616c2d426f6c644d54417269616ca82054726164656d61726b
206f6620546865204d6f6e6f7479706520436f72706f726174696f6e2070
6c63207265676973746572656420696e2074686520555320506174202620
544d204f66662e20616e6420656c736577686572652e4e4f544946494341
54494f4e204f46204c4943454e53452041475245454d454e540d0a0d0a54
686973207479706566616365206973207468652070726f7065727479206f
66204d6f6e6f74797065205479706f67726170687920616e642069747320
75736520627920796f7520697320636f766572656420756e646572207468
65207465726d73206f662061206c6963656e73652061677265656d656e74
2e20596f752068617665206f627461696e65642074686973207479706566
61636520736f66747761726520656974686572206469726563746c792066
726f6d204d6f6e6f74797065206f7220746f676574686572207769746820
736f667477617265206469737472696275746564206279206f6e65206f66
204d6f6e6f747970652773206c6963656e736565732e0d0a0d0a54686973
20736f66747761726520697320612076616c7561626c6520617373657420
6f66204d6f6e6f747970652e20556e6c65737320796f7520686176652065
6e746572656420696e746f2061207370656369666963206c6963656e7365
2061677265656d656e74206772616e74696e6720796f7520616464697469
6f6e616c207269676874732c20796f757220757365206f66207468697320
736f667477617265206973206c696d6974656420746f20796f757220776f
726b73746174696f6e20666f7220796f7572206f776e207075626c697368
696e67207573652e20596f75206d6179206e6f7420636f7079206f722064
697374726962757465207468697320736f6674776172652e0d0a0d0a4966
20796f75206861766520616e79207175657374696f6e20636f6e6365726e
696e6720796f75722072696768747320796f752073686f756c6420726576
69657720746865206c6963656e73652061677265656d656e7420796f7520
726563656976656420776974682074686520736f667477617265206f7220
636f6e74616374204d6f6e6f7479706520666f72206120636f7079206f66
20746865206c6963656e73652061677265656d656e742e0d0a0d0a4d6f6e
6f747970652063616e20626520636f6e7461637465642061743a0d0a0d0a
555341202d202838343729203731382d303430300909554b202d20303131
3434203031373337203736353935390d0a687474703a2f2f7777772e6d6f
6e6f747970652e636f6d4d6f6e6f7479706520547970652044726177696e
67204f6666696365202d20526f62696e204e6963686f6c61732c20506174
7269636961205361756e646572732031393832687474703a2f2f7777772e
6d6f6e6f747970652e636f6d2f68746d6c2f6d746e616d652f6d735f6172
69616c2e68746d6c687474703a2f2f7777772e6d6f6e6f747970652e636f
6d2f68746d6c2f6d746e616d652f6d735f77656c636f6d652e68746d6c68
7474703a2f2f7777772e6d6f6e6f747970652e636f6d2f68746d6c2f7479
70652f6c6963656e73652e68746d6c0041007200690061006c0020004e00
65006700720065007400610041007200690061006c002000740075010d00
6e00e90041007200690061006c0020006600650064004100720069006100
6c002000460065007400740041007200690061006c0020038803bd03c403
bf03bd03b10041007200690061006c0020004e0065006700720069007400
610041007200690061006c0020004c0069006800610076006f0069007400
750041007200690061006c00200047007200610073007300650074007400
6f0041007200690061006c0020004600e9006c006b00f6007600e9007200
41007200690061006c00200056006500740041007200690061006c002000
480061006c00760066006500740041007200690061006c00200050006f00
670072007500620069006f006e00790041007200690061006c0020004e00
650067007200690074006f0041007200690061006c0020041f043e043b04
43043604380440043d044b04390041007200690061006c00200054007501
0d006e00e90041007200690061006c0020004b0061006c0131006e004100
7200690061006c0020004b007200650070006b006f004100720069006100
6c0020011100e20323006d0041007200690061006c0020004c006f006400
69006100be0054039a000f0101001fffc00398b310143240b80399b30f13
32404110039500500395000200b0034d00c0034d0002006f0391007f0391
0002ffc0034bb22d3132b9ffc0034bb30a0e32104110038b0020038b0080
038b000300a0038b00010020038b0040038b0002ffc0038bb313163240b8
0383b20f1132b9ffc0037bb2303432b9ffc0037bb3101832504114037800
010365036e0023001f037e036e001e001f0363036e001d001f0362036400
0d001fffc00340b30f1032804110033f0001033f03150029001f03410316
0032001f0344031a001b001fffc00375b20e1132b9ffc00375b2282a3241
0a034303180032001f030f030d0034001f03080307b2321f20bb03400001
00400388b3090b3240b80388b2101532bd038503070014001f03800307b2
171f0fbd030a002f030a0002ffc00354b3090d3290410c035400a0035400
02001f036e0001009f036e00010040036eb2090b32410a0345031c001600
1f036b031d0015001f0346031eb2151fc0bb0393000100400392b3090d32
40b8033eb2083340b8033eb30d0e32c04109033e000100b0038e00c0038e
0002ffc00390b326383200412603280030032800020020037f0030037f00
020010038a0030038a0050038a006f038a007f038a009f038a0006000003
89003003890002002f037a0070037700900377009f037a0004ffc00315b2
0f1032b9ffc00315b2242832b903190318b2321f10bb031a0001ffc0031a
b3090e3240b80318b2121332b9ffc00318b30c0e323fbd0373004f037300
0200400374b31718326fbb032a00010040032cb3181b3240b80370b2090c
32bd031703160032001fffc00316b20e1132bd031c031e0016001f031d03
1eb2151fb0411f031e0001000f031f000102ca02d00015001f02d302d500
0d001f02cf02d0000d001f02cb02d0000d001f02cd02d0000d001f02ce02
d0000d001fffc002d0b3090c3240b802d2b3090c32e0411c02e50001005f
02dd009f02e5000202bb02c30030001f02da02b80032001f02d902b9003f
001f02d802b80064001f02b902b80033001f02bab221c81fb802b8b321c8
1f40b8039bb20d1632b9ffc002c3b22b2f32b9ffc002c3b21f2532b9ffc0
02c3b2171b32b9ffc002c3b2121632412502c202c1001c001f02d702c100
24001f02c102c00022001f02bf02c00018001f02c0027400c8001f02b502
35003b001f02b40235003b001f02c402bc001e001f02b702b60038001f02
b3b20ec81fb802b0b207c81fb802afb206c81fb802aeb200c81fb802afb2
502f1fbc02ae02ab001a001f02adb2261a1fb802a8b326241f0fbb023500
0102a50274b21d1f12410a02a1015801f4001f02a000d801f4001f001202
a2b237c81fb80290b2bc201fb9029002904018374025402d40a603302530
2d30a6032025202d203720a6204110028e0005009f028b0001028b028b00
3700200289003002890040028900900289b20437b041fd027400c0027400
020080027400a00274000200600274007002740002000002740010027400
020080027400f002740002003f0285004f028500020090027e0090027f00
9002800090028100040090027a0090027b0090027c0090027d0004009002
74009002750090027700030070027e0070027f0070028000700281000400
70027a0070027b0070027c0070027d000400700274007002750070027700
030060027e0060027f006002800060028100040060027a0060027b006002
7c0060027d000400600274006002750060027700030050027e0050027f00
5002800050028100040050027a0050027b0050027c0050027d0004005002
74005002750050027700030040027e0040027f0040028000400281000400
40027a0040027b0040027c0040027d000400400274004002750040027700
030030027e0030027f003002800030028100040030027a0030027b003002
7c0030027d000400300274003002750030027700030020027e0020027f00
2002800020028100040020027a0020027b0020027c0020027d0004002002
74002002750020027700030010027e0010027f0010028000100281000400
10027a0010027b0010027c0010027d000400100274001002750010027700
0300e0027e00e0027f00e0028000e00281000400e0027a00e0027b00e002
7c00e0027d000400e0027400e0027500e00277b103d041c5027e00d0027f
00d0028000d00281000400d0027a00d0027b00d0027c00d0027d000400d0
027400d0027500d0027700030030027400400274000200c0027e00c0027f
00c0028000c00281000400c0027a00c0027b00c0027c00c0027d000400c0
027400c0027500c00277000300b0027e00b0027f00b0028000b002810004
00b0027a00b0027b00b0027c00b0027d000400b0027400b0027500b00277
000300a0027e00a0027f00a0028000a00281000400a0027a00a0027b00a0
027c00a0027d000400a0027400a0027500a0027700030090027e0090027f
009002800090028100040090027a0090027b0090027c0090027d00040090
0274009002750090027700030020027e0020027f00200280002002810004
0020027a0020027b0020027c0020027d0004002002740020027500200277
0003028101580801001f028001290801001f027f00ec0801001f027e00d8
0801001f027d00b10801001f027c00a60801001f027b00820801001f027a
00370801001f027700260801001f027500200801001f0274001f0801b21f
370f41160235004f0235005f0235006f0235009f023500af023500bf0235
000700af023500cf023500df023500ff02354022040f074f079f07af07bf
0705af07e007020f064f069f06af06bf0605af06e0060220411b020d0001
005f02350001008f02350001007f023500ef02350002002f0235003f0235
0002003f0234004f0234000202350235023402344011ed20ef2a01cf2a01
bf2a01af2a018f2a01410902470104001e001f022000370201001f015840
0c263e1fd8263e1f3726273e1fb8028eb6ec171fb226361fb801bcb22636
1fb80129402b26361fec26361fb126361fa626361f8226361f3726361f32
26361f2d26361f2526361f1f26361f37262a1fb801584022263e1fd8263e
1fbc263e1f27263e1f21263e1f20263e1f3700161600000012110840b902
0d01a6b3c50d0009b801bcb227281fb801bbb227301fb801b8b2274f1fb8
01b7b227621f410901b600270101001f01b5002002ab001f01afb21fe41f
b801adb21fe41fb801acb21fbb1fb801a8b21f341fb8015db2272e1fb801
5bb227cd1f410d0155001f0401001f0154001f0401001f0153001f020100
1f0152b21f561fb80151b21f291fb8012bb227261f410d012a0027012500
1f0129015800e4001f0125001f0401001f0124b21fe41fb80123b21f3b1f
b80122b21f391f410d010800270801001f0106002d0101001f0105001f01
01001f0103b31fbb1fefb901580401400b1fed1f931fec1fe41feb1fb802
01b21fd920b80401b21fcf25b80156400a1fbc2d9e1fbb1f411fb2410a01
580401001f00b101580401001f00b001580401b51fa625891f9bb9015801
25b61f991f2e1f8e2db80801b51f8d1f291f89b901580401b21f8220b802
ab40131f801f301f742de41f731f4a1f611f521f5d25b802abb21f5c1fbc
0801001f0059015802abb61f5025891f491fb80125b21f4725b80401400b
1f461f791f401f271f3920bc02ab001f003801580401b21f372dbc012500
1f003201580125b61f2c1f341f2a25b80801b21f5537b80111402a07f007
90075b0742073b07230722071e071d071408120810080e080c080a080808
060804080208000814b8ffe0402b00000100140610000001000604000001
000410000001001002000001000200000001000002010802004a00b01303
4b024b5342014bb0c063004b6220b0f65323b8010a515ab005234201b012
4b004b5442b0382b4bb807ff52b0372b4bb007505b58b101018e59b0382b
b00288b801005458b801ffb101018e851bb0124358b10100858d1bb90001
0119858d5959001816763f183f123e113946443e113946443e113946443e
113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b
2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d59b0324b5358b0ff1d594b
b08153205c58b9020f020d4544b9020e020d45445958b90470020f455258
b9020f04704459594bb0e453205c58b90020020e4544b90027020e454459
58b908420020455258b9002008424459594bb8012553205c58b90026020f
4544b90021020f45445958b90a0d0026455258b900260a0d4459594bb804
0153205c58b1d8204544b1202045445958b9250000d8455258b900d82500
4459594bb8040153205c58b9015800264544b1262645445958b923200158
455258b9015823204459594bb02953205c58b11f1f4544b12d1f45445958
b9010d001f455258b9001f010d4459594bb02f53205c58b11f1f4544b125
1f45445958b90135001f455258b9001f01354459594bb8030153205c58b1
1f1f4544b11f1f45445958b91428001f455258b9001f14284459592b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b65422b01b331757ec3456523456023456560234560b08b766818b08062
2020b17e754565234520b003266062636820b003266165b075236544b07e
234420b131c34565234520b003266062636820b003266165b0c3236544b0
312344b100c3455458b1c3406544b23140314523614459b33f3c58414565
23456023456560234560b089766818b080622020b1583c4565234520b003
266062636820b003266165b03c236544b058234420b13f414565234520b0
03266062636820b003266165b041236544b03f2344b10041455458b14140
6544b23f403f452361445945695342014b5058b108004259435c58b10800
4259b3020b0a124358601b2159421610703eb0124358b93b21187e1bba04
0001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400
000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b
59b0102342b0112342002b2b2b2b2b2b2b2b00b01243584bb035514bb021
535a58b1262645b040614459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b737373737345b0406144180045694445694473737374737373747374
73742b2b2b2b2b2b2b2b2b2b2b2b00737373737373737373737373737373
737373737373737474747474747474747474747474747474747474747575
757374757575752b7300004bb02a534bb036515a58b1070745b040604459
004bb02e534bb036515a58b1030345b0406044b1090945b8ffc06044592b
4569440174007373732b4569442b012b435c58400a0006000702a006a007
02b9ffc00274b31a1d326fbd0277007f02770002ffc00277b22f3132b9ff
c00277b322253240b80274b32f353240b80274b3282a3240b80274b21a21
32b8ffc0b3371a1d32b8ffc0b3251a1d32b8ffc040112d1a1d329025902d
9037a025a02da03706b8ffc0b6a61a1d321fa61fb8028eb22fa60300742b
732b2b2b2b2b2b2b2b742b737459002b2b435c58b9ffc002a1b21c1d32b9
ffc002a0b21c1d322b2b592b73012b2b2b2b002b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b012b2b2b2b2b2b2b73742b2b2b2b2b2b2b2b73732b2b2b
2b2b2b732b732b2b2b742b2b2b73737373732b73732b2b2b73002b2b2b2b
7374732b732b2b2b2b752b2b2b2b2b2b2b2b752b2b2b2b2b732b2b2b2b73
74752b2b7373732b2b2b2b0000>
[16305 16261 15909 16305 15949 16197 16317 16321 16149 15449 16101 15749 16289
16297 13279 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> Arial-BoldMT AddT42Char 
1 2472 11 <0001006bfe51026805d300100046400e280fa70302080901000910001208
bd012200090001012200000294400a09f30c9b200430040204b80296b311
a56b182b10f65dedfdf4ed10ed003f3f103c103c3130015d012326023510
13363733020215141217160265c199a0635684c089673d3523fe51e701f2
e901210102e0bdfed1fe57eea4fea89b6600>Arial-BoldMT AddT42Char 
1 2610 12 <00010043fe51024005d30010004940182702270a6702670a9702a702a80e
07090810000810001210bd012200000009012200000294b408f3059b0cb8
0296b3126a43182b10f6edfde4ed10ed003f3f103c103c3130015d133e03
3534020333161215140702034553443a1c6689bf97a7424bacfe51b2bef8
df75ee01a9012fd7fe1ef8d1effef4fefb00>Arial-BoldMT AddT42Char 
1 3518 19 <00020056ffe7040e05c0000e00200093404b780a880aa701aa07aa09a70e
b709c8090856115916591a561f67116816681a671f08390239063609360d
490249064509460da709cb02c906c409c40dd902db06d409d40d11101820
180218b8ffc0402512163418a6080d1f0f2f0f020f401216340fa600051d
d84f0401041a2214d80b1921d3c2182b4e10f44ded4e10f6714ded003fed
2b713fed2b713130015d005d5d0132171611100706232200111037361722
060706111016163332363736111026260232d5788f9077d5d6fefa9077d5
3350161d344f333350161d344f05c098b4fe5ffe60b696014901a6019eb6
96e941546dfefefefec14041546c01020102c141>Arial-BoldMT AddT42Char 
1 3778 20 <000100a20000032605c00009005640096b027b028b02030204b80129b35f
050105b8025eb708090501000c0900bb015800020001025d400d0500041f
042004b0040404190aba01a701a000182b4e10f45d3c4df63cfd3c003f3c
3f3cf45ded393130005d212111060735362437330326fee79ad16e010230
e404239045ff24c98600>Arial-BoldMT AddT42Char 
1 9130 40 <00010095000004f005ba000b0090403d08050407082506121f05013005af
05020505090304250201020a09250b000807064b0302480a000b010b1a20
0d300d400d030d04092001200030000200b8028bb30c3153182b4e10f45d
3c4dfd3c4e105df65d3c4df43cf43c003f3cfd3c3f3cfd3c11392f5d7143
5c58b90005ffc0b21d3905b8ff80b21a3905b8ff80b113392b2b2b593cfd
3c0305103c3c313033112115211121152111211595043ffce902e0fd2003
3305baf8febbf7fe71f7>Arial-BoldMT AddT42Char 
2 1212 70 <00010055ffe8043f043e001900e14051580f59125916680f691269167d18
79199702970cc610c618d710d618e906e908e913e915f80613381338154a
124a164618590c690c073a1237163718037705770f8705860f8919a812a7
16b912b616090eb8ffc0b3181b340eb8ffc0b51214340e330db8ffc0b319
1e340db8ffc0b30f11340dba0104000a02744012110b0040181b34004012
1434003390010101ba0101000402744020170701401214340121002f0d40
1214340d214f0e010e1a1b072114191a5841182b4e10f44ded4e10f65d4d
ed2bf4ed2b003ffdf45de42b2b3ffdf42b2be42b2b3130005d7101715d01
052626232206151416333236370506062322001110003332160431feeb0e
634f697d7f6b50661501142bf4cde9feeb0116edc2e502ec32535491aabd
9c5b6f2fbec20126010401070125a700>Arial-BoldMT AddT42Char 
2 1528 71 <00020054ffe8046105ba000f001c0090402d125906590a59125616561859
1c98079909f80909701e801e023a03340c3a1534194a03440c4a15441999
090914b80274b2050b1ab80274400e0b070e0f0001000a17290e0d2601b8
0129400f0f001a8f1e011e102108191d583c182b4e10f44ded4e1071f63c
4dedfd3ce6003f3c3f3c3fed3fed3130005d01715d4358400d6906690a69
1266166618691c065d592121350606232200111012333217112101141716
3332363534262322060461fefb41b15ab7fefbfec2b2820119fd122f447a
6188846764879c5b5901270108010e0119940210fc70aa4c6ea5a4b7a19f
>Arial-BoldMT AddT42Char 
2 1768 72 <00020041ffe80427043e0014001c01a3b90010fff840460b3999099a0d96
10a805a70abb09bb0db81a0808140148024706460a4f1ea80db606b61ac7
0ac80cd60ad80cf807f70d0d1c0f1c15401b1d3415400e11340f15bf15cf
150315b8ffc0b30f1e3f15b8ffc0b30e173f15b8028d400c0f0e12500e60
0e020e181201b8ffc0b6191b3401331200b8ffc0b31d203400b8ffc0b322
293400b8ffc0b32b2d3400b8ffc0b3181c3400b8ffc0400f0e0f34a00001
0000100002005f1212b80274b3040b1218b8027440240b070021012f1521
4f0e010e1a2f1e5f1e6f1e9f1e041e0f2108400d0f3408191d6941182b4e
10f42b4ded4e105df65d4dedf4ed003fed435c584014184028143f18401e
0f3f18401b103f18401c113f2b2b2b2b593ffd435c58b90012ffc0b32814
3f12b8ffc0b31e0f3f12b8ffc0b31b103f12b8ffc0b21c113f2b2b2b2b59
f45d712b2b2b2b2b435c58b90000ffc0b2123900b8ffc0b2173900b8ffb0
b3090a3e00b8ffc0b241213f2b002b2b2b59e42b1112395d435c5840140e
400f1e3f0e401c113f0e401b103f0e400e173f002b2b2b2b592f3cfd2b2b
722b2b3c0111333130015d71005d2b010506062320272635100033320003
211616333236132626232207061702fa011836e9affeeb85690114d3ed01
1206fd40038261425a270378565c3c3c0101522f9aa1b591dd0108012bfe
c7febd7d8b48016c7a7f43437300>Arial-BoldMT AddT42Char 
2 2292 73 <00010018000002e605d3001600b840323604012a04201020115904801805
0804bf180215161102141216110e130f00100e13010010021409080f0b01
5f0bff0b020bb80274400a0601110f1601ff160116b80274401e10000001
f00001000613140a09333f084f085008030828102f115f110211b8010440
0d0e132602145f00a016c0160216b8ffc0b6090c3416191778b902690018
2b4e10f42b713c4dfc3cfd3cfc5d3cf45d19e400183f3c3f5d713cfd5d71
3c3ffd5d7139320f0f0f0f313001715d005d133335343636333217072623
2206151533152311211123189c399975787326433e3d35d2d2fee79c0426
5086845324c41039514bddfcb7034900>Arial-BoldMT AddT42Char 
2 2548 74 <00020054fe510460043e0023002f014e4062771d871d02120c0d7031860d
8031042001230223033001330233034001430243035b0f59145925562956
2b592f6b0ff811f813123b0d33163b28332c4b0d44164b28442cf00cfd17
0a8e0c010c0b0c0d0b2a0c0d270e1617152d0d0c171604182401b8ffc0b5
191b34013300b8ffc0b30e113e00b8ffc0b30b0c3e00b8ffc0b3282a3400
b8ffc0b323253400b8ffc0b331343400b8ffc04009151b34600001005f05
b80274b21f0f27b80274b20e0a2db80274400b15071819062a290b261a18
b80129400919191a1a8f31013101b801b8400a00332421121930583c182b
4e10f44dedf4ed4e1071f63c4d10ed10fde4003f3c3fed3fed3ffdf4722b
2b2b2b2b2bb10602435458b90000ffc0b30e113400b8ffc0b2090c342b2b
59e42b01111217390011123939111239390708103c313000715d015d7143
58400d690f691469256729662b692f065d59005d17051617163332373637
3635350623222726351000333217352111140e0223202635341314163332
36353426232206790141081d28566e3725130d7ec0d67d620101bfc58001
073e70bb8ffef2e2fc8360678e88686583462738151e211631235e9bacb5
8fd5010b011aad95fc47bcba6a3cb98e0e0283a99da19ea5a09d>Arial-BoldMT AddT42Char 
2 3280 76 <00020093000001ac05ba000300070077b90009ffc0403f110a3f40095009
028009b009c009d009ef09051f0960097f09a009b0090503060700050403
0f00014000d000e00003005d02010006050607040a0207260104b8ffc040
092124340419083f3c182b4e10f42b3c4dfd3c003f3c3f3c3f3cfd5d713c
0305103c3c103c3c313001715d722b1311211101112111930119fee70119
04b60104fefcfb4a0426fbda>Arial-BoldMT AddT42Char 
2 3958 79 <00010093000001ac05ba00030053b90005ffc04029110a3f400550050280
05b005c005d005ef05051f0560057f05a005b0050502010003000a020326
0100b8ffc040092124340019043f3c182b4e10f42b3c4dfd3c003f3c3f3c
313001715d722b3311211193011905bafa46>Arial-BoldMT AddT42Char 
2 4066 80 <0001007e00000698043e0027013bb90029ffc0405d110a3f0506060c1506
160c340334083418342344024508451844230c20032f295309602980299f
29a406a707a60cb506b50cb029d029e0290e00292f2950299f29bf29df29
0629401a1c343f2950298029d029e02905072104071a1d16b80274b20a07
21b80274401e0407101111271b1c1c26270a0100060f10261211405a3560
11016f110111b80246400f1a1b261d1c405a356f1c01601c011cb80246b4
2526262701b80129b2000027b8ffc0b30f093f27b8ffc04036110a3f2740
5a352740413527403c35274024273427403a3d342f27cf27df27030f271f
27802703002720273027ff2704271928e33c182b4e10f45d71722b2b2b2b
2b2b2b3c4d10ed10fd3cf65d712b3cfd3cf6715d2b3cfd3c003f3c3f3c3c
103c103c103c3fed3fed0111123900111239313001722b715d005d012b13
211536333216173636333216171615112111342726232206061511211134
2626232206061511217e01038bc066963046a25c75a2281dfee71d27513b
682efee71e3f3641682dfee7042691a9545555545f5c4498fd59025f9e2e
3c488b96fe0202469b5a2c468499fdfc>Arial-BoldMT AddT42Char 
2 4502 81 <0001009100000459043e0016009f4018071317135a08680804b804013408
34104408440fe9100506b80274401d11070e0d060c0b0b01000a02012616
0040202434af0001ff0001001a18b8ffc040162224349018a018027018f0
1802ef1801180a0b260c0eb80129b20d0d0cb8ffc0400f202434a00c01f0
0c010c19173f3c182b4e10f471722b3c4d10ed10fd3c4e105d71722bf671
722b3c4dfd3c003f3c3c103c3f3c3fed3130005d01715d21211134262623
2206061511211121153633321e02150459fee724513949742bfee701058b
d35d9a4f1f021eac65385084b2fe1f04269cb44368847b00>Arial-BoldMT AddT42Char 
2 4736 82 <00020052ffe8049a043e000d001900974048e801e708f713f71504c702e8
05021219051909025910561356165918970298069808970cb809d502db05
dc09d50ce705e706e80d10a708cb02cc06c308c60c057508890684080311
b80274b20a0b17b80274401404071439071a601b701b021b0e2100191a58
41182b4e10f44ded4e1071f64ded003fed3fed313000715d015d71435840
09691066126616691804015d59005d015d13341236333200151400232224
26251416333236353426232206528afd9cf10134fec9ec92fef78a012096
6e6e95956e6e9602228c01068afec7eff1fec384ffa89ea8a8a09ca8a800
>Arial-BoldMT AddT42Char 
2 5486 85 <0001008700000337043e001000a84028970501090e01530566057505032f
12580e680e7012040a090f0c1f0c028f0cff0c023f0c4f0c020cb8027740
29070701000a0302060a28000910093009700904091a7f129f12025f127f
12af12d01204121000260103b80129400b02028001a001020119113fb901
1c00182b4e10f4713c4d10ed10fd3c4e105d71f65d194de400183f3c3f3c
3fed5d717239323130015d005d71004bb017534bb035515a58b10a323859
005d212111211536363332170726232206061101a0fee70105436b446059
57473d3b522f0426976b4435f52e41aafef1>Arial-BoldMT AddT42Char 
2 5714 86 <00010030ffe80410043e002a02c240c00611062308271711172398129814
9727952a09071446140212bb0db90ec721e523f80df62206290d550d650d
950b9712a722b90c07412340244426672264268712871486228324093726
4506460b4a0d4f0f462142220722242726370c352135223523352407060a
05110921180d270c22222223072422402c730c781479157629752a881584
2a9a15952ab422b4230d80018f178c18992aa92ab02c0617211640212334
16401c1f341f1601df16011633082150258f25022540181d34251a2cb8ff
c04017110a3f502c01302c012f2c012c1e213010011033012100b8ffc0b3
0f093f00b8ffc0b3110a3f00b8ffc04009090d3400192b78b8182b4e10fc
2b2b2b4dedf471ed4e105d71722bf62b714dedf471722b2bed00b1060243
54584035060101060116012622362146215401591764016917f6010a0117
02041a21220228130d0c02281a5f04010446280b501a011a4613073ffd5d
3ffd5d1112173911121739111217395d711bb90022ffcbb3282a3421b8ff
cbb3282a3422b8ffe0b31e243421b8ffe0b31f243422b8ffe0b3191a3421
b8ffe0401b191a346b0d0136224622980d9422c422d4220621220c0d0404
1a00b8ffc0b5191b34003301b8ffc0b3172d3f01b8ffb0b3090a3e01b8ff
c0b322253401b8ffc0401d1a1c3400013001400150010460018001f00103
00011001500160010401b8ffc0b313163401b80101404d0004015f04f004
020446280b1640191b3416331740172d3f1740090a3e174035373417402b
2e34174025293417401a1c340f171f175f176f170417551a402224340f1a
01501aff1a021a4613073ffd5d712bf45d2b2b2b2b2b2be42b3ffd5d71f4
2b5d71722b2b2b2be42b111217395d712b2b2b2b2b2b59313001715d0071
7171715d5d435c58b90024ffc940090b123f0f280b123f21b8ffecb60d39
0c140c3921b8ffecb20c3922b8ffeab10b39002b2b2b2b012b2b5900715d
132516163332373635342726272427263534363332161705262623220706
1514171604171615140623222630011a126e636d3725141549feac5b7eda
e5dad428fef7115f586f30201c2601c15958f4efd9fd012f2b5255281c2f
201514114b3e56998abc8e8b313e421f16231e151c664a4b8692d2b0>Arial-BoldMT AddT42Char 
2 6552 87 <0001001fffe80291059d001900cd402920002001230a290f3a0e4a0e590f
07191500180316150017121314011712021401180309070a070c18b80101
400f0017a017b017036017a017c0170317b80104b2150114b80274b30015
0607b80274400e0c0b092f0a2f00002f015f010201b80104402818032617
1255153f149f14af1403601480149014d014f01405001410142014301404
14191a78a0182b4e10f45d71724bb037534bb03b515a58b90014ffc03859
3c4dfc3cfd3cf45d3c10f419e400183fed3f3cfd3c10f45d71e411123911
330f0f0f0f3130015d011523111416163332371706232226262726351123
3533352511027ac00b271c274a18627c4c7a390b098181011a0426e0fe54
822b1c1bda2a335145319501cfe0d3a4fe89>Arial-BoldMT AddT42Char 
2 6840 88 <0001008dffe8045304260016009c401757116711960503090619063c023c
114b024b11e702070fb802744011040b16000a1514140a09061314261515
00b80129400e1640202434af1601ff1601161a18b8ffc040162224349018
a018027018f01802ef1801180a0b260908b8ffc0400f202434a00801f008
010819173f3c182b4e10f471722b3c4dfd3c4e105d71722bf671722b4ded
3c10fd3c003f3c3c103c3f3c3fed3130005d015d21350606232226263511
21111416163332363635112111034e3abd696baa4c01191f523f48722a01
199f55625eaa9602a0fe18e0653b4f75e401c0fbda00>Arial-BoldMT AddT42Char 
2 8026 91 <0001000c000004600426000b0198408b2807c804029807b901dc01d507f0
0d0508071a041806280637003808480159017c0175070a26012b0736013a
0746014a07980bf806f80709250426072a0a34043a0a43044e0ac304084c
0a5404590a64046d0a78017d0a94049607ba0ad504dc0afc0a0d03040707
090a160420042a0a33043f0a4604091504190a3a0a4e0a6b0aa704b704c9
0af6040907b8fff0b312183404b8ffd8b315173404b8ffe040150c113401
040a0704000201040a0704080009080303b8ffe0b6292d34ff030103b8ff
e0400f162434032602091402020905060b0bb8ffe0b6292d34f00b010bb8
ffe040171624340b260005140000050605050302060809090b0005b8026d
b2063309b8026d400b08654f0d9f0de00d030d03b8026db202330bb8026d
4012f0000100001000200030000400650cc4a0182b194e10f45d71184ded
f4ed194d105df6184dedf4ed002f3c3c103c3f3c3c103c87052e2b2b712b
877dc4872e182b2b712b877dc401111217390011121739b10602435458b5
0a2009213404b8ffe0b2092134002b2b593130002b2b2b5d717172015d71
71723301012113132101012103030c017ffe910157bcc6014afe980189fe
a7d8da02230203fedc0124fe09fdd10149feb700>Arial-BoldMT AddT42Char 
1 0 0 <00020100000005000500000300070042b40201fe0607b8023f4013000504
fe03000a0704fe010019080605fe0203bc0126000901b0011800182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>Arial-BoldMT AddT42Char 
Arial-BoldMT /CharStrings get begin
/space 3 def
/parenleft 11 def
/parenright 12 def
/zero 19 def
/one 20 def
/E 40 def
/c 70 def
/d 71 def
/e 72 def
/f 73 def
/g 74 def
/i 76 def
/l 79 def
/m 80 def
/n 81 def
/o 82 def
/r 85 def
/s 86 def
/t 87 def
/u 88 def
/x 91 def
end
Arial-BoldMT /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 69 /E put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
pop
end
%ADOEndSubsetFont
/EGZBZF+Arial-BoldMT /Arial-BoldMT findfont ct_VMDictPut
/EGZBZF+Arial-BoldMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 
19{/.notdef}rp /E 29{/.notdef}rp /c /d /e /f /g 
/.notdef /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp 
/r /s /t /u 2{/.notdef}rp /x 135{/.notdef}rp]
EGZBZF+Arial-BoldMT nf
EGZBZF+Arial-BoldMT*1 [0 -10.02 -10.02 0 0 0 ]msf
29.58 138.436 mo
(log10\(time\) \(millisecond\))
[-2.77954 -6.11615 -6.06201 -5.56509 -5.56512 -3.33057 -3.33057 -2.77954 -8.90186 -5.56509 -3.3306 -2.82162 
-3.33057 -8.90186 -2.77954 -2.77954 -2.77957 -2.77954 -5.51801 -5.56512 -5.56509 -6.11612 -6.06204 -6.12115 
0 ]ysh
EGZBZF+Arial-BoldMT*1 [12 0 0 -12 0 0 ]msf
102.54 18.4957 mo
(Execution time )
[8.00409 6.672 6.672 6.672 7.33191 3.99591 3.336 7.33191 7.33191 3.3024 3.99591 3.336 
10.6177 6.71761 0 ]xsh
191.22 18.4957 mo
(of clustering)
[7.33191 3.99591 3.3624 6.672 3.336 7.33191 6.672 3.99591 6.672 4.66809 3.336 7.33191 
0 ]xsh
190.32 67.5757 mo
213.42 67.5757 li
213.48 67.5757 213.54 67.6357 213.54 67.6957 cv
213.54 67.7557 213.48 67.8157 213.42 67.8157 cv
190.32 67.8157 li
190.26 67.8157 190.14 67.7557 190.14 67.6957 cv
190.14 67.6357 190.26 67.5757 190.32 67.5757 cv
.251957 .199069 .204257 3.0518e-5 cmyk
ef
.12 lw
1 lc
1 lj
10 ml
[] 0 dsh
false sadj
190.32 67.5757 mo
213.42 67.5757 li
213.48 67.5757 213.54 67.6357 213.54 67.6957 cv
213.54 67.7557 213.48 67.8157 213.42 67.8157 cv
190.32 67.8157 li
190.26 67.8157 190.14 67.7557 190.14 67.6957 cv
190.14 67.6357 190.26 67.5757 190.32 67.5757 cv
cp
@
204 67.5757 mo
204.06 67.6357 204.06 67.6357 204 67.6957 cv
204 67.9957 li
204 67.9957 204 67.9957 204 68.0557 cv
203.88 68.2957 li
203.88 68.3557 203.82 68.3557 203.82 68.3557 cv
203.7 68.6557 li
203.64 68.6557 203.64 68.6557 203.64 68.6557 cv
203.4 68.8957 li
203.4 68.9557 203.4 68.9557 203.34 68.9557 cv
203.04 69.1357 li
203.04 69.1357 203.04 69.1357 203.04 69.1957 cv
202.68 69.3157 li
202.68 69.3157 202.68 69.3157 202.62 69.3157 cv
202.32 69.4357 li
202.26 69.4357 202.2 69.4357 202.2 69.4357 cv
201.84 69.4357 li
201.78 69.4957 201.78 69.4957 201.78 69.4357 cv
201.36 69.4357 li
201.36 69.4357 201.36 69.4357 201.3 69.4357 cv
200.94 69.3157 li
200.94 69.3157 200.94 69.3157 200.88 69.3157 cv
200.58 69.1957 li
200.58 69.1357 200.52 69.1357 200.52 69.1357 cv
200.28 68.9557 li
200.22 68.9557 200.22 68.9557 200.22 68.8957 cv
199.98 68.7157 li
199.92 68.6557 199.92 68.6557 199.92 68.6557 cv
199.74 68.3557 li
199.74 68.3557 199.74 68.3557 199.74 68.2957 cv
199.62 68.0557 li
199.62 67.9957 199.62 67.9957 199.62 67.9957 cv
199.56 67.6957 li
199.56 67.6357 199.56 67.6357 199.56 67.5757 cv
199.62 67.3357 li
199.62 67.2757 199.62 67.2757 199.62 67.2157 cv
199.74 66.9757 li
199.74 66.9157 199.74 66.9157 199.74 66.9157 cv
199.92 66.6757 li
199.92 66.6157 199.92 66.6157 199.98 66.6157 cv
200.22 66.3757 li
200.22 66.3757 200.22 66.3757 200.22 66.3157 cv
200.52 66.1357 li
200.52 66.1357 200.58 66.1357 200.58 66.0757 cv
200.88 65.9557 li
200.94 65.9557 200.94 65.9557 200.94 65.9557 cv
201.3 65.8957 li
201.36 65.8357 201.36 65.8357 201.36 65.8357 cv
201.78 65.8357 li
201.78 65.8357 201.78 65.8357 201.84 65.8357 cv
202.2 65.8357 li
202.2 65.8357 202.26 65.8357 202.32 65.8957 cv
202.62 65.9557 li
202.68 65.9557 202.68 65.9557 202.68 65.9557 cv
203.04 66.0757 li
203.04 66.1357 203.04 66.1357 203.1 66.1357 cv
203.34 66.3157 li
203.4 66.3157 203.4 66.3757 203.4 66.3757 cv
203.64 66.6157 li
203.64 66.6157 203.64 66.6157 203.7 66.6757 cv
203.82 66.9157 li
203.82 66.9157 203.88 66.9157 203.88 66.9757 cv
204 67.2157 li
204 67.2757 204 67.2757 204 67.3357 cv
204 67.5757 li
cp
203.16 67.3957 mo
203.16 67.4557 li
203.04 67.1557 li
203.04 67.2157 li
202.92 66.9757 li
202.98 67.0357 li
202.74 66.7957 li
202.8 66.8557 li
202.5 66.6757 li
202.62 66.7357 li
202.32 66.6157 li
202.38 66.6157 li
202.02 66.5557 li
202.14 66.5557 li
201.78 66.4957 li
201.84 66.4957 li
201.48 66.5557 li
201.6 66.5557 li
201.24 66.6157 li
201.3 66.6157 li
201 66.7357 li
201.06 66.6757 li
200.82 66.8557 li
200.64 67.0357 li
200.7 66.9757 li
200.52 67.2157 li
200.52 67.1557 li
200.46 67.4557 li
200.46 67.3957 li
200.4 67.6957 li
200.4 67.5757 li
200.46 67.8757 li
200.46 67.8157 li
200.52 68.1157 li
200.52 68.0557 li
200.7 68.2957 li
200.64 68.2357 li
200.82 68.4757 li
200.82 68.4157 li
201.06 68.5957 li
201 68.5357 li
201.3 68.6557 li
201.24 68.6557 li
201.6 68.7757 li
201.48 68.7157 li
201.84 68.7757 li
201.78 68.7757 li
202.14 68.7157 li
202.02 68.7757 li
202.38 68.6557 li
202.32 68.6557 li
202.62 68.5357 li
202.5 68.5957 li
202.8 68.4157 li
202.74 68.4757 li
202.98 68.2357 li
202.92 68.2957 li
203.04 68.0557 li
203.04 68.1157 li
203.16 67.8157 li
203.16 67.8757 li
203.16 67.5757 li
203.16 67.6957 li
203.16 67.3957 li
.75021 .679683 .670222 .90164 cmyk
ef
204 67.5757 mo
204.06 67.6357 204.06 67.6357 204 67.6957 cv
204 67.9957 li
204 67.9957 204 67.9957 204 68.0557 cv
203.88 68.2957 li
203.88 68.3557 203.82 68.3557 203.82 68.3557 cv
203.7 68.6557 li
203.64 68.6557 203.64 68.6557 203.64 68.6557 cv
203.4 68.8957 li
203.4 68.9557 203.4 68.9557 203.34 68.9557 cv
203.04 69.1357 li
203.04 69.1357 203.04 69.1357 203.04 69.1957 cv
202.68 69.3157 li
202.68 69.3157 202.68 69.3157 202.62 69.3157 cv
202.32 69.4357 li
202.26 69.4357 202.2 69.4357 202.2 69.4357 cv
201.84 69.4357 li
201.78 69.4957 201.78 69.4957 201.78 69.4357 cv
201.36 69.4357 li
201.36 69.4357 201.36 69.4357 201.3 69.4357 cv
200.94 69.3157 li
200.94 69.3157 200.94 69.3157 200.88 69.3157 cv
200.58 69.1957 li
200.58 69.1357 200.52 69.1357 200.52 69.1357 cv
200.28 68.9557 li
200.22 68.9557 200.22 68.9557 200.22 68.8957 cv
199.98 68.7157 li
199.92 68.6557 199.92 68.6557 199.92 68.6557 cv
199.74 68.3557 li
199.74 68.3557 199.74 68.3557 199.74 68.2957 cv
199.62 68.0557 li
199.62 67.9957 199.62 67.9957 199.62 67.9957 cv
199.56 67.6957 li
199.56 67.6357 199.56 67.6357 199.56 67.5757 cv
199.62 67.3357 li
199.62 67.2757 199.62 67.2757 199.62 67.2157 cv
199.74 66.9757 li
199.74 66.9157 199.74 66.9157 199.74 66.9157 cv
199.92 66.6757 li
199.92 66.6157 199.92 66.6157 199.98 66.6157 cv
200.22 66.3757 li
200.22 66.3757 200.22 66.3757 200.22 66.3157 cv
200.52 66.1357 li
200.52 66.1357 200.58 66.1357 200.58 66.0757 cv
200.88 65.9557 li
200.94 65.9557 200.94 65.9557 200.94 65.9557 cv
201.3 65.8957 li
201.36 65.8357 201.36 65.8357 201.36 65.8357 cv
201.78 65.8357 li
201.78 65.8357 201.78 65.8357 201.84 65.8357 cv
202.2 65.8357 li
202.2 65.8357 202.26 65.8357 202.32 65.8957 cv
202.62 65.9557 li
202.68 65.9557 202.68 65.9557 202.68 65.9557 cv
203.04 66.0757 li
203.04 66.1357 203.04 66.1357 203.1 66.1357 cv
203.34 66.3157 li
203.4 66.3157 203.4 66.3757 203.4 66.3757 cv
203.64 66.6157 li
203.64 66.6157 203.64 66.6157 203.7 66.6757 cv
203.82 66.9157 li
203.82 66.9157 203.88 66.9157 203.88 66.9757 cv
204 67.2157 li
204 67.2757 204 67.2757 204 67.3357 cv
204 67.5757 li
cp
@
203.16 67.3957 mo
203.16 67.4557 li
203.04 67.1557 li
203.04 67.2157 li
202.92 66.9757 li
202.98 67.0357 li
202.74 66.7957 li
202.8 66.8557 li
202.5 66.6758 li
202.62 66.7357 li
202.32 66.6157 li
202.38 66.6157 li
202.02 66.5557 li
202.14 66.5557 li
201.78 66.4957 li
201.84 66.4957 li
201.48 66.5557 li
201.6 66.5557 li
201.24 66.6157 li
201.3 66.6157 li
201 66.7357 li
201.06 66.6758 li
200.82 66.8557 li
200.64 67.0357 li
200.7 66.9757 li
200.52 67.2157 li
200.52 67.1557 li
200.46 67.4557 li
200.46 67.3957 li
200.4 67.6957 li
200.4 67.5757 li
200.46 67.8757 li
200.46 67.8157 li
200.52 68.1157 li
200.52 68.0557 li
200.7 68.2957 li
200.64 68.2357 li
200.82 68.4757 li
200.82 68.4157 li
201.06 68.5957 li
201 68.5357 li
201.3 68.6557 li
201.24 68.6557 li
201.6 68.7757 li
201.48 68.7157 li
201.84 68.7757 li
201.78 68.7757 li
202.14 68.7157 li
202.02 68.7757 li
202.38 68.6557 li
202.32 68.6557 li
202.62 68.5357 li
202.5 68.5957 li
202.8 68.4157 li
202.74 68.4757 li
202.98 68.2357 li
202.92 68.2957 li
203.04 68.0557 li
203.04 68.1157 li
203.16 67.8157 li
203.16 67.8757 li
203.16 67.5757 li
203.16 67.6957 li
203.16 67.3957 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
EGZBZF+Arial-BoldMT*1 [10.5 0 0 -10.5 0 0 ]msf
221.64 71.5357 mo
(online clustering)
[6.42278 6.42276 2.92636 2.92635 6.42278 5.84534 2.88225 5.84535 2.92636 6.42276 5.84534 3.50378 
5.84534 4.09195 2.92633 6.42279 0 ]xsh
190.32 85.2157 mo
213.42 85.2157 li
213.48 85.2157 213.54 85.2757 213.54 85.3357 cv
213.54 85.3957 213.48 85.4557 213.42 85.4557 cv
190.32 85.4557 li
190.26 85.4557 190.14 85.3957 190.14 85.3357 cv
190.14 85.2757 190.26 85.2157 190.32 85.2157 cv
.629236 .549432 .540154 .282963 cmyk
ef
190.32 85.2157 mo
213.42 85.2157 li
213.48 85.2157 213.54 85.2757 213.54 85.3357 cv
213.54 85.3957 213.48 85.4557 213.42 85.4557 cv
190.32 85.4557 li
190.26 85.4557 190.14 85.3957 190.14 85.3357 cv
190.14 85.2757 190.26 85.2157 190.32 85.2157 cv
cp
@
199.98 86.8957 mo
203.58 86.8957 li
203.58 83.9557 li
199.98 83.9557 li
cp
.675593 .606348 .595972 .467292 cmyk
f
199.56 83.9557 mo
199.56 83.7157 199.74 83.5957 199.98 83.5957 cv
203.58 83.5957 li
203.82 83.5957 204 83.7157 204 83.9557 cv
204 86.8957 li
204 87.0757 203.82 87.2557 203.58 87.2557 cv
199.98 87.2557 li
199.74 87.2557 199.56 87.0757 199.56 86.8957 cv
199.56 83.9557 li
cp
200.4 86.8957 mo
199.98 86.5357 li
203.58 86.5357 li
203.16 86.8957 li
203.16 83.9557 li
203.58 84.2557 li
199.98 84.2557 li
200.4 83.9557 li
200.4 86.8957 li
.629236 .549432 .540154 .282963 cmyk
ef
199.56 83.9557 mo
199.56 83.7157 199.74 83.5957 199.98 83.5957 cv
203.58 83.5957 li
203.82 83.5957 204 83.7157 204 83.9557 cv
204 86.8957 li
204 87.0757 203.82 87.2557 203.58 87.2557 cv
199.98 87.2557 li
199.74 87.2557 199.56 87.0757 199.56 86.8957 cv
199.56 83.9557 li
cp
@
200.4 86.8957 mo
199.98 86.5357 li
203.58 86.5357 li
203.16 86.8957 li
203.16 83.9557 li
203.58 84.2557 li
199.98 84.2557 li
200.4 83.9557 li
200.4 86.8957 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
EGZBZF+Arial-BoldMT*1 [10.5 0 0 -10.5 0 0 ]msf
221.94 89.2357 mo
(offline clustering)
[6.41331 3.49432 3.49432 2.9169 2.9169 6.41331 5.83591 2.94208 5.83591 2.9169 6.41333 5.83591 
3.49432 5.83591 4.08246 2.9169 6.41333 0 ]xsh
48.42 22.4557 mo
48.42 22.2757 48.54 22.0957 48.78 22.0957 cv
318 22.0957 li
318.18 22.0957 318.36 22.2757 318.36 22.4557 cv
318.36 136.696 li
318.36 136.936 318.18 137.056 318 137.056 cv
48.78 137.056 li
48.54 137.056 48.42 136.936 48.42 136.696 cv
48.42 22.4557 li
cp
49.14 136.696 mo
48.78 136.396 li
318 136.396 li
317.64 136.696 li
317.64 22.4557 li
318 22.8157 li
48.78 22.8157 li
49.14 22.4557 li
49.14 136.696 li
.251957 .199069 .204257 3.0518e-5 cmyk
ef
48.42 22.4557 mo
48.42 22.2757 48.54 22.0957 48.78 22.0957 cv
318 22.0957 li
318.18 22.0957 318.36 22.2757 318.36 22.4557 cv
318.36 136.696 li
318.36 136.936 318.18 137.056 318 137.056 cv
48.78 137.056 li
48.54 137.056 48.42 136.936 48.42 136.696 cv
48.42 22.4557 li
cp
@
49.14 136.696 mo
48.78 136.396 li
318 136.396 li
317.64 136.696 li
317.64 22.4557 li
318 22.8157 li
48.78 22.8157 li
49.14 22.4557 li
49.14 136.696 li
cp
@
48.42 136.696 mo
49.14 136.696 li
49.14 22.4557 li
48.42 22.4557 li
cp
.499092 .41416 .414343 .0537118 cmyk
f
49.14 136.696 mo
48.42 136.696 li
48.42 22.4557 li
49.14 22.4557 li
cp
@
48.42 136.696 mo
cp
@
48.78 136.396 mo
51.84 136.396 li
51.84 137.056 li
48.78 137.056 li
cp
48.78 122.116 mo
48.78 122.116 mo
51.84 122.116 li
51.84 122.836 li
48.78 122.836 li
cp
48.78 107.776 mo
48.78 107.776 mo
51.84 107.776 li
51.84 108.496 li
48.78 108.496 li
cp
48.78 93.5557 mo
48.78 93.5557 mo
51.84 93.5557 li
51.84 94.2157 li
48.78 94.2157 li
cp
48.78 79.1557 mo
48.78 79.1557 mo
51.84 79.1557 li
51.84 79.8757 li
48.78 79.8757 li
cp
48.78 64.9357 mo
48.78 64.9357 mo
51.84 64.9357 li
51.84 65.6557 li
48.78 65.6557 li
cp
48.78 50.7157 mo
48.78 50.7157 mo
51.84 50.7157 li
51.84 51.4357 li
48.78 51.4357 li
cp
48.78 36.3757 mo
48.78 36.3757 mo
51.84 36.3757 li
51.84 37.0357 li
48.78 37.0357 li
cp
48.78 22.0957 mo
48.78 22.0957 mo
51.84 22.0957 li
51.84 22.8157 li
48.78 22.8157 li
cp
ef
48.78 136.396 mo
51.84 136.396 li
51.84 137.056 li
48.78 137.056 li
cp
@
48.78 122.116 mo
51.84 122.116 li
51.84 122.836 li
48.78 122.836 li
cp
@
48.78 107.776 mo
51.84 107.776 li
51.84 108.496 li
48.78 108.496 li
cp
@
48.78 93.5557 mo
51.84 93.5557 li
51.84 94.2157 li
48.78 94.2157 li
cp
@
48.78 79.1557 mo
51.84 79.1557 li
51.84 79.8757 li
48.78 79.8757 li
cp
@
48.78 64.9357 mo
51.84 64.9357 li
51.84 65.6557 li
48.78 65.6557 li
cp
@
48.78 50.7157 mo
51.84 50.7157 li
51.84 51.4357 li
48.78 51.4357 li
cp
@
48.78 36.3757 mo
51.84 36.3757 li
51.84 37.0357 li
48.78 37.0357 li
cp
@
48.78 22.0957 mo
51.84 22.0957 li
51.84 22.8157 li
48.78 22.8157 li
cp
@
48.78 137.056 mo
318 137.056 li
318 136.396 li
48.78 136.396 li
cp
f
48.78 136.396 mo
318 136.396 li
318 137.056 li
48.78 137.056 li
cp
@
55.44 54.1357 mo
68.94 54.0157 li
82.38 51.9157 li
95.88 50.5957 li
109.26 49.5157 li
122.82 48.7957 li
136.2 47.2957 li
149.7 45.4357 li
163.14 46.4557 li
176.64 46.2157 li
176.58 46.2157 li
190.14 43.9957 li
203.52 44.7157 li
217.02 43.9957 li
230.46 42.7357 li
243.96 42.7957 li
243.96 42.8557 li
257.34 40.9357 li
270.9 41.6557 li
270.84 41.6557 li
284.34 38.9557 li
284.4 38.9557 284.4 38.9557 284.4 38.9557 cv
297.78 39.4957 li
311.28 39.0757 li
311.34 39.0757 311.4 39.1357 311.4 39.1957 cv
311.4 39.2557 311.34 39.3157 311.28 39.3157 cv
297.78 39.7357 li
284.4 39.1957 li
270.9 41.8957 li
270.9 41.8957 270.9 41.8957 270.84 41.8957 cv
257.34 41.1757 li
257.4 41.1757 li
243.96 43.0357 li
230.46 42.9157 li
217.08 44.2357 li
203.52 44.9557 li
190.14 44.2357 li
176.64 46.4557 li
163.08 46.6957 li
149.7 45.6157 li
149.76 45.6157 li
136.2 47.5357 li
122.82 49.0357 li
109.32 49.7557 li
95.88 50.8357 li
82.38 52.0957 li
69 54.2557 li
55.44 54.3757 li
55.38 54.3757 55.32 54.3157 55.32 54.2557 cv
55.32 54.1957 55.38 54.1357 55.44 54.1357 cv
.251957 .199069 .204257 3.0518e-5 cmyk
ef
55.44 54.1357 mo
68.94 54.0157 li
82.38 51.9157 li
95.88 50.5957 li
109.26 49.5157 li
122.82 48.7957 li
136.2 47.2957 li
149.7 45.4357 li
163.14 46.4557 li
176.64 46.2157 li
176.58 46.2157 li
190.14 43.9957 li
203.52 44.7157 li
217.02 43.9957 li
230.46 42.7357 li
243.96 42.7957 li
243.96 42.8557 li
257.34 40.9357 li
270.9 41.6557 li
270.84 41.6557 li
284.34 38.9557 li
284.4 38.9557 284.4 38.9557 284.4 38.9557 cv
297.78 39.4957 li
311.28 39.0757 li
311.34 39.0757 311.4 39.1357 311.4 39.1957 cv
311.4 39.2557 311.34 39.3157 311.28 39.3157 cv
297.78 39.7357 li
284.4 39.1957 li
270.9 41.8957 li
270.9 41.8957 270.9 41.8957 270.84 41.8957 cv
257.34 41.1757 li
257.4 41.1757 li
243.96 43.0357 li
230.46 42.9157 li
217.08 44.2357 li
203.52 44.9557 li
190.14 44.2357 li
176.64 46.4557 li
163.08 46.6957 li
149.7 45.6157 li
149.76 45.6157 li
136.2 47.5357 li
122.82 49.0357 li
109.32 49.7557 li
95.88 50.8357 li
82.38 52.0957 li
69 54.2557 li
55.44 54.3757 li
55.38 54.3757 55.32 54.3157 55.32 54.2557 cv
55.32 54.1957 55.38 54.1357 55.44 54.1357 cv
cp
@
57.12 54.1357 mo
57.12 54.1957 57.12 54.1957 57.12 54.1957 cv
57.12 54.4957 li
57.12 54.5557 57.12 54.5557 57.06 54.5557 cv
57 54.8557 li
57 54.9157 li
56.82 55.1557 li
56.82 55.2157 56.82 55.2157 56.82 55.2157 cv
56.64 55.4557 li
56.58 55.4557 56.58 55.4557 56.58 55.5157 cv
56.34 55.6957 li
56.28 55.6957 li
56.04 55.8157 li
55.98 55.8757 55.98 55.8757 55.98 55.8757 cv
55.68 55.9357 li
55.62 55.9957 li
55.32 55.9957 li
55.26 55.9957 55.26 55.9957 55.26 55.9957 cv
54.96 55.9957 li
54.9 55.9957 54.9 55.9357 54.9 55.9357 cv
54.6 55.8757 li
54.54 55.8757 54.54 55.8757 54.54 55.8157 cv
54.3 55.6957 li
54.24 55.6957 54.24 55.6957 54.24 55.6957 cv
54 55.5157 li
54 55.4557 53.94 55.4557 53.94 55.4557 cv
53.76 55.2157 li
53.76 55.2157 53.76 55.2157 53.7 55.1557 cv
53.58 54.9157 li
53.58 54.8557 li
53.46 54.5557 li
53.46 54.5557 53.46 54.5557 53.46 54.4957 cv
53.4 54.1957 li
53.4 54.1957 53.4 54.1957 53.4 54.1357 cv
53.46 53.8357 li
53.46 53.7757 li
53.58 53.4757 li
53.58 53.4757 53.58 53.4757 53.58 53.4157 cv
53.7 53.1757 li
53.76 53.1757 53.76 53.1157 53.76 53.1157 cv
53.94 52.9357 li
53.94 52.8757 54 52.8757 54 52.8757 cv
54.18 52.6957 li
54.24 52.6957 54.24 52.6357 54.3 52.6357 cv
54.54 52.5157 li
54.54 52.5157 54.54 52.5157 54.6 52.5157 cv
54.9 52.3957 li
54.9 52.3957 54.9 52.3957 54.96 52.3957 cv
55.26 52.3357 li
55.26 52.3357 55.26 52.3357 55.32 52.3357 cv
55.62 52.3957 li
55.68 52.3957 li
55.98 52.5157 li
55.98 52.5157 55.98 52.5157 56.04 52.5157 cv
56.28 52.6357 li
56.34 52.6957 li
56.58 52.8757 li
56.58 52.8757 56.58 52.8757 56.64 52.9357 cv
56.82 53.1157 li
56.82 53.1757 li
57 53.4157 li
57 53.4757 57 53.4757 57 53.4757 cv
57.06 53.7757 li
57.12 53.7757 57.12 53.8357 57.12 53.8357 cv
57.12 54.1357 li
cp
56.4 53.8957 mo
56.4 54.0157 li
56.34 53.7157 li
56.34 53.7757 li
56.22 53.5357 li
56.22 53.5957 li
56.04 53.3557 li
56.1 53.4157 li
55.86 53.2357 li
55.92 53.2957 li
55.68 53.1157 li
55.74 53.1757 li
55.44 53.0557 li
55.56 53.0557 li
55.26 53.0557 li
55.32 53.0557 li
55.02 53.0557 li
55.08 53.0557 li
54.78 53.1757 li
54.84 53.1157 li
54.6 53.2957 li
54.66 53.2357 li
54.48 53.4157 li
54.48 53.3557 li
54.3 53.5957 li
54.36 53.5357 li
54.24 53.7757 li
54.24 53.7157 li
54.18 54.0157 li
54.18 53.8957 li
54.12 54.1957 li
54.12 54.1357 li
54.18 54.4357 li
54.18 54.3757 li
54.24 54.6157 li
54.24 54.5557 li
54.36 54.8557 li
54.3 54.7957 li
54.48 54.9757 li
54.66 55.0957 li
54.6 55.0957 li
54.84 55.2157 li
54.78 55.2157 li
55.08 55.2757 li
55.02 55.2757 li
55.32 55.2757 li
55.26 55.2757 li
55.56 55.2757 li
55.44 55.2757 li
55.74 55.2157 li
55.68 55.2157 li
55.92 55.0957 li
55.86 55.0957 li
56.1 54.9757 li
56.04 54.9757 li
56.22 54.7957 li
56.22 54.8557 li
56.34 54.5557 li
56.34 54.6157 li
56.4 54.3757 li
56.4 54.4357 li
56.4 54.1357 li
56.4 54.1957 li
56.4 53.8957 li
.75021 .679683 .670222 .90164 cmyk
ef
.007 lw
57.12 54.1357 mo
57.12 54.1957 57.12 54.1957 57.12 54.1957 cv
57.12 54.4957 li
57.12 54.5557 57.12 54.5557 57.06 54.5557 cv
57 54.8557 li
57 54.9157 li
56.82 55.1557 li
56.82 55.2157 56.82 55.2157 56.82 55.2157 cv
56.64 55.4557 li
56.58 55.4557 56.58 55.4557 56.58 55.5157 cv
56.34 55.6957 li
56.28 55.6957 li
56.04 55.8157 li
55.98 55.8757 55.98 55.8757 55.98 55.8757 cv
55.68 55.9357 li
55.62 55.9957 li
55.32 55.9957 li
55.26 55.9957 55.26 55.9957 55.26 55.9957 cv
54.96 55.9957 li
54.9 55.9957 54.9 55.9357 54.9 55.9357 cv
54.6 55.8757 li
54.54 55.8757 54.54 55.8757 54.54 55.8157 cv
54.3 55.6957 li
54.24 55.6957 54.24 55.6957 54.24 55.6957 cv
54 55.5157 li
54 55.4557 53.94 55.4557 53.94 55.4557 cv
53.76 55.2157 li
53.76 55.2157 53.76 55.2157 53.7 55.1557 cv
53.58 54.9157 li
53.58 54.8557 li
53.46 54.5557 li
53.46 54.5557 53.46 54.5557 53.46 54.4957 cv
53.4 54.1957 li
53.4 54.1957 53.4 54.1957 53.4 54.1357 cv
53.46 53.8357 li
53.46 53.7757 li
53.58 53.4757 li
53.58 53.4757 53.58 53.4757 53.58 53.4157 cv
53.7 53.1757 li
53.76 53.1757 53.76 53.1157 53.76 53.1157 cv
53.94 52.9357 li
53.94 52.8757 54 52.8757 54 52.8757 cv
54.18 52.6957 li
54.24 52.6957 54.24 52.6357 54.3 52.6357 cv
54.54 52.5157 li
54.54 52.5157 54.54 52.5157 54.6 52.5157 cv
54.9 52.3957 li
54.9 52.3957 54.9 52.3957 54.96 52.3957 cv
55.26 52.3357 li
55.26 52.3357 55.26 52.3357 55.32 52.3357 cv
55.62 52.3957 li
55.68 52.3957 li
55.98 52.5157 li
55.98 52.5157 55.98 52.5157 56.04 52.5157 cv
56.28 52.6357 li
56.34 52.6957 li
56.58 52.8757 li
56.58 52.8757 56.58 52.8757 56.64 52.9357 cv
56.82 53.1157 li
56.82 53.1757 li
57 53.4157 li
57 53.4757 57 53.4757 57 53.4757 cv
57.06 53.7757 li
57.12 53.7757 57.12 53.8357 57.12 53.8357 cv
57.12 54.1357 li
cp
@
56.4 53.8957 mo
56.4 54.0157 li
56.34 53.7157 li
56.34 53.7757 li
56.22 53.5357 li
56.22 53.5957 li
56.04 53.3557 li
56.1 53.4157 li
55.86 53.2357 li
55.92 53.2957 li
55.68 53.1157 li
55.74 53.1758 li
55.44 53.0557 li
55.56 53.0557 li
55.26 53.0557 li
55.32 53.0557 li
55.02 53.0557 li
55.08 53.0557 li
54.78 53.1758 li
54.84 53.1157 li
54.6 53.2957 li
54.66 53.2357 li
54.48 53.4157 li
54.48 53.3557 li
54.3 53.5957 li
54.36 53.5357 li
54.24 53.7757 li
54.24 53.7157 li
54.18 54.0157 li
54.18 53.8957 li
54.12 54.1957 li
54.12 54.1357 li
54.18 54.4357 li
54.18 54.3757 li
54.24 54.6157 li
54.24 54.5557 li
54.36 54.8557 li
54.3 54.7957 li
54.48 54.9757 li
54.66 55.0957 li
54.6 55.0957 li
54.84 55.2157 li
54.78 55.2157 li
55.08 55.2757 li
55.02 55.2757 li
55.32 55.2757 li
55.26 55.2757 li
55.56 55.2757 li
55.44 55.2757 li
55.74 55.2157 li
55.68 55.2157 li
55.92 55.0957 li
55.86 55.0957 li
56.1 54.9757 li
56.04 54.9757 li
56.22 54.7957 li
56.22 54.8557 li
56.34 54.5557 li
56.34 54.6157 li
56.4 54.3757 li
56.4 54.4357 li
56.4 54.1357 li
56.4 54.1957 li
56.4 53.8957 li
cp
@
70.62 54.0157 mo
70.68 54.0757 70.68 54.0757 70.62 54.0757 cv
70.62 54.3757 li
70.62 54.4357 70.62 54.4357 70.62 54.4357 cv
70.5 54.7357 li
70.5 54.7957 li
70.38 55.0357 li
70.32 55.0957 70.32 55.0957 70.32 55.0957 cv
70.14 55.3357 li
70.14 55.3357 70.08 55.3357 70.08 55.3957 cv
69.84 55.5757 li
69.84 55.5757 69.84 55.5757 69.78 55.5757 cv
69.54 55.6957 li
69.54 55.7557 69.48 55.7557 69.48 55.7557 cv
69.18 55.8157 li
69.18 55.8157 69.18 55.8757 69.12 55.8757 cv
68.46 55.8757 li
68.4 55.8157 li
68.1 55.7557 li
68.1 55.7557 68.04 55.7557 68.04 55.6957 cv
67.8 55.5757 li
67.74 55.5757 67.74 55.5757 67.74 55.5757 cv
67.5 55.3957 li
67.5 55.3357 67.5 55.3357 67.44 55.3357 cv
67.26 55.0957 li
67.26 55.0957 67.26 55.0957 67.26 55.0357 cv
67.08 54.7957 li
67.08 54.7357 li
66.96 54.4357 li
66.96 54.4357 66.96 54.4357 66.96 54.3757 cv
66.96 54.0757 li
66.96 54.0757 66.96 54.0757 66.96 54.0157 cv
66.96 53.6557 li
67.08 53.3557 li
67.08 53.3557 67.08 53.3557 67.08 53.2957 cv
67.26 53.0557 li
67.26 53.0557 67.26 53.0557 67.26 52.9957 cv
67.44 52.8157 li
67.5 52.7557 67.5 52.7557 67.5 52.7557 cv
67.74 52.5757 li
67.74 52.5757 67.74 52.5157 67.8 52.5157 cv
68.04 52.3957 li
68.1 52.3957 li
68.4 52.2757 li
68.46 52.2757 li
68.76 52.2157 li
68.82 52.2157 li
69.12 52.2757 li
69.18 52.2757 69.18 52.2757 69.18 52.2757 cv
69.48 52.3957 li
69.54 52.3957 li
69.78 52.5157 li
69.84 52.5157 69.84 52.5757 69.84 52.5757 cv
70.08 52.7557 li
70.08 52.7557 70.14 52.7557 70.14 52.8157 cv
70.32 52.9957 li
70.32 53.0557 70.32 53.0557 70.38 53.0557 cv
70.5 53.2957 li
70.5 53.3557 70.5 53.3557 70.5 53.3557 cv
70.62 53.6557 li
70.62 54.0157 li
cp
69.9 53.7757 mo
69.9 53.8957 li
69.84 53.5957 li
69.84 53.6557 li
69.72 53.4157 li
69.78 53.4757 li
69.6 53.2357 li
69.6 53.2957 li
69.42 53.1157 li
69.48 53.1757 li
69.18 52.9957 li
69.24 53.0557 li
69 52.9357 li
69.06 52.9957 li
68.76 52.9357 li
68.82 52.9357 li
68.52 52.9957 li
68.58 52.9357 li
68.34 53.0557 li
68.4 52.9957 li
68.1 53.1757 li
68.22 53.1157 li
67.98 53.2957 li
68.04 53.2357 li
67.8 53.4757 li
67.86 53.4157 li
67.74 53.6557 li
67.74 53.5957 li
67.68 53.8957 li
67.68 53.7757 li
67.68 54.0757 li
67.68 54.0157 li
67.68 54.3157 li
67.68 54.2557 li
67.74 54.5557 li
67.74 54.4957 li
67.86 54.7357 li
67.8 54.6757 li
68.04 54.8557 li
67.98 54.8557 li
68.16 54.9757 li
68.1 54.9757 li
68.4 55.0957 li
68.34 55.0957 li
68.58 55.1557 li
68.52 55.1557 li
68.82 55.1557 li
68.76 55.1557 li
69.06 55.1557 li
69 55.1557 li
69.24 55.0957 li
69.18 55.0957 li
69.48 54.9757 li
69.42 54.9757 li
69.6 54.8557 li
69.78 54.6757 li
69.72 54.7357 li
69.84 54.4957 li
69.84 54.5557 li
69.9 54.2557 li
69.9 54.3157 li
69.96 54.0157 li
69.96 54.0757 li
69.9 53.7757 li
ef
70.62 54.0157 mo
70.68 54.0757 70.68 54.0757 70.62 54.0757 cv
70.62 54.3757 li
70.62 54.4357 70.62 54.4357 70.62 54.4357 cv
70.5 54.7357 li
70.5 54.7957 li
70.38 55.0357 li
70.32 55.0957 70.32 55.0957 70.32 55.0957 cv
70.14 55.3357 li
70.14 55.3357 70.08 55.3357 70.08 55.3957 cv
69.84 55.5757 li
69.84 55.5757 69.84 55.5757 69.78 55.5757 cv
69.54 55.6957 li
69.54 55.7557 69.48 55.7557 69.48 55.7557 cv
69.18 55.8157 li
69.18 55.8157 69.18 55.8757 69.12 55.8757 cv
68.46 55.8757 li
68.4 55.8157 li
68.1 55.7557 li
68.1 55.7557 68.04 55.7557 68.04 55.6957 cv
67.8 55.5757 li
67.74 55.5757 67.74 55.5757 67.74 55.5757 cv
67.5 55.3957 li
67.5 55.3357 67.5 55.3357 67.44 55.3357 cv
67.26 55.0957 li
67.26 55.0957 67.26 55.0957 67.26 55.0357 cv
67.08 54.7957 li
67.08 54.7357 li
66.96 54.4357 li
66.96 54.4357 66.96 54.4357 66.96 54.3757 cv
66.96 54.0757 li
66.96 54.0757 66.96 54.0757 66.96 54.0157 cv
66.96 53.6557 li
67.08 53.3557 li
67.08 53.3557 67.08 53.3557 67.08 53.2957 cv
67.26 53.0557 li
67.26 53.0557 67.26 53.0557 67.26 52.9957 cv
67.44 52.8157 li
67.5 52.7557 67.5 52.7557 67.5 52.7557 cv
67.74 52.5757 li
67.74 52.5757 67.74 52.5157 67.8 52.5157 cv
68.04 52.3957 li
68.1 52.3957 li
68.4 52.2757 li
68.46 52.2757 li
68.76 52.2157 li
68.82 52.2157 li
69.12 52.2757 li
69.18 52.2757 69.18 52.2757 69.18 52.2757 cv
69.48 52.3957 li
69.54 52.3957 li
69.78 52.5157 li
69.84 52.5157 69.84 52.5757 69.84 52.5757 cv
70.08 52.7557 li
70.08 52.7557 70.14 52.7557 70.14 52.8157 cv
70.32 52.9957 li
70.32 53.0557 70.32 53.0557 70.38 53.0557 cv
70.5 53.2957 li
70.5 53.3557 70.5 53.3557 70.5 53.3557 cv
70.62 53.6557 li
70.62 54.0157 li
cp
@
69.9 53.7757 mo
69.9 53.8958 li
69.84 53.5957 li
69.84 53.6557 li
69.72 53.4157 li
69.78 53.4757 li
69.6 53.2357 li
69.6 53.2957 li
69.42 53.1158 li
69.48 53.1758 li
69.18 52.9957 li
69.24 53.0558 li
69 52.9357 li
69.06 52.9957 li
68.76 52.9357 li
68.82 52.9357 li
68.52 52.9957 li
68.58 52.9357 li
68.34 53.0558 li
68.4 52.9957 li
68.1 53.1758 li
68.22 53.1158 li
67.98 53.2957 li
68.04 53.2357 li
67.8 53.4757 li
67.86 53.4157 li
67.74 53.6557 li
67.74 53.5957 li
67.68 53.8958 li
67.68 53.7757 li
67.68 54.0757 li
67.68 54.0157 li
67.68 54.3157 li
67.68 54.2557 li
67.74 54.5558 li
67.74 54.4957 li
67.86 54.7357 li
67.8 54.6758 li
68.04 54.8557 li
67.98 54.8557 li
68.16 54.9757 li
68.1 54.9757 li
68.4 55.0957 li
68.34 55.0957 li
68.58 55.1557 li
68.52 55.1557 li
68.82 55.1557 li
68.76 55.1557 li
69.06 55.1557 li
69 55.1557 li
69.24 55.0957 li
69.18 55.0957 li
69.48 54.9757 li
69.42 54.9757 li
69.6 54.8557 li
69.78 54.6758 li
69.72 54.7357 li
69.84 54.4957 li
69.84 54.5558 li
69.9 54.2557 li
69.9 54.3157 li
69.96 54.0157 li
69.96 54.0757 li
69.9 53.7757 li
cp
@
84.18 51.7957 mo
84.18 51.8557 li
84.12 52.1557 li
84.12 52.2157 li
84 52.5157 li
84 52.5157 84 52.5157 84 52.5757 cv
83.88 52.8157 li
83.64 53.0557 li
83.64 53.1157 83.64 53.1157 83.58 53.1157 cv
83.34 53.2957 li
83.34 53.3557 83.34 53.3557 83.34 53.3557 cv
83.04 53.4757 li
83.04 53.4757 83.04 53.4757 82.98 53.5357 cv
82.74 53.5957 li
82.68 53.5957 82.68 53.5957 82.62 53.5957 cv
82.32 53.6557 li
82.32 53.6557 82.32 53.6557 82.26 53.6557 cv
81.96 53.5957 li
81.9 53.5957 li
81.6 53.5357 li
81.6 53.4757 81.6 53.4757 81.54 53.4757 cv
81.3 53.3557 li
81.3 53.3557 81.24 53.3557 81.24 53.2957 cv
81 53.1157 li
80.82 52.8757 li
80.76 52.8757 80.76 52.8157 80.76 52.8157 cv
80.64 52.5757 li
80.58 52.5157 80.58 52.5157 80.58 52.5157 cv
80.52 52.2157 li
80.46 52.1557 li
80.46 51.4957 li
80.52 51.4357 li
80.58 51.1357 li
80.58 51.1357 80.58 51.1357 80.64 51.0757 cv
80.76 50.8357 li
80.76 50.8357 80.76 50.7757 80.82 50.7757 cv
81 50.5357 li
81.24 50.3557 li
81.24 50.2957 81.3 50.2957 81.3 50.2957 cv
81.54 50.1757 li
81.6 50.1757 81.6 50.1157 81.6 50.1157 cv
81.9 50.0557 li
81.96 50.0557 li
82.26 49.9957 li
82.32 49.9957 82.32 49.9957 82.32 49.9957 cv
82.62 50.0557 li
82.68 50.0557 82.68 50.0557 82.74 50.0557 cv
82.98 50.1157 li
83.04 50.1157 83.04 50.1757 83.04 50.1757 cv
83.34 50.2957 li
83.34 50.2957 83.34 50.2957 83.4 50.3557 cv
83.58 50.5357 li
83.64 50.5357 83.64 50.5357 83.64 50.5357 cv
83.82 50.7757 li
83.88 50.8357 li
84 51.0757 li
84 51.1357 84 51.1357 84 51.1357 cv
84.12 51.4357 li
84.12 51.4957 li
84.18 51.7957 li
cp
83.4 51.5557 mo
83.46 51.6157 li
83.34 51.3757 li
83.34 51.4357 li
83.22 51.1357 li
83.28 51.1957 li
83.1 51.0157 li
83.16 51.0757 li
82.92 50.8957 li
82.98 50.8957 li
82.74 50.7757 li
82.8 50.7757 li
82.5 50.7157 li
82.56 50.7157 li
82.26 50.7157 li
82.32 50.7157 li
82.02 50.7157 li
82.14 50.7157 li
81.84 50.7757 li
81.9 50.7757 li
81.66 50.8957 li
81.72 50.8957 li
81.48 51.0757 li
81.54 51.0157 li
81.36 51.2557 li
81.36 51.1357 li
81.24 51.4357 li
81.3 51.3757 li
81.18 51.6157 li
81.18 51.5557 li
81.18 51.8557 li
81.18 51.7957 li
81.18 52.0957 li
81.18 52.0357 li
81.3 52.2757 li
81.24 52.2157 li
81.36 52.4557 li
81.36 52.3957 li
81.54 52.6357 li
81.48 52.5757 li
81.72 52.7557 li
81.66 52.7557 li
81.9 52.8757 li
81.84 52.8157 li
82.14 52.9357 li
82.02 52.9357 li
82.32 52.9357 li
82.26 52.9357 li
82.56 52.9357 li
82.5 52.9357 li
82.8 52.8157 li
82.74 52.8757 li
82.98 52.7557 li
82.92 52.7557 li
83.16 52.5757 li
83.1 52.6357 li
83.28 52.3957 li
83.22 52.4557 li
83.34 52.2157 li
83.34 52.2757 li
83.46 52.0357 li
83.4 52.0957 li
83.46 51.7957 li
83.46 51.8557 li
83.4 51.5557 li
ef
84.18 51.7957 mo
84.18 51.8557 li
84.12 52.1557 li
84.12 52.2157 li
84 52.5157 li
84 52.5157 84 52.5157 84 52.5757 cv
83.88 52.8157 li
83.64 53.0557 li
83.64 53.1157 83.64 53.1157 83.58 53.1157 cv
83.34 53.2957 li
83.34 53.3557 83.34 53.3557 83.34 53.3557 cv
83.04 53.4757 li
83.04 53.4757 83.04 53.4757 82.98 53.5357 cv
82.74 53.5957 li
82.68 53.5957 82.68 53.5957 82.62 53.5957 cv
82.32 53.6557 li
82.32 53.6557 82.32 53.6557 82.26 53.6557 cv
81.96 53.5957 li
81.9 53.5957 li
81.6 53.5357 li
81.6 53.4757 81.6 53.4757 81.54 53.4757 cv
81.3 53.3557 li
81.3 53.3557 81.24 53.3557 81.24 53.2957 cv
81 53.1157 li
80.82 52.8757 li
80.76 52.8757 80.76 52.8157 80.76 52.8157 cv
80.64 52.5757 li
80.58 52.5157 80.58 52.5157 80.58 52.5157 cv
80.52 52.2157 li
80.46 52.1557 li
80.46 51.4957 li
80.52 51.4357 li
80.58 51.1357 li
80.58 51.1357 80.58 51.1357 80.64 51.0757 cv
80.76 50.8357 li
80.76 50.8357 80.76 50.7757 80.82 50.7757 cv
81 50.5357 li
81.24 50.3557 li
81.24 50.2957 81.3 50.2957 81.3 50.2957 cv
81.54 50.1757 li
81.6 50.1757 81.6 50.1157 81.6 50.1157 cv
81.9 50.0557 li
81.96 50.0557 li
82.26 49.9957 li
82.32 49.9957 82.32 49.9957 82.32 49.9957 cv
82.62 50.0557 li
82.68 50.0557 82.68 50.0557 82.74 50.0557 cv
82.98 50.1157 li
83.04 50.1157 83.04 50.1757 83.04 50.1757 cv
83.34 50.2957 li
83.34 50.2957 83.34 50.2957 83.4 50.3557 cv
83.58 50.5357 li
83.64 50.5357 83.64 50.5357 83.64 50.5357 cv
83.82 50.7757 li
83.88 50.8357 li
84 51.0757 li
84 51.1357 84 51.1357 84 51.1357 cv
84.12 51.4357 li
84.12 51.4957 li
84.18 51.7957 li
cp
@
83.4 51.5557 mo
83.46 51.6158 li
83.34 51.3757 li
83.34 51.4357 li
83.22 51.1357 li
83.28 51.1957 li
83.1 51.0157 li
83.16 51.0757 li
82.92 50.8958 li
82.98 50.8958 li
82.74 50.7757 li
82.8 50.7757 li
82.5 50.7157 li
82.56 50.7157 li
82.26 50.7157 li
82.32 50.7157 li
82.02 50.7157 li
82.14 50.7157 li
81.84 50.7757 li
81.9 50.7757 li
81.66 50.8958 li
81.72 50.8958 li
81.48 51.0757 li
81.54 51.0157 li
81.36 51.2557 li
81.36 51.1357 li
81.24 51.4357 li
81.3 51.3757 li
81.18 51.6158 li
81.18 51.5557 li
81.18 51.8557 li
81.18 51.7957 li
81.18 52.0957 li
81.18 52.0357 li
81.3 52.2757 li
81.24 52.2157 li
81.36 52.4557 li
81.36 52.3958 li
81.54 52.6357 li
81.48 52.5757 li
81.72 52.7557 li
81.66 52.7557 li
81.9 52.8757 li
81.84 52.8157 li
82.14 52.9357 li
82.02 52.9357 li
82.32 52.9357 li
82.26 52.9357 li
82.56 52.9357 li
82.5 52.9357 li
82.8 52.8157 li
82.74 52.8757 li
82.98 52.7557 li
82.92 52.7557 li
83.16 52.5757 li
83.1 52.6357 li
83.28 52.3958 li
83.22 52.4557 li
83.34 52.2157 li
83.34 52.2757 li
83.46 52.0357 li
83.4 52.0957 li
83.46 51.7957 li
83.46 51.8557 li
83.4 51.5557 li
cp
@
97.56 50.5957 mo
97.56 50.6557 97.56 50.6557 97.56 50.6557 cv
97.5 50.9557 li
97.5 51.0157 97.5 51.0157 97.5 51.0757 cv
97.44 51.3157 li
97.44 51.3757 97.38 51.3757 97.38 51.3757 cv
97.26 51.6157 li
97.26 51.6757 97.26 51.6757 97.2 51.6757 cv
97.02 51.9157 li
97.02 51.9157 97.02 51.9757 96.96 51.9757 cv
96.78 52.1557 li
96.72 52.1557 96.72 52.1557 96.72 52.1557 cv
96.48 52.3357 li
96.42 52.3357 96.42 52.3357 96.42 52.3357 cv
96.12 52.3957 li
96.06 52.4557 96.06 52.4557 96.06 52.4557 cv
95.76 52.4557 li
95.7 52.4557 95.7 52.4557 95.7 52.4557 cv
95.4 52.4557 li
95.34 52.4557 95.34 52.4557 95.28 52.3957 cv
95.04 52.3357 li
94.98 52.3357 94.98 52.3357 94.98 52.3357 cv
94.68 52.1557 li
94.68 52.1557 94.68 52.1557 94.62 52.1557 cv
94.44 51.9757 li
94.38 51.9757 94.38 51.9157 94.38 51.9157 cv
94.2 51.6757 li
94.14 51.6757 94.14 51.6757 94.14 51.6157 cv
94.02 51.3757 li
94.02 51.3757 94.02 51.3757 93.96 51.3157 cv
93.9 51.0757 li
93.9 51.0157 93.9 51.0157 93.9 50.9557 cv
93.84 50.6557 li
93.84 50.6557 93.84 50.6557 93.84 50.5957 cv
93.9 50.2957 li
93.9 50.2957 93.9 50.2957 93.9 50.2357 cv
93.96 49.9957 li
94.02 49.9357 94.02 49.9357 94.02 49.9357 cv
94.14 49.6357 li
94.14 49.6357 94.2 49.6357 94.2 49.5757 cv
94.38 49.3957 li
94.38 49.3357 94.38 49.3357 94.44 49.3357 cv
94.62 49.1557 li
94.68 49.1557 94.68 49.1557 94.68 49.0957 cv
94.98 48.9757 li
94.98 48.9757 94.98 48.9757 95.04 48.9757 cv
95.28 48.8557 li
95.34 48.8557 95.34 48.8557 95.4 48.8557 cv
95.7 48.8557 li
95.7 48.7957 95.7 48.7957 95.76 48.8557 cv
96.06 48.8557 li
96.06 48.8557 96.06 48.8557 96.12 48.8557 cv
96.42 48.9757 li
96.42 48.9757 96.42 48.9757 96.48 48.9757 cv
96.72 49.0957 li
96.72 49.1557 96.78 49.1557 96.78 49.1557 cv
97.02 49.3357 li
97.02 49.3957 li
97.2 49.5757 li
97.26 49.6357 97.26 49.6357 97.26 49.6357 cv
97.38 49.9357 li
97.38 49.9357 97.44 49.9357 97.44 49.9957 cv
97.5 50.2357 li
97.5 50.2957 97.5 50.2957 97.5 50.2957 cv
97.56 50.5957 li
cp
96.84 50.4157 mo
96.84 50.4757 li
96.72 50.1757 li
96.78 50.2357 li
96.6 49.9957 li
96.66 50.0557 li
96.48 49.8157 li
96.54 49.8757 li
96.3 49.6957 li
96.36 49.7557 li
96.12 49.6357 li
96.18 49.6357 li
95.88 49.5157 li
96 49.5757 li
95.7 49.5157 li
95.76 49.5157 li
95.46 49.5757 li
95.52 49.5157 li
95.22 49.6357 li
95.28 49.6357 li
95.04 49.7557 li
95.1 49.6957 li
94.86 49.8757 li
94.92 49.8157 li
94.74 50.0557 li
94.8 49.9957 li
94.62 50.2357 li
94.68 50.1757 li
94.56 50.4757 li
94.62 50.4157 li
94.56 50.6557 li
94.56 50.5957 li
94.62 50.8957 li
94.56 50.8357 li
94.68 51.1357 li
94.62 51.0757 li
94.8 51.3157 li
94.74 51.2557 li
94.92 51.4957 li
94.86 51.4357 li
95.1 51.6157 li
95.04 51.5557 li
95.28 51.6757 li
95.22 51.6757 li
95.52 51.7357 li
95.46 51.7357 li
95.76 51.7957 li
95.7 51.7957 li
96 51.7357 li
95.88 51.7357 li
96.18 51.6757 li
96.12 51.6757 li
96.36 51.5557 li
96.3 51.6157 li
96.54 51.4357 li
96.48 51.4957 li
96.66 51.2557 li
96.6 51.3157 li
96.78 51.0757 li
96.72 51.1357 li
96.84 50.8357 li
96.84 50.8957 li
96.84 50.5957 li
96.84 50.6557 li
96.84 50.4157 li
ef
97.56 50.5957 mo
97.56 50.6557 97.56 50.6557 97.56 50.6557 cv
97.5 50.9557 li
97.5 51.0157 97.5 51.0157 97.5 51.0757 cv
97.44 51.3157 li
97.44 51.3757 97.38 51.3757 97.38 51.3757 cv
97.26 51.6157 li
97.26 51.6757 97.26 51.6757 97.2 51.6757 cv
97.02 51.9157 li
97.02 51.9157 97.02 51.9757 96.96 51.9757 cv
96.78 52.1557 li
96.72 52.1557 96.72 52.1557 96.72 52.1557 cv
96.48 52.3357 li
96.42 52.3357 96.42 52.3357 96.42 52.3357 cv
96.12 52.3957 li
96.06 52.4557 96.06 52.4557 96.06 52.4557 cv
95.76 52.4557 li
95.7 52.4557 95.7 52.4557 95.7 52.4557 cv
95.4 52.4557 li
95.34 52.4557 95.34 52.4557 95.28 52.3957 cv
95.04 52.3357 li
94.98 52.3357 94.98 52.3357 94.98 52.3357 cv
94.68 52.1557 li
94.68 52.1557 94.68 52.1557 94.62 52.1557 cv
94.44 51.9757 li
94.38 51.9757 94.38 51.9157 94.38 51.9157 cv
94.2 51.6757 li
94.14 51.6757 94.14 51.6757 94.14 51.6157 cv
94.02 51.3757 li
94.02 51.3757 94.02 51.3757 93.96 51.3157 cv
93.9 51.0757 li
93.9 51.0157 93.9 51.0157 93.9 50.9557 cv
93.84 50.6557 li
93.84 50.6557 93.84 50.6557 93.84 50.5957 cv
93.9 50.2957 li
93.9 50.2957 93.9 50.2957 93.9 50.2357 cv
93.96 49.9957 li
94.02 49.9357 94.02 49.9357 94.02 49.9357 cv
94.14 49.6357 li
94.14 49.6357 94.2 49.6357 94.2 49.5757 cv
94.38 49.3957 li
94.38 49.3357 94.38 49.3357 94.44 49.3357 cv
94.62 49.1557 li
94.68 49.1557 94.68 49.1557 94.68 49.0957 cv
94.98 48.9757 li
94.98 48.9757 94.98 48.9757 95.04 48.9757 cv
95.28 48.8557 li
95.34 48.8557 95.34 48.8557 95.4 48.8557 cv
95.7 48.8557 li
95.7 48.7957 95.7 48.7957 95.76 48.8557 cv
96.06 48.8557 li
96.06 48.8557 96.06 48.8557 96.12 48.8557 cv
96.42 48.9757 li
96.42 48.9757 96.42 48.9757 96.48 48.9757 cv
96.72 49.0957 li
96.72 49.1557 96.78 49.1557 96.78 49.1557 cv
97.02 49.3357 li
97.02 49.3957 li
97.2 49.5757 li
97.26 49.6357 97.26 49.6357 97.26 49.6357 cv
97.38 49.9357 li
97.38 49.9357 97.44 49.9357 97.44 49.9957 cv
97.5 50.2357 li
97.5 50.2957 97.5 50.2957 97.5 50.2957 cv
97.56 50.5957 li
cp
@
96.84 50.4157 mo
96.84 50.4757 li
96.72 50.1757 li
96.78 50.2357 li
96.6 49.9957 li
96.66 50.0557 li
96.48 49.8157 li
96.54 49.8757 li
96.3 49.6957 li
96.36 49.7557 li
96.12 49.6357 li
96.18 49.6357 li
95.88 49.5157 li
96 49.5757 li
95.7 49.5157 li
95.76 49.5157 li
95.46 49.5757 li
95.52 49.5157 li
95.22 49.6357 li
95.28 49.6357 li
95.04 49.7557 li
95.1 49.6957 li
94.86 49.8757 li
94.92 49.8157 li
94.74 50.0557 li
94.8 49.9957 li
94.62 50.2357 li
94.68 50.1757 li
94.56 50.4757 li
94.62 50.4157 li
94.56 50.6557 li
94.56 50.5957 li
94.62 50.8957 li
94.56 50.8357 li
94.68 51.1357 li
94.62 51.0757 li
94.8 51.3157 li
94.74 51.2557 li
94.92 51.4957 li
94.86 51.4357 li
95.1 51.6157 li
95.04 51.5557 li
95.28 51.6757 li
95.22 51.6757 li
95.52 51.7357 li
95.46 51.7357 li
95.76 51.7957 li
95.7 51.7957 li
96 51.7357 li
95.88 51.7357 li
96.18 51.6757 li
96.12 51.6757 li
96.36 51.5557 li
96.3 51.6157 li
96.54 51.4357 li
96.48 51.4957 li
96.66 51.2557 li
96.6 51.3157 li
96.78 51.0757 li
96.72 51.1357 li
96.84 50.8357 li
96.84 50.8957 li
96.84 50.5957 li
96.84 50.6557 li
96.84 50.4157 li
cp
@
111.06 49.4557 mo
111.06 49.4557 111.06 49.4557 111.06 49.5157 cv
111.06 49.8157 li
111.06 49.8157 111.06 49.8757 111 49.8757 cv
110.94 50.1757 li
110.94 50.1757 110.94 50.1757 110.94 50.2357 cv
110.76 50.4757 li
110.76 50.4757 110.76 50.4757 110.76 50.5357 cv
110.58 50.7157 li
110.52 50.7757 110.52 50.7757 110.52 50.7757 cv
110.28 50.9557 li
110.22 51.0157 li
109.98 51.1357 li
109.92 51.1357 109.92 51.1357 109.92 51.1357 cv
109.62 51.2557 li
109.56 51.2557 li
109.26 51.3157 li
109.2 51.3157 li
108.9 51.2557 li
108.84 51.2557 108.84 51.2557 108.84 51.2557 cv
108.54 51.1357 li
108.48 51.1357 108.48 51.1357 108.48 51.1357 cv
108.24 51.0157 li
108.18 51.0157 108.18 50.9557 108.18 50.9557 cv
107.94 50.7757 li
107.94 50.7757 107.88 50.7757 107.88 50.7157 cv
107.7 50.5357 li
107.7 50.4757 107.7 50.4757 107.64 50.4757 cv
107.52 50.2357 li
107.52 50.1757 107.52 50.1757 107.52 50.1757 cv
107.4 49.8757 li
107.4 49.8157 li
107.34 49.5157 li
107.34 49.4557 107.34 49.4557 107.34 49.4557 cv
107.4 49.1557 li
107.4 49.0957 107.4 49.0957 107.4 49.0957 cv
107.52 48.7957 li
107.52 48.7357 li
107.64 48.4957 li
107.7 48.4357 107.7 48.4357 107.7 48.4357 cv
107.88 48.1957 li
107.88 48.1957 107.94 48.1957 107.94 48.1357 cv
108.12 47.9557 li
108.18 47.9557 108.18 47.9557 108.24 47.9557 cv
108.48 47.7757 li
108.48 47.7757 108.48 47.7757 108.54 47.7757 cv
108.84 47.7157 li
108.84 47.7157 108.84 47.6557 108.9 47.6557 cv
109.56 47.6557 li
109.62 47.7157 li
109.92 47.7757 li
109.92 47.7757 109.92 47.7757 109.98 47.7757 cv
110.22 47.9557 li
110.28 47.9557 li
110.52 48.1357 li
110.52 48.1957 110.52 48.1957 110.58 48.1957 cv
110.76 48.4357 li
110.76 48.4357 110.76 48.4357 110.76 48.4957 cv
110.94 48.7357 li
110.94 48.7957 li
111 49.0957 li
111.06 49.0957 111.06 49.0957 111.06 49.1557 cv
111.06 49.4557 li
cp
110.34 49.2157 mo
110.34 49.2757 li
110.28 48.9757 li
110.28 49.0357 li
110.16 48.7957 li
110.16 48.8557 li
109.98 48.6757 li
110.04 48.6757 li
109.8 48.4957 li
109.86 48.5557 li
109.62 48.4357 li
109.68 48.4357 li
109.44 48.3757 li
109.5 48.3757 li
109.2 48.3757 li
109.26 48.3757 li
108.96 48.3757 li
109.02 48.3757 li
108.72 48.4357 li
108.78 48.4357 li
108.54 48.5557 li
108.6 48.4957 li
108.24 48.8557 li
108.3 48.7957 li
108.18 49.0357 li
108.18 48.9757 li
108.12 49.2757 li
108.12 49.2157 li
108.06 49.5157 li
108.06 49.4557 li
108.12 49.7557 li
108.12 49.6357 li
108.18 49.9357 li
108.18 49.8757 li
108.3 50.1157 li
108.24 50.0557 li
108.42 50.2957 li
108.42 50.2357 li
108.6 50.4157 li
108.54 50.3557 li
108.78 50.5357 li
108.72 50.4757 li
109.02 50.5957 li
108.96 50.5357 li
109.26 50.5957 li
109.2 50.5957 li
109.5 50.5357 li
109.44 50.5957 li
109.68 50.4757 li
109.62 50.5357 li
109.86 50.3557 li
109.8 50.4157 li
110.04 50.2357 li
109.98 50.2957 li
110.16 50.0557 li
110.16 50.1157 li
110.28 49.8757 li
110.28 49.9357 li
110.34 49.6357 li
110.34 49.7557 li
110.34 49.4557 li
110.34 49.5157 li
110.34 49.2157 li
ef
111.06 49.4557 mo
111.06 49.4557 111.06 49.4557 111.06 49.5157 cv
111.06 49.8157 li
111.06 49.8157 111.06 49.8757 111 49.8757 cv
110.94 50.1757 li
110.94 50.1757 110.94 50.1757 110.94 50.2357 cv
110.76 50.4757 li
110.76 50.4757 110.76 50.4757 110.76 50.5357 cv
110.58 50.7157 li
110.52 50.7757 110.52 50.7757 110.52 50.7757 cv
110.28 50.9557 li
110.22 51.0157 li
109.98 51.1357 li
109.92 51.1357 109.92 51.1357 109.92 51.1357 cv
109.62 51.2557 li
109.56 51.2557 li
109.26 51.3157 li
109.2 51.3157 li
108.9 51.2557 li
108.84 51.2557 108.84 51.2557 108.84 51.2557 cv
108.54 51.1357 li
108.48 51.1357 108.48 51.1357 108.48 51.1357 cv
108.24 51.0157 li
108.18 51.0157 108.18 50.9557 108.18 50.9557 cv
107.94 50.7757 li
107.94 50.7757 107.88 50.7757 107.88 50.7157 cv
107.7 50.5357 li
107.7 50.4757 107.7 50.4757 107.64 50.4757 cv
107.52 50.2357 li
107.52 50.1757 107.52 50.1757 107.52 50.1757 cv
107.4 49.8757 li
107.4 49.8157 li
107.34 49.5157 li
107.34 49.4557 107.34 49.4557 107.34 49.4557 cv
107.4 49.1557 li
107.4 49.0957 107.4 49.0957 107.4 49.0957 cv
107.52 48.7957 li
107.52 48.7357 li
107.64 48.4957 li
107.7 48.4357 107.7 48.4357 107.7 48.4357 cv
107.88 48.1957 li
107.88 48.1957 107.94 48.1957 107.94 48.1357 cv
108.12 47.9557 li
108.18 47.9557 108.18 47.9557 108.24 47.9557 cv
108.48 47.7757 li
108.48 47.7757 108.48 47.7757 108.54 47.7757 cv
108.84 47.7157 li
108.84 47.7157 108.84 47.6557 108.9 47.6557 cv
109.56 47.6557 li
109.62 47.7157 li
109.92 47.7757 li
109.92 47.7757 109.92 47.7757 109.98 47.7757 cv
110.22 47.9557 li
110.28 47.9557 li
110.52 48.1357 li
110.52 48.1957 110.52 48.1957 110.58 48.1957 cv
110.76 48.4357 li
110.76 48.4357 110.76 48.4357 110.76 48.4957 cv
110.94 48.7357 li
110.94 48.7957 li
111 49.0957 li
111.06 49.0957 111.06 49.0957 111.06 49.1557 cv
111.06 49.4557 li
cp
@
110.34 49.2157 mo
110.34 49.2757 li
110.28 48.9757 li
110.28 49.0357 li
110.16 48.7957 li
110.16 48.8557 li
109.98 48.6757 li
110.04 48.6757 li
109.8 48.4957 li
109.86 48.5557 li
109.62 48.4357 li
109.68 48.4357 li
109.44 48.3757 li
109.5 48.3757 li
109.2 48.3757 li
109.26 48.3757 li
108.96 48.3757 li
109.02 48.3757 li
108.72 48.4357 li
108.78 48.4357 li
108.54 48.5557 li
108.6 48.4957 li
108.24 48.8557 li
108.3 48.7957 li
108.18 49.0357 li
108.18 48.9757 li
108.12 49.2757 li
108.12 49.2157 li
108.06 49.5157 li
108.06 49.4557 li
108.12 49.7557 li
108.12 49.6357 li
108.18 49.9357 li
108.18 49.8757 li
108.3 50.1157 li
108.24 50.0557 li
108.42 50.2957 li
108.42 50.2357 li
108.6 50.4157 li
108.54 50.3557 li
108.78 50.5357 li
108.72 50.4757 li
109.02 50.5957 li
108.96 50.5357 li
109.26 50.5957 li
109.2 50.5957 li
109.5 50.5357 li
109.44 50.5957 li
109.68 50.4757 li
109.62 50.5357 li
109.86 50.3557 li
109.8 50.4157 li
110.04 50.2357 li
109.98 50.2957 li
110.16 50.0557 li
110.16 50.1157 li
110.28 49.8757 li
110.28 49.9357 li
110.34 49.6357 li
110.34 49.7557 li
110.34 49.4557 li
110.34 49.5157 li
110.34 49.2157 li
cp
@
124.44 48.7357 mo
124.5 48.7357 124.5 48.7957 124.44 48.7957 cv
124.44 49.1557 li
124.32 49.4557 li
124.32 49.4557 124.32 49.4557 124.32 49.5157 cv
124.2 49.7557 li
124.14 49.7557 124.14 49.8157 124.14 49.8157 cv
123.96 49.9957 li
123.96 50.0557 123.9 50.0557 123.9 50.0557 cv
123.66 50.2357 li
123.66 50.2957 123.66 50.2957 123.6 50.2957 cv
123.36 50.4157 li
123.36 50.4157 123.3 50.4157 123.3 50.4757 cv
123 50.5357 li
123 50.5357 123 50.5357 122.94 50.5357 cv
122.64 50.5957 li
122.58 50.5957 li
122.28 50.5357 li
122.22 50.5357 li
121.92 50.4757 li
121.92 50.4157 121.86 50.4157 121.86 50.4157 cv
121.62 50.2957 li
121.56 50.2957 121.56 50.2957 121.56 50.2357 cv
121.32 50.0557 li
121.32 50.0557 121.32 50.0557 121.26 50.0557 cv
121.08 49.8157 li
121.08 49.7557 li
120.9 49.5157 li
120.9 49.4557 120.9 49.4557 120.9 49.4557 cv
120.84 49.1557 li
120.78 49.1557 120.78 49.0957 120.78 49.0957 cv
120.78 48.4357 li
120.78 48.4357 120.78 48.3757 120.84 48.3757 cv
120.9 48.0757 li
120.9 48.0757 120.9 48.0757 120.9 48.0157 cv
121.08 47.7757 li
121.08 47.7157 li
121.26 47.4757 li
121.32 47.4757 121.32 47.4757 121.32 47.4757 cv
121.56 47.2957 li
121.56 47.2357 121.56 47.2357 121.62 47.2357 cv
121.86 47.1157 li
121.92 47.0557 li
122.22 46.9957 li
122.28 46.9957 li
122.58 46.9357 li
122.64 46.9357 li
122.94 46.9957 li
123 46.9957 123 46.9957 123 46.9957 cv
123.3 47.0557 li
123.36 47.1157 li
123.6 47.2357 li
123.66 47.2357 123.66 47.2357 123.66 47.2957 cv
123.9 47.4757 li
123.96 47.4757 li
124.14 47.7157 li
124.14 47.7157 124.14 47.7757 124.2 47.7757 cv
124.32 48.0157 li
124.32 48.0757 124.32 48.0757 124.32 48.0757 cv
124.44 48.3757 li
124.44 48.7357 li
cp
123.72 48.4957 mo
123.72 48.5557 li
123.66 48.3157 li
123.66 48.3757 li
123.54 48.1357 li
123.6 48.1357 li
123.42 47.9557 li
123.42 48.0157 li
123.24 47.8357 li
123.3 47.8357 li
123.06 47.7157 li
123.12 47.7157 li
122.82 47.6557 li
122.88 47.6557 li
122.58 47.6557 li
122.64 47.6557 li
122.34 47.6557 li
122.4 47.6557 li
122.16 47.7157 li
122.22 47.7157 li
121.92 47.8357 li
122.04 47.8357 li
121.8 48.0157 li
121.86 47.9557 li
121.62 48.1957 li
121.68 48.1357 li
121.56 48.3757 li
121.56 48.3157 li
121.5 48.5557 li
121.5 48.4957 li
121.5 48.7957 li
121.5 48.7357 li
121.5 49.0357 li
121.5 48.9757 li
121.56 49.2157 li
121.56 49.1557 li
121.68 49.3957 li
121.62 49.3357 li
121.86 49.5757 li
121.8 49.5157 li
121.98 49.6957 li
121.92 49.6957 li
122.22 49.8157 li
122.16 49.7557 li
122.4 49.8757 li
122.34 49.8757 li
122.64 49.8757 li
122.58 49.8757 li
122.88 49.8757 li
122.82 49.8757 li
123.12 49.7557 li
123.06 49.8157 li
123.3 49.6957 li
123.24 49.6957 li
123.42 49.5157 li
123.42 49.5757 li
123.6 49.3357 li
123.54 49.3957 li
123.66 49.1557 li
123.66 49.2157 li
123.72 48.9757 li
123.72 49.0357 li
123.78 48.7357 li
123.78 48.7957 li
123.72 48.4957 li
ef
124.44 48.7357 mo
124.5 48.7357 124.5 48.7957 124.44 48.7957 cv
124.44 49.1557 li
124.32 49.4557 li
124.32 49.4557 124.32 49.4557 124.32 49.5157 cv
124.2 49.7557 li
124.14 49.7557 124.14 49.8157 124.14 49.8157 cv
123.96 49.9957 li
123.96 50.0557 123.9 50.0557 123.9 50.0557 cv
123.66 50.2357 li
123.66 50.2957 123.66 50.2957 123.6 50.2957 cv
123.36 50.4157 li
123.36 50.4157 123.3 50.4157 123.3 50.4757 cv
123 50.5357 li
123 50.5357 123 50.5357 122.94 50.5357 cv
122.64 50.5957 li
122.58 50.5957 li
122.28 50.5357 li
122.22 50.5357 li
121.92 50.4757 li
121.92 50.4157 121.86 50.4157 121.86 50.4157 cv
121.62 50.2957 li
121.56 50.2957 121.56 50.2957 121.56 50.2357 cv
121.32 50.0557 li
121.32 50.0557 121.32 50.0557 121.26 50.0557 cv
121.08 49.8157 li
121.08 49.7557 li
120.9 49.5157 li
120.9 49.4557 120.9 49.4557 120.9 49.4557 cv
120.84 49.1557 li
120.78 49.1557 120.78 49.0957 120.78 49.0957 cv
120.78 48.4357 li
120.78 48.4357 120.78 48.3757 120.84 48.3757 cv
120.9 48.0757 li
120.9 48.0757 120.9 48.0757 120.9 48.0157 cv
121.08 47.7757 li
121.08 47.7157 li
121.26 47.4757 li
121.32 47.4757 121.32 47.4757 121.32 47.4757 cv
121.56 47.2957 li
121.56 47.2357 121.56 47.2357 121.62 47.2357 cv
121.86 47.1157 li
121.92 47.0557 li
122.22 46.9957 li
122.28 46.9957 li
122.58 46.9357 li
122.64 46.9357 li
122.94 46.9957 li
123 46.9957 123 46.9957 123 46.9957 cv
123.3 47.0557 li
123.36 47.1157 li
123.6 47.2357 li
123.66 47.2357 123.66 47.2357 123.66 47.2957 cv
123.9 47.4757 li
123.96 47.4757 li
124.14 47.7157 li
124.14 47.7157 124.14 47.7757 124.2 47.7757 cv
124.32 48.0157 li
124.32 48.0757 124.32 48.0757 124.32 48.0757 cv
124.44 48.3757 li
124.44 48.7357 li
cp
@
123.72 48.4957 mo
123.72 48.5558 li
123.66 48.3157 li
123.66 48.3757 li
123.54 48.1357 li
123.6 48.1357 li
123.42 47.9557 li
123.42 48.0157 li
123.24 47.8358 li
123.3 47.8358 li
123.06 47.7157 li
123.12 47.7157 li
122.82 47.6557 li
122.88 47.6557 li
122.58 47.6557 li
122.64 47.6557 li
122.34 47.6557 li
122.4 47.6557 li
122.16 47.7157 li
122.22 47.7157 li
121.92 47.8358 li
122.04 47.8358 li
121.8 48.0157 li
121.86 47.9557 li
121.62 48.1957 li
121.68 48.1357 li
121.56 48.3757 li
121.56 48.3157 li
121.5 48.5558 li
121.5 48.4957 li
121.5 48.7957 li
121.5 48.7357 li
121.5 49.0357 li
121.5 48.9757 li
121.56 49.2157 li
121.56 49.1557 li
121.68 49.3958 li
121.62 49.3358 li
121.86 49.5757 li
121.8 49.5157 li
121.98 49.6957 li
121.92 49.6957 li
122.22 49.8157 li
122.16 49.7557 li
122.4 49.8757 li
122.34 49.8757 li
122.64 49.8757 li
122.58 49.8757 li
122.88 49.8757 li
122.82 49.8757 li
123.12 49.7557 li
123.06 49.8157 li
123.3 49.6957 li
123.24 49.6957 li
123.42 49.5157 li
123.42 49.5757 li
123.6 49.3358 li
123.54 49.3958 li
123.66 49.1557 li
123.66 49.2157 li
123.72 48.9757 li
123.72 49.0357 li
123.78 48.7357 li
123.78 48.7957 li
123.72 48.4957 li
cp
@
138 47.2957 mo
138 47.3557 138 47.3557 138 47.3557 cv
137.94 47.6557 li
137.94 47.7157 137.94 47.7157 137.94 47.7757 cv
137.82 48.0157 li
137.82 48.0757 137.82 48.0757 137.82 48.0757 cv
137.7 48.3157 li
137.7 48.3757 137.64 48.3757 137.64 48.3757 cv
137.46 48.6157 li
137.46 48.6157 137.46 48.6757 137.4 48.6757 cv
137.16 48.8557 li
136.86 49.0357 li
136.86 49.0357 136.86 49.0357 136.8 49.0357 cv
136.56 49.1557 li
136.5 49.1557 136.5 49.1557 136.44 49.1557 cv
136.14 49.1557 li
136.14 49.1557 136.14 49.1557 136.08 49.1557 cv
135.72 49.1557 li
135.42 49.0357 li
135.42 49.0357 135.42 49.0357 135.36 49.0357 cv
135.12 48.8557 li
135.06 48.8557 li
134.82 48.6757 li
134.82 48.6157 li
134.64 48.3757 li
134.58 48.3757 134.58 48.3757 134.58 48.3157 cv
134.46 48.0757 li
134.46 48.0757 134.4 48.0757 134.4 48.0157 cv
134.34 47.7757 li
134.34 47.7157 134.34 47.7157 134.34 47.6557 cv
134.28 47.3557 li
134.28 47.3557 134.28 47.3557 134.28 47.2957 cv
134.34 46.9957 li
134.34 46.9957 134.34 46.9957 134.34 46.9357 cv
134.4 46.6957 li
134.4 46.6357 134.46 46.6357 134.46 46.6357 cv
134.58 46.3357 li
134.58 46.3357 134.58 46.3357 134.64 46.2757 cv
134.82 46.0957 li
134.82 46.0357 li
135.06 45.8557 li
135.06 45.8557 135.12 45.8557 135.12 45.7957 cv
135.36 45.6757 li
135.42 45.6757 135.42 45.6757 135.42 45.6757 cv
135.72 45.5557 li
136.08 45.5557 li
136.14 45.4957 136.14 45.4957 136.14 45.5557 cv
136.44 45.5557 li
136.5 45.5557 136.5 45.5557 136.56 45.5557 cv
136.8 45.6757 li
136.86 45.6757 136.86 45.6757 136.86 45.6757 cv
137.16 45.7957 li
137.16 45.8557 137.16 45.8557 137.22 45.8557 cv
137.4 46.0357 li
137.46 46.0357 137.46 46.0957 137.46 46.0957 cv
137.64 46.2757 li
137.64 46.3357 137.7 46.3357 137.7 46.3357 cv
137.82 46.6357 li
137.82 46.6357 137.82 46.6357 137.82 46.6957 cv
137.94 46.9357 li
137.94 46.9957 137.94 46.9957 137.94 46.9957 cv
138 47.2957 li
cp
137.22 47.1157 mo
137.28 47.1757 li
137.16 46.8757 li
137.16 46.9357 li
137.04 46.6957 li
137.1 46.7557 li
136.92 46.5157 li
136.98 46.5757 li
136.74 46.3957 li
136.8 46.4557 li
136.56 46.3357 li
136.62 46.3357 li
136.32 46.2157 li
136.38 46.2757 li
136.08 46.2157 li
136.14 46.2157 li
135.84 46.2757 li
135.96 46.2157 li
135.66 46.3357 li
135.72 46.3357 li
135.48 46.4557 li
135.54 46.3957 li
135.3 46.5757 li
135.36 46.5757 li
135.18 46.7557 li
135.18 46.6957 li
135.06 46.9357 li
135.12 46.8757 li
135 47.1757 li
135 47.1157 li
135 47.3557 li
135 47.2957 li
135 47.5957 li
135 47.5357 li
135.12 47.8357 li
135.06 47.7757 li
135.18 48.0157 li
135.18 47.9557 li
135.36 48.1957 li
135.3 48.1357 li
135.54 48.3157 li
135.48 48.2557 li
135.72 48.3757 li
135.66 48.3757 li
135.96 48.4357 li
135.84 48.4357 li
136.14 48.4957 li
136.08 48.4957 li
136.38 48.4357 li
136.32 48.4357 li
136.62 48.3757 li
136.56 48.3757 li
136.8 48.2557 li
136.74 48.3157 li
136.98 48.1357 li
136.92 48.1957 li
137.1 47.9557 li
137.04 48.0157 li
137.16 47.7757 li
137.16 47.8357 li
137.28 47.5357 li
137.22 47.5957 li
137.28 47.2957 li
137.28 47.3557 li
137.22 47.1157 li
ef
138 47.2957 mo
138 47.3557 138 47.3557 138 47.3557 cv
137.94 47.6557 li
137.94 47.7157 137.94 47.7157 137.94 47.7757 cv
137.82 48.0157 li
137.82 48.0757 137.82 48.0757 137.82 48.0757 cv
137.7 48.3157 li
137.7 48.3757 137.64 48.3757 137.64 48.3757 cv
137.46 48.6157 li
137.46 48.6157 137.46 48.6757 137.4 48.6757 cv
137.16 48.8557 li
136.86 49.0357 li
136.86 49.0357 136.86 49.0357 136.8 49.0357 cv
136.56 49.1557 li
136.5 49.1557 136.5 49.1557 136.44 49.1557 cv
136.14 49.1557 li
136.14 49.1557 136.14 49.1557 136.08 49.1557 cv
135.72 49.1557 li
135.42 49.0357 li
135.42 49.0357 135.42 49.0357 135.36 49.0357 cv
135.12 48.8557 li
135.06 48.8557 li
134.82 48.6757 li
134.82 48.6157 li
134.64 48.3757 li
134.58 48.3757 134.58 48.3757 134.58 48.3157 cv
134.46 48.0757 li
134.46 48.0757 134.4 48.0757 134.4 48.0157 cv
134.34 47.7757 li
134.34 47.7157 134.34 47.7157 134.34 47.6557 cv
134.28 47.3557 li
134.28 47.3557 134.28 47.3557 134.28 47.2957 cv
134.34 46.9957 li
134.34 46.9957 134.34 46.9957 134.34 46.9357 cv
134.4 46.6957 li
134.4 46.6357 134.46 46.6357 134.46 46.6357 cv
134.58 46.3357 li
134.58 46.3357 134.58 46.3357 134.64 46.2757 cv
134.82 46.0957 li
134.82 46.0357 li
135.06 45.8557 li
135.06 45.8557 135.12 45.8557 135.12 45.7957 cv
135.36 45.6757 li
135.42 45.6757 135.42 45.6757 135.42 45.6757 cv
135.72 45.5557 li
136.08 45.5557 li
136.14 45.4957 136.14 45.4957 136.14 45.5557 cv
136.44 45.5557 li
136.5 45.5557 136.5 45.5557 136.56 45.5557 cv
136.8 45.6757 li
136.86 45.6757 136.86 45.6757 136.86 45.6757 cv
137.16 45.7957 li
137.16 45.8557 137.16 45.8557 137.22 45.8557 cv
137.4 46.0357 li
137.46 46.0357 137.46 46.0957 137.46 46.0957 cv
137.64 46.2757 li
137.64 46.3357 137.7 46.3357 137.7 46.3357 cv
137.82 46.6357 li
137.82 46.6357 137.82 46.6357 137.82 46.6957 cv
137.94 46.9357 li
137.94 46.9957 137.94 46.9957 137.94 46.9957 cv
138 47.2957 li
cp
@
137.22 47.1157 mo
137.28 47.1758 li
137.16 46.8757 li
137.16 46.9357 li
137.04 46.6957 li
137.1 46.7557 li
136.92 46.5157 li
136.98 46.5757 li
136.74 46.3958 li
136.8 46.4557 li
136.56 46.3357 li
136.62 46.3357 li
136.32 46.2157 li
136.38 46.2757 li
136.08 46.2157 li
136.14 46.2157 li
135.84 46.2757 li
135.96 46.2157 li
135.66 46.3357 li
135.72 46.3357 li
135.48 46.4557 li
135.54 46.3958 li
135.3 46.5757 li
135.36 46.5757 li
135.18 46.7557 li
135.18 46.6957 li
135.06 46.9357 li
135.12 46.8757 li
135 47.1758 li
135 47.1157 li
135 47.3557 li
135 47.2957 li
135 47.5957 li
135 47.5357 li
135.12 47.8357 li
135.06 47.7757 li
135.18 48.0157 li
135.18 47.9557 li
135.36 48.1957 li
135.3 48.1357 li
135.54 48.3157 li
135.48 48.2557 li
135.72 48.3757 li
135.66 48.3757 li
135.96 48.4357 li
135.84 48.4357 li
136.14 48.4957 li
136.08 48.4957 li
136.38 48.4357 li
136.32 48.4357 li
136.62 48.3757 li
136.56 48.3757 li
136.8 48.2557 li
136.74 48.3157 li
136.98 48.1357 li
136.92 48.1957 li
137.1 47.9557 li
137.04 48.0157 li
137.16 47.7757 li
137.16 47.8357 li
137.28 47.5357 li
137.22 47.5957 li
137.28 47.2957 li
137.28 47.3557 li
137.22 47.1157 li
cp
@
151.38 45.4357 mo
151.38 45.4957 li
151.32 45.7957 li
151.32 45.8557 151.32 45.8557 151.32 45.8557 cv
151.26 46.1557 li
151.2 46.2157 li
151.08 46.4557 li
151.08 46.4557 151.08 46.5157 151.02 46.5157 cv
150.84 46.7557 li
150.84 46.7557 150.84 46.7557 150.78 46.8157 cv
150.6 46.9957 li
150.54 46.9957 150.54 46.9957 150.54 46.9957 cv
150.3 47.1157 li
150.24 47.1157 150.24 47.1757 150.24 47.1757 cv
149.94 47.2357 li
149.88 47.2357 li
149.58 47.2957 li
149.52 47.2957 149.52 47.2957 149.52 47.2957 cv
149.22 47.2357 li
149.16 47.2357 149.16 47.2357 149.1 47.2357 cv
148.86 47.1757 li
148.8 47.1757 148.8 47.1157 148.8 47.1157 cv
148.5 46.9957 li
148.5 46.9957 148.5 46.9957 148.44 46.9357 cv
148.26 46.7557 li
148.2 46.7557 148.2 46.7557 148.2 46.7557 cv
148.02 46.5157 li
147.96 46.4557 li
147.84 46.2157 li
147.84 46.1557 li
147.72 45.8557 li
147.72 45.8557 147.72 45.8557 147.72 45.7957 cv
147.66 45.4957 li
147.66 45.4357 li
147.72 45.1357 li
147.72 45.0757 li
147.84 44.7757 li
147.84 44.7757 147.84 44.7757 147.84 44.7157 cv
147.96 44.4757 li
148.02 44.4157 li
148.2 44.1757 li
148.2 44.1757 148.2 44.1757 148.26 44.1757 cv
148.44 43.9957 li
148.5 43.9357 148.5 43.9357 148.5 43.9357 cv
148.8 43.8157 li
148.8 43.8157 148.8 43.8157 148.86 43.7557 cv
149.1 43.6957 li
149.16 43.6957 149.16 43.6957 149.22 43.6957 cv
149.52 43.6357 li
149.52 43.6357 149.52 43.6357 149.58 43.6357 cv
149.88 43.6957 li
149.94 43.6957 li
150.24 43.7557 li
150.24 43.8157 150.24 43.8157 150.3 43.8157 cv
150.54 43.9357 li
150.54 43.9357 150.6 43.9357 150.6 43.9957 cv
150.84 44.1757 li
150.84 44.1757 150.84 44.1757 150.84 44.2357 cv
151.02 44.4157 li
151.08 44.4157 151.08 44.4757 151.08 44.4757 cv
151.2 44.7157 li
151.2 44.7757 151.26 44.7757 151.26 44.7757 cv
151.32 45.0757 li
151.32 45.1357 li
151.38 45.4357 li
cp
150.66 45.1957 mo
150.66 45.2557 li
150.54 45.0157 li
150.6 45.0757 li
150.42 44.8357 li
150.48 44.8957 li
150.3 44.6557 li
150.36 44.7157 li
150.12 44.5357 li
150.18 44.5357 li
149.94 44.4157 li
150 44.4757 li
149.7 44.3557 li
149.82 44.3557 li
149.52 44.3557 li
149.58 44.3557 li
149.28 44.3557 li
149.34 44.3557 li
149.04 44.4757 li
149.1 44.4157 li
148.86 44.5357 li
148.92 44.5357 li
148.68 44.7157 li
148.74 44.6557 li
148.56 44.8957 li
148.62 44.8357 li
148.44 45.0757 li
148.5 45.0157 li
148.38 45.2557 li
148.44 45.1957 li
148.38 45.4957 li
148.38 45.4357 li
148.44 45.7357 li
148.38 45.6757 li
148.5 45.9157 li
148.44 45.8557 li
148.62 46.1557 li
148.56 46.0957 li
148.74 46.2757 li
148.68 46.2157 li
148.92 46.3957 li
148.86 46.3957 li
149.1 46.5157 li
149.04 46.5157 li
149.34 46.5757 li
149.28 46.5757 li
149.58 46.5757 li
149.52 46.5757 li
149.82 46.5757 li
149.7 46.5757 li
150 46.5157 li
149.94 46.5157 li
150.18 46.3957 li
150.12 46.3957 li
150.36 46.2157 li
150.3 46.2757 li
150.48 46.0957 li
150.42 46.1557 li
150.6 45.8557 li
150.54 45.9157 li
150.66 45.6757 li
150.66 45.7357 li
150.66 45.4357 li
150.66 45.4957 li
150.66 45.1957 li
ef
151.38 45.4357 mo
151.38 45.4957 li
151.32 45.7957 li
151.32 45.8557 151.32 45.8557 151.32 45.8557 cv
151.26 46.1557 li
151.2 46.2157 li
151.08 46.4557 li
151.08 46.4557 151.08 46.5157 151.02 46.5157 cv
150.84 46.7557 li
150.84 46.7557 150.84 46.7557 150.78 46.8157 cv
150.6 46.9957 li
150.54 46.9957 150.54 46.9957 150.54 46.9957 cv
150.3 47.1157 li
150.24 47.1157 150.24 47.1757 150.24 47.1757 cv
149.94 47.2357 li
149.88 47.2357 li
149.58 47.2957 li
149.52 47.2957 149.52 47.2957 149.52 47.2957 cv
149.22 47.2357 li
149.16 47.2357 149.16 47.2357 149.1 47.2357 cv
148.86 47.1757 li
148.8 47.1757 148.8 47.1157 148.8 47.1157 cv
148.5 46.9957 li
148.5 46.9957 148.5 46.9957 148.44 46.9357 cv
148.26 46.7557 li
148.2 46.7557 148.2 46.7557 148.2 46.7557 cv
148.02 46.5157 li
147.96 46.4557 li
147.84 46.2157 li
147.84 46.1557 li
147.72 45.8557 li
147.72 45.8557 147.72 45.8557 147.72 45.7957 cv
147.66 45.4957 li
147.66 45.4357 li
147.72 45.1357 li
147.72 45.0757 li
147.84 44.7757 li
147.84 44.7757 147.84 44.7757 147.84 44.7157 cv
147.96 44.4757 li
148.02 44.4157 li
148.2 44.1757 li
148.2 44.1757 148.2 44.1757 148.26 44.1757 cv
148.44 43.9957 li
148.5 43.9357 148.5 43.9357 148.5 43.9357 cv
148.8 43.8157 li
148.8 43.8157 148.8 43.8157 148.86 43.7557 cv
149.1 43.6957 li
149.16 43.6957 149.16 43.6957 149.22 43.6957 cv
149.52 43.6357 li
149.52 43.6357 149.52 43.6357 149.58 43.6357 cv
149.88 43.6957 li
149.94 43.6957 li
150.24 43.7557 li
150.24 43.8157 150.24 43.8157 150.3 43.8157 cv
150.54 43.9357 li
150.54 43.9357 150.6 43.9357 150.6 43.9957 cv
150.84 44.1757 li
150.84 44.1757 150.84 44.1757 150.84 44.2357 cv
151.02 44.4157 li
151.08 44.4157 151.08 44.4757 151.08 44.4757 cv
151.2 44.7157 li
151.2 44.7757 151.26 44.7757 151.26 44.7757 cv
151.32 45.0757 li
151.32 45.1357 li
151.38 45.4357 li
cp
@
150.66 45.1957 mo
150.66 45.2557 li
150.54 45.0157 li
150.6 45.0757 li
150.42 44.8357 li
150.48 44.8957 li
150.3 44.6557 li
150.36 44.7157 li
150.12 44.5357 li
150.18 44.5357 li
149.94 44.4157 li
150 44.4757 li
149.7 44.3557 li
149.82 44.3557 li
149.52 44.3557 li
149.58 44.3557 li
149.28 44.3557 li
149.34 44.3557 li
149.04 44.4757 li
149.1 44.4157 li
148.86 44.5357 li
148.92 44.5357 li
148.68 44.7157 li
148.74 44.6557 li
148.56 44.8957 li
148.62 44.8357 li
148.44 45.0757 li
148.5 45.0157 li
148.38 45.2557 li
148.44 45.1957 li
148.38 45.4957 li
148.38 45.4357 li
148.44 45.7357 li
148.38 45.6757 li
148.5 45.9157 li
148.44 45.8557 li
148.62 46.1557 li
148.56 46.0957 li
148.74 46.2757 li
148.68 46.2157 li
148.92 46.3957 li
148.86 46.3957 li
149.1 46.5157 li
149.04 46.5157 li
149.34 46.5757 li
149.28 46.5757 li
149.58 46.5757 li
149.52 46.5757 li
149.82 46.5757 li
149.7 46.5757 li
150 46.5157 li
149.94 46.5157 li
150.18 46.3957 li
150.12 46.3957 li
150.36 46.2157 li
150.3 46.2757 li
150.48 46.0957 li
150.42 46.1557 li
150.6 45.8557 li
150.54 45.9157 li
150.66 45.6757 li
150.66 45.7357 li
150.66 45.4357 li
150.66 45.4957 li
150.66 45.1957 li
cp
@
164.88 46.5157 mo
164.88 46.5157 164.88 46.5157 164.88 46.5757 cv
164.88 46.8757 li
164.88 46.8757 164.88 46.9357 164.82 46.9357 cv
164.76 47.2357 li
164.76 47.2357 164.76 47.2357 164.76 47.2957 cv
164.58 47.5357 li
164.58 47.5357 164.58 47.5357 164.58 47.5957 cv
164.4 47.7757 li
164.34 47.8357 164.34 47.8357 164.34 47.8357 cv
164.1 48.0157 li
164.04 48.0757 li
163.8 48.1957 li
163.74 48.1957 li
163.44 48.3157 li
163.38 48.3157 li
163.08 48.3757 li
163.02 48.3757 li
162.72 48.3157 li
162.66 48.3157 162.66 48.3157 162.66 48.3157 cv
162.36 48.1957 li
162.3 48.1957 162.3 48.1957 162.3 48.1957 cv
162.06 48.0757 li
162 48.0757 162 48.0157 162 48.0157 cv
161.76 47.8357 li
161.76 47.8357 161.7 47.8357 161.7 47.7757 cv
161.52 47.5957 li
161.52 47.5357 161.52 47.5357 161.46 47.5357 cv
161.34 47.2957 li
161.34 47.2357 161.34 47.2357 161.34 47.2357 cv
161.22 46.9357 li
161.22 46.5757 li
161.16 46.5157 161.16 46.5157 161.22 46.5157 cv
161.22 46.2157 li
161.22 46.1557 161.22 46.1557 161.22 46.1557 cv
161.34 45.8557 li
161.34 45.7957 li
161.46 45.5557 li
161.52 45.4957 161.52 45.4957 161.52 45.4957 cv
161.7 45.2557 li
161.76 45.2557 161.76 45.2557 161.76 45.1957 cv
161.94 45.0157 li
162 45.0157 162 45.0157 162.06 45.0157 cv
162.3 44.8357 li
162.3 44.8357 162.3 44.8357 162.36 44.8357 cv
162.66 44.7757 li
162.66 44.7157 162.66 44.7157 162.72 44.7157 cv
163.38 44.7157 li
163.38 44.7157 163.44 44.7157 163.44 44.7757 cv
163.74 44.8357 li
163.8 44.8357 li
164.04 45.0157 li
164.1 45.0157 li
164.34 45.1957 li
164.34 45.2557 164.34 45.2557 164.4 45.2557 cv
164.58 45.4957 li
164.58 45.4957 164.58 45.4957 164.58 45.5557 cv
164.76 45.7957 li
164.76 45.8557 li
164.82 46.1557 li
164.88 46.1557 164.88 46.1557 164.88 46.2157 cv
164.88 46.5157 li
cp
164.16 46.2757 mo
164.16 46.3357 li
164.1 46.0357 li
164.1 46.0957 li
163.98 45.8557 li
163.98 45.9157 li
163.8 45.7357 li
163.86 45.7357 li
163.68 45.5557 li
163.74 45.6157 li
163.44 45.4957 li
163.5 45.4957 li
163.26 45.4357 li
163.32 45.4357 li
163.02 45.4357 li
163.08 45.4357 li
162.78 45.4357 li
162.84 45.4357 li
162.54 45.4957 li
162.6 45.4957 li
162.36 45.6157 li
162.42 45.5557 li
162.06 45.9157 li
162.12 45.8557 li
162 46.0957 li
162 46.0357 li
161.94 46.3357 li
161.94 46.2757 li
161.88 46.5757 li
161.88 46.5157 li
161.94 46.8157 li
161.94 46.6957 li
162 46.9957 li
162 46.9357 li
162.12 47.1757 li
162.06 47.1157 li
162.24 47.3557 li
162.24 47.2957 li
162.42 47.4757 li
162.36 47.4157 li
162.6 47.5957 li
162.54 47.5357 li
162.84 47.6557 li
162.78 47.5957 li
163.08 47.6557 li
163.02 47.6557 li
163.32 47.5957 li
163.26 47.6557 li
163.5 47.5357 li
163.44 47.5957 li
163.74 47.4157 li
163.68 47.4757 li
163.86 47.2957 li
163.8 47.3557 li
163.98 47.1157 li
163.98 47.1757 li
164.1 46.9357 li
164.1 46.9957 li
164.16 46.6957 li
164.16 46.8157 li
164.16 46.5157 li
164.16 46.5757 li
164.16 46.2757 li
ef
164.88 46.5157 mo
164.88 46.5157 164.88 46.5157 164.88 46.5757 cv
164.88 46.8757 li
164.88 46.8757 164.88 46.9357 164.82 46.9357 cv
164.76 47.2357 li
164.76 47.2357 164.76 47.2357 164.76 47.2957 cv
164.58 47.5357 li
164.58 47.5357 164.58 47.5357 164.58 47.5957 cv
164.4 47.7757 li
164.34 47.8357 164.34 47.8357 164.34 47.8357 cv
164.1 48.0157 li
164.04 48.0757 li
163.8 48.1957 li
163.74 48.1957 li
163.44 48.3157 li
163.38 48.3157 li
163.08 48.3757 li
163.02 48.3757 li
162.72 48.3157 li
162.66 48.3157 162.66 48.3157 162.66 48.3157 cv
162.36 48.1957 li
162.3 48.1957 162.3 48.1957 162.3 48.1957 cv
162.06 48.0757 li
162 48.0757 162 48.0157 162 48.0157 cv
161.76 47.8357 li
161.76 47.8357 161.7 47.8357 161.7 47.7757 cv
161.52 47.5957 li
161.52 47.5357 161.52 47.5357 161.46 47.5357 cv
161.34 47.2957 li
161.34 47.2357 161.34 47.2357 161.34 47.2357 cv
161.22 46.9357 li
161.22 46.5757 li
161.16 46.5157 161.16 46.5157 161.22 46.5157 cv
161.22 46.2157 li
161.22 46.1557 161.22 46.1557 161.22 46.1557 cv
161.34 45.8557 li
161.34 45.7957 li
161.46 45.5557 li
161.52 45.4957 161.52 45.4957 161.52 45.4957 cv
161.7 45.2557 li
161.76 45.2557 161.76 45.2557 161.76 45.1957 cv
161.94 45.0157 li
162 45.0157 162 45.0157 162.06 45.0157 cv
162.3 44.8357 li
162.3 44.8357 162.3 44.8357 162.36 44.8357 cv
162.66 44.7757 li
162.66 44.7157 162.66 44.7157 162.72 44.7157 cv
163.38 44.7157 li
163.38 44.7157 163.44 44.7157 163.44 44.7757 cv
163.74 44.8357 li
163.8 44.8357 li
164.04 45.0157 li
164.1 45.0157 li
164.34 45.1957 li
164.34 45.2557 164.34 45.2557 164.4 45.2557 cv
164.58 45.4957 li
164.58 45.4957 164.58 45.4957 164.58 45.5557 cv
164.76 45.7957 li
164.76 45.8557 li
164.82 46.1557 li
164.88 46.1557 164.88 46.1557 164.88 46.2157 cv
164.88 46.5157 li
cp
@
164.16 46.2757 mo
164.16 46.3358 li
164.1 46.0357 li
164.1 46.0957 li
163.98 45.8557 li
163.98 45.9157 li
163.8 45.7357 li
163.86 45.7357 li
163.68 45.5558 li
163.74 45.6158 li
163.44 45.4957 li
163.5 45.4957 li
163.26 45.4357 li
163.32 45.4357 li
163.02 45.4357 li
163.08 45.4357 li
162.78 45.4357 li
162.84 45.4357 li
162.54 45.4957 li
162.6 45.4957 li
162.36 45.6158 li
162.42 45.5558 li
162.06 45.9157 li
162.12 45.8557 li
162 46.0957 li
162 46.0357 li
161.94 46.3358 li
161.94 46.2757 li
161.88 46.5757 li
161.88 46.5157 li
161.94 46.8157 li
161.94 46.6957 li
162 46.9957 li
162 46.9357 li
162.12 47.1758 li
162.06 47.1158 li
162.24 47.3557 li
162.24 47.2957 li
162.42 47.4757 li
162.36 47.4157 li
162.6 47.5957 li
162.54 47.5357 li
162.84 47.6557 li
162.78 47.5957 li
163.08 47.6557 li
163.02 47.6557 li
163.32 47.5957 li
163.26 47.6557 li
163.5 47.5357 li
163.44 47.5957 li
163.74 47.4157 li
163.68 47.4757 li
163.86 47.2957 li
163.8 47.3557 li
163.98 47.1158 li
163.98 47.1758 li
164.1 46.9357 li
164.1 46.9957 li
164.16 46.6957 li
164.16 46.8157 li
164.16 46.5157 li
164.16 46.5757 li
164.16 46.2757 li
cp
@
178.38 46.1557 mo
178.44 46.1557 178.44 46.2157 178.38 46.2157 cv
178.38 46.5757 li
178.26 46.8757 li
178.26 46.8757 178.26 46.8757 178.26 46.9357 cv
178.14 47.1757 li
178.08 47.1757 178.08 47.1757 178.08 47.2357 cv
177.9 47.4157 li
177.9 47.4757 177.84 47.4757 177.84 47.4757 cv
177.6 47.6557 li
177.6 47.7157 177.6 47.7157 177.54 47.7157 cv
177.3 47.8357 li
177.3 47.8357 177.3 47.8357 177.24 47.8357 cv
176.94 47.9557 li
176.94 47.9557 176.94 47.9557 176.88 47.9557 cv
176.58 48.0157 li
176.52 48.0157 li
176.22 47.9557 li
176.16 47.9557 li
175.86 47.8357 li
175.8 47.8357 li
175.56 47.7157 li
175.5 47.7157 175.5 47.7157 175.5 47.6557 cv
175.26 47.4757 li
175.26 47.4757 175.26 47.4757 175.26 47.4157 cv
175.02 47.2357 li
175.02 47.1757 li
174.84 46.9357 li
174.84 46.8757 174.84 46.8757 174.84 46.8757 cv
174.78 46.5757 li
174.72 46.5757 174.72 46.5157 174.72 46.5157 cv
174.72 45.8557 li
174.72 45.7957 174.72 45.7957 174.78 45.7957 cv
174.84 45.4957 li
174.84 45.4357 li
175.02 45.1957 li
175.02 45.1357 175.02 45.1357 175.02 45.1357 cv
175.26 44.8957 li
175.5 44.7157 li
175.5 44.6557 175.5 44.6557 175.56 44.6557 cv
175.8 44.5357 li
175.8 44.4757 175.86 44.4757 175.86 44.4757 cv
176.16 44.4157 li
176.22 44.3557 li
176.88 44.3557 li
176.94 44.3557 176.94 44.4157 176.94 44.4157 cv
177.24 44.4757 li
177.3 44.4757 177.3 44.4757 177.3 44.5357 cv
177.54 44.6557 li
177.6 44.6557 177.6 44.6557 177.6 44.7157 cv
177.84 44.8957 li
177.9 44.8957 li
178.08 45.1357 li
178.08 45.1357 178.08 45.1357 178.14 45.1957 cv
178.26 45.4357 li
178.26 45.4957 li
178.38 45.7957 li
178.38 45.7957 178.38 45.7957 178.38 45.8557 cv
178.38 46.1557 li
cp
177.66 45.9157 mo
177.66 45.9757 li
177.6 45.7357 li
177.6 45.7957 li
177.48 45.4957 li
177.54 45.5557 li
177.36 45.3757 li
177.42 45.4357 li
177.18 45.1957 li
177.24 45.2557 li
177 45.1357 li
177.06 45.1357 li
176.76 45.0757 li
176.82 45.0757 li
176.52 45.0757 li
176.58 45.0757 li
176.28 45.0757 li
176.34 45.0757 li
176.1 45.1357 li
176.16 45.1357 li
175.86 45.2557 li
175.98 45.1957 li
175.74 45.4357 li
175.8 45.3757 li
175.56 45.5557 li
175.62 45.4957 li
175.5 45.7957 li
175.5 45.7357 li
175.44 45.9757 li
175.44 45.9157 li
175.44 46.2157 li
175.44 46.1557 li
175.44 46.4557 li
175.44 46.3357 li
175.5 46.6357 li
175.5 46.5757 li
175.62 46.8157 li
175.56 46.7557 li
175.8 46.9957 li
175.74 46.9357 li
175.92 47.1157 li
175.86 47.0557 li
176.16 47.2357 li
176.1 47.1757 li
176.34 47.2957 li
176.28 47.2957 li
176.58 47.2957 li
176.52 47.2957 li
176.82 47.2957 li
176.76 47.2957 li
177.06 47.1757 li
177 47.2357 li
177.24 47.0557 li
177.18 47.1157 li
177.42 46.9357 li
177.36 46.9957 li
177.54 46.7557 li
177.48 46.8157 li
177.6 46.5757 li
177.6 46.6357 li
177.66 46.3357 li
177.66 46.4557 li
177.72 46.1557 li
177.72 46.2157 li
177.66 45.9157 li
ef
178.38 46.1557 mo
178.44 46.1557 178.44 46.2157 178.38 46.2157 cv
178.38 46.5757 li
178.26 46.8757 li
178.26 46.8757 178.26 46.8757 178.26 46.9357 cv
178.14 47.1757 li
178.08 47.1757 178.08 47.1757 178.08 47.2357 cv
177.9 47.4157 li
177.9 47.4757 177.84 47.4757 177.84 47.4757 cv
177.6 47.6557 li
177.6 47.7157 177.6 47.7157 177.54 47.7157 cv
177.3 47.8357 li
177.3 47.8357 177.3 47.8357 177.24 47.8357 cv
176.94 47.9557 li
176.94 47.9557 176.94 47.9557 176.88 47.9557 cv
176.58 48.0157 li
176.52 48.0157 li
176.22 47.9557 li
176.16 47.9557 li
175.86 47.8357 li
175.8 47.8357 li
175.56 47.7157 li
175.5 47.7157 175.5 47.7157 175.5 47.6557 cv
175.26 47.4757 li
175.26 47.4757 175.26 47.4757 175.26 47.4157 cv
175.02 47.2357 li
175.02 47.1757 li
174.84 46.9357 li
174.84 46.8757 174.84 46.8757 174.84 46.8757 cv
174.78 46.5757 li
174.72 46.5757 174.72 46.5157 174.72 46.5157 cv
174.72 45.8557 li
174.72 45.7957 174.72 45.7957 174.78 45.7957 cv
174.84 45.4957 li
174.84 45.4357 li
175.02 45.1957 li
175.02 45.1357 175.02 45.1357 175.02 45.1357 cv
175.26 44.8957 li
175.5 44.7157 li
175.5 44.6557 175.5 44.6557 175.56 44.6557 cv
175.8 44.5357 li
175.8 44.4757 175.86 44.4757 175.86 44.4757 cv
176.16 44.4157 li
176.22 44.3557 li
176.88 44.3557 li
176.94 44.3557 176.94 44.4157 176.94 44.4157 cv
177.24 44.4757 li
177.3 44.4757 177.3 44.4757 177.3 44.5357 cv
177.54 44.6557 li
177.6 44.6557 177.6 44.6557 177.6 44.7157 cv
177.84 44.8957 li
177.9 44.8957 li
178.08 45.1357 li
178.08 45.1357 178.08 45.1357 178.14 45.1957 cv
178.26 45.4357 li
178.26 45.4957 li
178.38 45.7957 li
178.38 45.7957 178.38 45.7957 178.38 45.8557 cv
178.38 46.1557 li
cp
@
177.66 45.9157 mo
177.66 45.9757 li
177.6 45.7357 li
177.6 45.7957 li
177.48 45.4957 li
177.54 45.5557 li
177.36 45.3757 li
177.42 45.4357 li
177.18 45.1957 li
177.24 45.2557 li
177 45.1357 li
177.06 45.1357 li
176.76 45.0757 li
176.82 45.0757 li
176.52 45.0757 li
176.58 45.0757 li
176.28 45.0757 li
176.34 45.0757 li
176.1 45.1357 li
176.16 45.1357 li
175.86 45.2557 li
175.98 45.1957 li
175.74 45.4357 li
175.8 45.3757 li
175.56 45.5557 li
175.62 45.4957 li
175.5 45.7957 li
175.5 45.7357 li
175.44 45.9757 li
175.44 45.9157 li
175.44 46.2157 li
175.44 46.1557 li
175.44 46.4557 li
175.44 46.3357 li
175.5 46.6357 li
175.5 46.5757 li
175.62 46.8157 li
175.56 46.7557 li
175.8 46.9957 li
175.74 46.9357 li
175.92 47.1157 li
175.86 47.0557 li
176.16 47.2357 li
176.1 47.1757 li
176.34 47.2957 li
176.28 47.2957 li
176.58 47.2957 li
176.52 47.2957 li
176.82 47.2957 li
176.76 47.2957 li
177.06 47.1757 li
177 47.2357 li
177.24 47.0557 li
177.18 47.1157 li
177.42 46.9357 li
177.36 46.9957 li
177.54 46.7557 li
177.48 46.8157 li
177.6 46.5757 li
177.6 46.6357 li
177.66 46.3357 li
177.66 46.4557 li
177.72 46.1557 li
177.72 46.2157 li
177.66 45.9157 li
cp
@
191.82 43.9357 mo
191.82 43.9357 191.82 43.9357 191.82 43.9957 cv
191.76 44.2957 li
191.76 44.2957 191.76 44.2957 191.76 44.3557 cv
191.64 44.5957 li
191.64 44.6557 191.64 44.6557 191.64 44.6557 cv
191.52 44.9557 li
191.46 44.9557 li
191.28 45.1957 li
191.28 45.1957 191.28 45.2557 191.22 45.2557 cv
191.04 45.4357 li
190.98 45.4357 190.98 45.4357 190.98 45.4957 cv
190.68 45.6157 li
190.68 45.6157 190.68 45.6157 190.62 45.6157 cv
190.38 45.7357 li
190.32 45.7357 190.32 45.7357 190.26 45.7357 cv
189.96 45.7357 li
189.96 45.7957 189.96 45.7957 189.9 45.7357 cv
189.54 45.7357 li
189.24 45.6157 li
189.24 45.6157 189.24 45.6157 189.18 45.6157 cv
188.94 45.4957 li
188.94 45.4357 188.88 45.4357 188.88 45.4357 cv
188.7 45.2557 li
188.64 45.2557 188.64 45.1957 188.64 45.1957 cv
188.46 45.0157 li
188.4 44.9557 188.4 44.9557 188.4 44.9557 cv
188.28 44.6557 li
188.28 44.6557 188.22 44.6557 188.22 44.5957 cv
188.16 44.3557 li
188.16 44.2957 188.16 44.2957 188.16 44.2957 cv
188.1 43.9957 li
188.1 43.9357 188.1 43.9357 188.1 43.9357 cv
188.16 43.6357 li
188.16 43.5757 188.16 43.5757 188.16 43.5157 cv
188.22 43.2757 li
188.22 43.2157 188.28 43.2157 188.28 43.2157 cv
188.4 42.9757 li
188.4 42.9157 188.4 42.9157 188.46 42.8557 cv
188.64 42.6757 li
188.64 42.6757 188.64 42.6757 188.64 42.6157 cv
188.88 42.4357 li
188.94 42.4357 li
189.18 42.2557 li
189.24 42.2557 189.24 42.2557 189.24 42.2557 cv
189.54 42.1357 li
189.9 42.1357 li
189.96 42.1357 189.96 42.1357 189.96 42.1357 cv
190.26 42.1357 li
190.32 42.1357 190.32 42.1357 190.38 42.1357 cv
190.62 42.2557 li
190.68 42.2557 190.68 42.2557 190.68 42.2557 cv
190.98 42.4357 li
190.98 42.4357 190.98 42.4357 191.04 42.4357 cv
191.22 42.6157 li
191.28 42.6157 191.28 42.6757 191.28 42.6757 cv
191.46 42.9157 li
191.46 42.9157 191.52 42.9157 191.52 42.9757 cv
191.64 43.2157 li
191.64 43.2157 191.64 43.2157 191.64 43.2757 cv
191.76 43.5157 li
191.76 43.5757 191.76 43.5757 191.76 43.6357 cv
191.82 43.9357 li
cp
191.04 43.6957 mo
191.1 43.7557 li
190.98 43.4557 li
191.04 43.5157 li
190.86 43.2757 li
190.92 43.3357 li
190.74 43.1557 li
190.8 43.1557 li
190.56 42.9757 li
190.62 43.0357 li
190.38 42.9157 li
190.44 42.9157 li
190.14 42.8557 li
190.2 42.8557 li
189.9 42.7957 li
189.96 42.7957 li
189.66 42.8557 li
189.78 42.8557 li
189.48 42.9157 li
189.54 42.9157 li
189.3 43.0357 li
189.36 42.9757 li
189.12 43.1557 li
189.18 43.1557 li
189 43.3357 li
189 43.2757 li
188.88 43.5157 li
188.94 43.4557 li
188.82 43.7557 li
188.82 43.6957 li
188.82 43.9957 li
188.82 43.9357 li
188.82 44.1757 li
188.82 44.1157 li
188.94 44.4157 li
188.88 44.3557 li
189 44.5957 li
189 44.5357 li
189.18 44.7757 li
189.12 44.7157 li
189.36 44.8957 li
189.3 44.8357 li
189.54 44.9557 li
189.48 44.9557 li
189.78 45.0757 li
189.66 45.0157 li
189.96 45.0757 li
189.9 45.0757 li
190.2 45.0157 li
190.14 45.0757 li
190.44 44.9557 li
190.38 44.9557 li
190.62 44.8357 li
190.56 44.8957 li
190.8 44.7157 li
190.74 44.7757 li
190.92 44.5357 li
190.86 44.5957 li
191.04 44.3557 li
190.98 44.4157 li
191.1 44.1157 li
191.04 44.1757 li
191.1 43.9357 li
191.1 43.9957 li
191.04 43.6957 li
ef
191.82 43.9357 mo
191.82 43.9357 191.82 43.9357 191.82 43.9957 cv
191.76 44.2957 li
191.76 44.2957 191.76 44.2957 191.76 44.3557 cv
191.64 44.5957 li
191.64 44.6557 191.64 44.6557 191.64 44.6557 cv
191.52 44.9557 li
191.46 44.9557 li
191.28 45.1957 li
191.28 45.1957 191.28 45.2557 191.22 45.2557 cv
191.04 45.4357 li
190.98 45.4357 190.98 45.4357 190.98 45.4957 cv
190.68 45.6157 li
190.68 45.6157 190.68 45.6157 190.62 45.6157 cv
190.38 45.7357 li
190.32 45.7357 190.32 45.7357 190.26 45.7357 cv
189.96 45.7357 li
189.96 45.7957 189.96 45.7957 189.9 45.7357 cv
189.54 45.7357 li
189.24 45.6157 li
189.24 45.6157 189.24 45.6157 189.18 45.6157 cv
188.94 45.4957 li
188.94 45.4357 188.88 45.4357 188.88 45.4357 cv
188.7 45.2557 li
188.64 45.2557 188.64 45.1957 188.64 45.1957 cv
188.46 45.0157 li
188.4 44.9557 188.4 44.9557 188.4 44.9557 cv
188.28 44.6557 li
188.28 44.6557 188.22 44.6557 188.22 44.5957 cv
188.16 44.3557 li
188.16 44.2957 188.16 44.2957 188.16 44.2957 cv
188.1 43.9957 li
188.1 43.9357 188.1 43.9357 188.1 43.9357 cv
188.16 43.6357 li
188.16 43.5757 188.16 43.5757 188.16 43.5157 cv
188.22 43.2757 li
188.22 43.2157 188.28 43.2157 188.28 43.2157 cv
188.4 42.9757 li
188.4 42.9157 188.4 42.9157 188.46 42.8557 cv
188.64 42.6757 li
188.64 42.6757 188.64 42.6757 188.64 42.6157 cv
188.88 42.4357 li
188.94 42.4357 li
189.18 42.2557 li
189.24 42.2557 189.24 42.2557 189.24 42.2557 cv
189.54 42.1357 li
189.9 42.1357 li
189.96 42.1357 189.96 42.1357 189.96 42.1357 cv
190.26 42.1357 li
190.32 42.1357 190.32 42.1357 190.38 42.1357 cv
190.62 42.2557 li
190.68 42.2557 190.68 42.2557 190.68 42.2557 cv
190.98 42.4357 li
190.98 42.4357 190.98 42.4357 191.04 42.4357 cv
191.22 42.6157 li
191.28 42.6157 191.28 42.6757 191.28 42.6757 cv
191.46 42.9157 li
191.46 42.9157 191.52 42.9157 191.52 42.9757 cv
191.64 43.2157 li
191.64 43.2157 191.64 43.2157 191.64 43.2757 cv
191.76 43.5157 li
191.76 43.5757 191.76 43.5757 191.76 43.6357 cv
191.82 43.9357 li
cp
@
191.04 43.6957 mo
191.1 43.7557 li
190.98 43.4557 li
191.04 43.5157 li
190.86 43.2757 li
190.92 43.3357 li
190.74 43.1557 li
190.8 43.1557 li
190.56 42.9757 li
190.62 43.0357 li
190.38 42.9157 li
190.44 42.9157 li
190.14 42.8557 li
190.2 42.8557 li
189.9 42.7957 li
189.96 42.7957 li
189.66 42.8557 li
189.78 42.8557 li
189.48 42.9157 li
189.54 42.9157 li
189.3 43.0357 li
189.36 42.9757 li
189.12 43.1557 li
189.18 43.1557 li
189 43.3357 li
189 43.2757 li
188.88 43.5157 li
188.94 43.4557 li
188.82 43.7557 li
188.82 43.6957 li
188.82 43.9957 li
188.82 43.9357 li
188.82 44.1757 li
188.82 44.1157 li
188.94 44.4157 li
188.88 44.3557 li
189 44.5957 li
189 44.5357 li
189.18 44.7757 li
189.12 44.7157 li
189.36 44.8957 li
189.3 44.8357 li
189.54 44.9557 li
189.48 44.9557 li
189.78 45.0757 li
189.66 45.0157 li
189.96 45.0757 li
189.9 45.0757 li
190.2 45.0157 li
190.14 45.0757 li
190.44 44.9557 li
190.38 44.9557 li
190.62 44.8357 li
190.56 44.8957 li
190.8 44.7157 li
190.74 44.7757 li
190.92 44.5357 li
190.86 44.5957 li
191.04 44.3557 li
190.98 44.4157 li
191.1 44.1157 li
191.04 44.1757 li
191.1 43.9357 li
191.1 43.9957 li
191.04 43.6957 li
cp
@
205.32 44.7157 mo
205.32 44.7757 205.32 44.7757 205.32 44.7757 cv
205.26 45.0757 li
205.26 45.1357 205.26 45.1357 205.26 45.1357 cv
205.2 45.4357 li
205.14 45.4957 li
205.02 45.7357 li
205.02 45.7957 205.02 45.7957 204.96 45.7957 cv
204.84 46.0357 li
204.78 46.0357 204.78 46.0957 204.78 46.0957 cv
204.54 46.2757 li
204.48 46.2757 li
204.24 46.4557 li
204.18 46.4557 204.18 46.4557 204.18 46.4557 cv
203.88 46.5157 li
203.88 46.5757 203.82 46.5757 203.82 46.5757 cv
203.52 46.5757 li
203.46 46.5757 203.46 46.5757 203.46 46.5757 cv
203.16 46.5757 li
203.1 46.5757 203.1 46.5757 203.04 46.5157 cv
202.8 46.4557 li
202.74 46.4557 202.74 46.4557 202.74 46.4557 cv
202.44 46.2757 li
202.44 46.2757 202.44 46.2757 202.38 46.2757 cv
202.14 46.0357 li
201.96 45.7957 li
201.96 45.7957 201.9 45.7957 201.9 45.7357 cv
201.78 45.4957 li
201.78 45.4357 li
201.66 45.1357 li
201.66 45.1357 201.66 45.1357 201.66 45.0757 cv
201.6 44.7757 li
201.6 44.7757 201.6 44.7757 201.6 44.7157 cv
201.66 44.4157 li
201.66 44.3557 li
201.78 44.0557 li
201.78 44.0557 201.78 44.0557 201.78 43.9957 cv
201.9 43.7557 li
201.9 43.7557 201.96 43.7557 201.96 43.6957 cv
202.14 43.5157 li
202.14 43.4557 202.14 43.4557 202.2 43.4557 cv
202.38 43.2757 li
202.44 43.2757 202.44 43.2157 202.44 43.2157 cv
202.74 43.0957 li
202.74 43.0957 202.74 43.0957 202.8 43.0957 cv
203.04 42.9757 li
203.1 42.9757 203.1 42.9757 203.16 42.9757 cv
203.46 42.9157 li
203.46 42.9157 203.46 42.9157 203.52 42.9157 cv
203.82 42.9757 li
203.88 42.9757 li
204.18 43.0957 li
204.18 43.0957 204.18 43.0957 204.24 43.0957 cv
204.48 43.2157 li
204.54 43.2757 li
204.78 43.4557 li
204.78 43.5157 li
204.96 43.6957 li
205.02 43.7557 205.02 43.7557 205.02 43.7557 cv
205.14 43.9957 li
205.14 44.0557 205.2 44.0557 205.2 44.0557 cv
205.26 44.3557 li
205.26 44.4157 li
205.32 44.7157 li
cp
204.6 44.4757 mo
204.6 44.5957 li
204.48 44.2957 li
204.54 44.3557 li
204.42 44.1157 li
204.42 44.1757 li
204.24 43.9357 li
204.3 43.9957 li
204.06 43.8157 li
204.12 43.8757 li
203.88 43.6957 li
203.94 43.7557 li
203.64 43.6357 li
203.76 43.6957 li
203.46 43.6357 li
203.52 43.6357 li
203.22 43.6957 li
203.28 43.6357 li
202.98 43.7557 li
203.04 43.6957 li
202.8 43.8757 li
202.86 43.8157 li
202.62 43.9957 li
202.68 43.9357 li
202.5 44.1757 li
202.56 44.1157 li
202.44 44.3557 li
202.44 44.2957 li
202.32 44.5957 li
202.38 44.4757 li
202.32 44.7757 li
202.32 44.7157 li
202.38 45.0157 li
202.32 44.9557 li
202.44 45.2557 li
202.44 45.1957 li
202.56 45.4357 li
202.5 45.3757 li
202.68 45.5557 li
202.62 45.5557 li
202.86 45.7357 li
202.8 45.6757 li
203.04 45.7957 li
202.98 45.7957 li
203.28 45.8557 li
203.22 45.8557 li
203.52 45.8557 li
203.46 45.8557 li
203.76 45.8557 li
203.64 45.8557 li
203.94 45.7957 li
203.88 45.7957 li
204.12 45.6757 li
204.06 45.7357 li
204.3 45.5557 li
204.24 45.5557 li
204.42 45.3757 li
204.42 45.4357 li
204.54 45.1957 li
204.48 45.2557 li
204.6 44.9557 li
204.6 45.0157 li
204.6 44.7157 li
204.6 44.7757 li
204.6 44.4757 li
ef
205.32 44.7157 mo
205.32 44.7757 205.32 44.7757 205.32 44.7757 cv
205.26 45.0757 li
205.26 45.1357 205.26 45.1357 205.26 45.1357 cv
205.2 45.4357 li
205.14 45.4957 li
205.02 45.7357 li
205.02 45.7957 205.02 45.7957 204.96 45.7957 cv
204.84 46.0357 li
204.78 46.0357 204.78 46.0957 204.78 46.0957 cv
204.54 46.2757 li
204.48 46.2757 li
204.24 46.4557 li
204.18 46.4557 204.18 46.4557 204.18 46.4557 cv
203.88 46.5157 li
203.88 46.5757 203.82 46.5757 203.82 46.5757 cv
203.52 46.5757 li
203.46 46.5757 203.46 46.5757 203.46 46.5757 cv
203.16 46.5757 li
203.1 46.5757 203.1 46.5757 203.04 46.5157 cv
202.8 46.4557 li
202.74 46.4557 202.74 46.4557 202.74 46.4557 cv
202.44 46.2757 li
202.44 46.2757 202.44 46.2757 202.38 46.2757 cv
202.14 46.0357 li
201.96 45.7957 li
201.96 45.7957 201.9 45.7957 201.9 45.7357 cv
201.78 45.4957 li
201.78 45.4357 li
201.66 45.1357 li
201.66 45.1357 201.66 45.1357 201.66 45.0757 cv
201.6 44.7757 li
201.6 44.7757 201.6 44.7757 201.6 44.7157 cv
201.66 44.4157 li
201.66 44.3557 li
201.78 44.0557 li
201.78 44.0557 201.78 44.0557 201.78 43.9957 cv
201.9 43.7557 li
201.9 43.7557 201.96 43.7557 201.96 43.6957 cv
202.14 43.5157 li
202.14 43.4557 202.14 43.4557 202.2 43.4557 cv
202.38 43.2757 li
202.44 43.2757 202.44 43.2157 202.44 43.2157 cv
202.74 43.0957 li
202.74 43.0957 202.74 43.0957 202.8 43.0957 cv
203.04 42.9757 li
203.1 42.9757 203.1 42.9757 203.16 42.9757 cv
203.46 42.9157 li
203.46 42.9157 203.46 42.9157 203.52 42.9157 cv
203.82 42.9757 li
203.88 42.9757 li
204.18 43.0957 li
204.18 43.0957 204.18 43.0957 204.24 43.0957 cv
204.48 43.2157 li
204.54 43.2757 li
204.78 43.4557 li
204.78 43.5157 li
204.96 43.6957 li
205.02 43.7557 205.02 43.7557 205.02 43.7557 cv
205.14 43.9957 li
205.14 44.0557 205.2 44.0557 205.2 44.0557 cv
205.26 44.3557 li
205.26 44.4157 li
205.32 44.7157 li
cp
@
204.6 44.4757 mo
204.6 44.5957 li
204.48 44.2957 li
204.54 44.3557 li
204.42 44.1157 li
204.42 44.1757 li
204.24 43.9357 li
204.3 43.9957 li
204.06 43.8157 li
204.12 43.8757 li
203.88 43.6957 li
203.94 43.7557 li
203.64 43.6357 li
203.76 43.6957 li
203.46 43.6357 li
203.52 43.6357 li
203.22 43.6957 li
203.28 43.6357 li
202.98 43.7557 li
203.04 43.6957 li
202.8 43.8757 li
202.86 43.8157 li
202.62 43.9957 li
202.68 43.9357 li
202.5 44.1757 li
202.56 44.1157 li
202.44 44.3557 li
202.44 44.2957 li
202.32 44.5957 li
202.38 44.4757 li
202.32 44.7757 li
202.32 44.7157 li
202.38 45.0157 li
202.32 44.9557 li
202.44 45.2557 li
202.44 45.1957 li
202.56 45.4357 li
202.5 45.3757 li
202.68 45.5557 li
202.62 45.5557 li
202.86 45.7357 li
202.8 45.6757 li
203.04 45.7957 li
202.98 45.7957 li
203.28 45.8557 li
203.22 45.8557 li
203.52 45.8557 li
203.46 45.8557 li
203.76 45.8557 li
203.64 45.8557 li
203.94 45.7957 li
203.88 45.7957 li
204.12 45.6757 li
204.06 45.7357 li
204.3 45.5557 li
204.24 45.5557 li
204.42 45.3757 li
204.42 45.4357 li
204.54 45.1957 li
204.48 45.2557 li
204.6 44.9557 li
204.6 45.0157 li
204.6 44.7157 li
204.6 44.7757 li
204.6 44.4757 li
cp
@
218.7 43.9957 mo
218.7 44.0557 218.7 44.0557 218.7 44.1157 cv
218.7 44.3557 li
218.7 44.4157 218.7 44.4157 218.64 44.4757 cv
218.58 44.7157 li
218.58 44.7757 218.58 44.7757 218.58 44.7757 cv
218.4 45.0757 li
218.22 45.3157 li
218.16 45.3757 li
217.92 45.5557 li
217.92 45.5557 217.92 45.5557 217.86 45.6157 cv
217.62 45.7357 li
217.56 45.7357 li
217.26 45.8557 li
216.54 45.8557 li
216.48 45.8557 216.48 45.8557 216.48 45.8557 cv
216.18 45.7357 li
216.12 45.7357 li
215.88 45.6157 li
215.82 45.5557 215.82 45.5557 215.82 45.5557 cv
215.58 45.3757 li
215.52 45.3157 li
215.34 45.0757 li
215.34 45.0757 215.34 45.0757 215.28 45.0757 cv
215.16 44.7757 li
215.16 44.7757 215.16 44.7757 215.16 44.7157 cv
215.04 44.4757 li
215.04 44.4157 215.04 44.4157 215.04 44.3557 cv
215.04 44.1157 li
214.98 44.0557 214.98 44.0557 215.04 43.9957 cv
215.04 43.7557 li
215.04 43.6957 215.04 43.6957 215.04 43.6357 cv
215.16 43.3957 li
215.16 43.3357 215.16 43.3357 215.16 43.3357 cv
215.28 43.0957 li
215.34 43.0357 215.34 43.0357 215.34 42.9757 cv
215.52 42.7957 li
215.58 42.7957 215.58 42.7957 215.58 42.7357 cv
215.82 42.5557 li
215.82 42.5557 215.82 42.5557 215.88 42.4957 cv
216.12 42.3757 li
216.18 42.3757 li
216.48 42.2557 li
216.48 42.2557 216.48 42.2557 216.54 42.2557 cv
217.26 42.2557 li
217.56 42.3757 li
217.62 42.3757 li
217.86 42.4957 li
217.92 42.5557 217.92 42.5557 217.92 42.5557 cv
218.16 42.7357 li
218.22 42.7957 li
218.4 43.0357 li
218.4 43.0357 218.4 43.0357 218.4 43.0957 cv
218.58 43.3357 li
218.58 43.3357 218.58 43.3357 218.58 43.3957 cv
218.64 43.6357 li
218.7 43.6957 218.7 43.6957 218.7 43.7557 cv
218.7 43.9957 li
cp
217.98 43.8157 mo
217.98 43.8757 li
217.92 43.5757 li
217.92 43.6357 li
217.8 43.3957 li
217.8 43.4557 li
217.62 43.2157 li
217.68 43.2757 li
217.5 43.0957 li
217.56 43.1557 li
217.26 43.0357 li
217.32 43.0357 li
217.08 42.9757 li
217.14 42.9757 li
216.84 42.9157 li
216.9 42.9157 li
216.6 42.9757 li
216.66 42.9757 li
216.36 43.0357 li
216.42 43.0357 li
216.18 43.1557 li
216.24 43.0957 li
215.88 43.4557 li
215.94 43.3957 li
215.82 43.6357 li
215.82 43.5757 li
215.76 43.8757 li
215.76 43.8157 li
215.7 44.1157 li
215.7 43.9957 li
215.76 44.2957 li
215.76 44.2357 li
215.82 44.5357 li
215.82 44.4757 li
215.94 44.7157 li
215.88 44.6557 li
216.06 44.8957 li
216.06 44.8357 li
216.24 45.0157 li
216.18 44.9557 li
216.42 45.0757 li
216.36 45.0757 li
216.66 45.1357 li
216.6 45.1357 li
216.9 45.1957 li
216.84 45.1957 li
217.14 45.1357 li
217.08 45.1357 li
217.32 45.0757 li
217.26 45.0757 li
217.56 44.9557 li
217.5 45.0157 li
217.68 44.8357 li
217.62 44.8957 li
217.8 44.6557 li
217.8 44.7157 li
217.92 44.4757 li
217.92 44.5357 li
217.98 44.2357 li
217.98 44.2957 li
217.98 43.9957 li
217.98 44.1157 li
217.98 43.8157 li
ef
218.7 43.9957 mo
218.7 44.0557 218.7 44.0557 218.7 44.1157 cv
218.7 44.3557 li
218.7 44.4157 218.7 44.4157 218.64 44.4757 cv
218.58 44.7157 li
218.58 44.7757 218.58 44.7757 218.58 44.7757 cv
218.4 45.0757 li
218.22 45.3157 li
218.16 45.3757 li
217.92 45.5557 li
217.92 45.5557 217.92 45.5557 217.86 45.6157 cv
217.62 45.7357 li
217.56 45.7357 li
217.26 45.8557 li
216.54 45.8557 li
216.48 45.8557 216.48 45.8557 216.48 45.8557 cv
216.18 45.7357 li
216.12 45.7357 li
215.88 45.6157 li
215.82 45.5557 215.82 45.5557 215.82 45.5557 cv
215.58 45.3757 li
215.52 45.3157 li
215.34 45.0757 li
215.34 45.0757 215.34 45.0757 215.28 45.0757 cv
215.16 44.7757 li
215.16 44.7757 215.16 44.7757 215.16 44.7157 cv
215.04 44.4757 li
215.04 44.4157 215.04 44.4157 215.04 44.3557 cv
215.04 44.1157 li
214.98 44.0557 214.98 44.0557 215.04 43.9957 cv
215.04 43.7557 li
215.04 43.6957 215.04 43.6957 215.04 43.6357 cv
215.16 43.3957 li
215.16 43.3357 215.16 43.3357 215.16 43.3357 cv
215.28 43.0957 li
215.34 43.0357 215.34 43.0357 215.34 42.9757 cv
215.52 42.7957 li
215.58 42.7957 215.58 42.7957 215.58 42.7357 cv
215.82 42.5557 li
215.82 42.5557 215.82 42.5557 215.88 42.4957 cv
216.12 42.3757 li
216.18 42.3757 li
216.48 42.2557 li
216.48 42.2557 216.48 42.2557 216.54 42.2557 cv
217.26 42.2557 li
217.56 42.3757 li
217.62 42.3757 li
217.86 42.4957 li
217.92 42.5557 217.92 42.5557 217.92 42.5557 cv
218.16 42.7357 li
218.22 42.7957 li
218.4 43.0357 li
218.4 43.0357 218.4 43.0357 218.4 43.0957 cv
218.58 43.3357 li
218.58 43.3357 218.58 43.3357 218.58 43.3957 cv
218.64 43.6357 li
218.7 43.6957 218.7 43.6957 218.7 43.7557 cv
218.7 43.9957 li
cp
@
217.98 43.8157 mo
217.98 43.8757 li
217.92 43.5757 li
217.92 43.6357 li
217.8 43.3957 li
217.8 43.4557 li
217.62 43.2157 li
217.68 43.2757 li
217.5 43.0957 li
217.56 43.1557 li
217.26 43.0357 li
217.32 43.0357 li
217.08 42.9757 li
217.14 42.9757 li
216.84 42.9157 li
216.9 42.9157 li
216.6 42.9757 li
216.66 42.9757 li
216.36 43.0357 li
216.42 43.0357 li
216.18 43.1557 li
216.24 43.0957 li
215.88 43.4557 li
215.94 43.3957 li
215.82 43.6357 li
215.82 43.5757 li
215.76 43.8757 li
215.76 43.8157 li
215.7 44.1157 li
215.7 43.9957 li
215.76 44.2957 li
215.76 44.2357 li
215.82 44.5357 li
215.82 44.4757 li
215.94 44.7157 li
215.88 44.6557 li
216.06 44.8957 li
216.06 44.8357 li
216.24 45.0157 li
216.18 44.9557 li
216.42 45.0757 li
216.36 45.0757 li
216.66 45.1357 li
216.6 45.1357 li
216.9 45.1957 li
216.84 45.1957 li
217.14 45.1357 li
217.08 45.1357 li
217.32 45.0757 li
217.26 45.0757 li
217.56 44.9557 li
217.5 45.0157 li
217.68 44.8357 li
217.62 44.8957 li
217.8 44.6557 li
217.8 44.7157 li
217.92 44.4757 li
217.92 44.5357 li
217.98 44.2357 li
217.98 44.2957 li
217.98 43.9957 li
217.98 44.1157 li
217.98 43.8157 li
cp
@
232.2 42.7357 mo
232.26 42.7357 232.26 42.7957 232.2 42.7957 cv
232.2 43.1557 li
232.08 43.4557 li
232.08 43.4557 232.08 43.4557 232.08 43.5157 cv
231.96 43.7557 li
231.9 43.7557 231.9 43.8157 231.9 43.8157 cv
231.72 43.9957 li
231.72 44.0557 231.66 44.0557 231.66 44.0557 cv
231.42 44.2357 li
231.42 44.2957 231.42 44.2957 231.36 44.2957 cv
231.12 44.4157 li
231.12 44.4157 231.12 44.4157 231.06 44.4757 cv
230.76 44.5357 li
230.76 44.5357 230.76 44.5357 230.7 44.5357 cv
230.4 44.5957 li
230.34 44.5957 li
230.04 44.5357 li
229.98 44.5357 li
229.68 44.4757 li
229.68 44.4157 229.68 44.4157 229.62 44.4157 cv
229.38 44.2957 li
229.38 44.2957 229.32 44.2957 229.32 44.2357 cv
229.08 44.0557 li
228.84 43.8157 li
228.84 43.7557 li
228.66 43.5157 li
228.66 43.4557 228.66 43.4557 228.66 43.4557 cv
228.6 43.1557 li
228.54 43.1557 228.54 43.0957 228.54 43.0957 cv
228.54 42.4357 li
228.54 42.4357 228.54 42.3757 228.6 42.3757 cv
228.66 42.0757 li
228.66 42.0157 li
228.84 41.7757 li
228.84 41.7157 li
229.08 41.4757 li
229.32 41.2957 li
229.32 41.2357 229.38 41.2357 229.38 41.2357 cv
229.62 41.1157 li
229.68 41.1157 229.68 41.0557 229.68 41.0557 cv
229.98 40.9957 li
230.04 40.9957 li
230.34 40.9357 li
230.4 40.9357 li
230.7 40.9957 li
230.76 40.9957 230.76 40.9957 230.76 40.9957 cv
231.06 41.0557 li
231.12 41.0557 231.12 41.1157 231.12 41.1157 cv
231.36 41.2357 li
231.42 41.2357 231.42 41.2357 231.42 41.2957 cv
231.66 41.4757 li
231.72 41.4757 li
231.9 41.7157 li
231.9 41.7157 231.9 41.7757 231.96 41.7757 cv
232.08 42.0157 li
232.08 42.0757 li
232.2 42.3757 li
232.2 42.7357 li
cp
231.48 42.4957 mo
231.48 42.5557 li
231.42 42.3157 li
231.42 42.3757 li
231.3 42.0757 li
231.36 42.1357 li
231.18 41.9557 li
231.24 42.0157 li
231 41.8357 li
231.06 41.8357 li
230.82 41.7157 li
230.88 41.7157 li
230.58 41.6557 li
230.64 41.6557 li
230.34 41.6557 li
230.4 41.6557 li
230.1 41.6557 li
230.16 41.6557 li
229.92 41.7157 li
229.98 41.7157 li
229.74 41.8357 li
229.8 41.8357 li
229.56 42.0157 li
229.62 41.9557 li
229.44 42.1957 li
229.44 42.0757 li
229.32 42.3757 li
229.32 42.3157 li
229.26 42.5557 li
229.26 42.4957 li
229.26 42.7957 li
229.26 42.7357 li
229.26 43.0357 li
229.26 42.9757 li
229.32 43.2157 li
229.32 43.1557 li
229.44 43.3957 li
229.44 43.3357 li
229.62 43.5757 li
229.56 43.5157 li
229.8 43.6957 li
229.74 43.6957 li
229.98 43.8157 li
229.92 43.7557 li
230.16 43.8757 li
230.1 43.8757 li
230.4 43.8757 li
230.34 43.8757 li
230.64 43.8757 li
230.58 43.8757 li
230.88 43.7557 li
230.82 43.8157 li
231.06 43.6957 li
231 43.6957 li
231.24 43.5157 li
231.18 43.5757 li
231.36 43.3357 li
231.3 43.3957 li
231.42 43.1557 li
231.42 43.2157 li
231.48 42.9757 li
231.48 43.0357 li
231.54 42.7357 li
231.54 42.7957 li
231.48 42.4957 li
ef
232.2 42.7357 mo
232.26 42.7357 232.26 42.7957 232.2 42.7957 cv
232.2 43.1557 li
232.08 43.4557 li
232.08 43.4557 232.08 43.4557 232.08 43.5157 cv
231.96 43.7557 li
231.9 43.7557 231.9 43.8157 231.9 43.8157 cv
231.72 43.9957 li
231.72 44.0557 231.66 44.0557 231.66 44.0557 cv
231.42 44.2357 li
231.42 44.2957 231.42 44.2957 231.36 44.2957 cv
231.12 44.4157 li
231.12 44.4157 231.12 44.4157 231.06 44.4757 cv
230.76 44.5357 li
230.76 44.5357 230.76 44.5357 230.7 44.5357 cv
230.4 44.5957 li
230.34 44.5957 li
230.04 44.5357 li
229.98 44.5357 li
229.68 44.4757 li
229.68 44.4157 229.68 44.4157 229.62 44.4157 cv
229.38 44.2957 li
229.38 44.2957 229.32 44.2957 229.32 44.2357 cv
229.08 44.0557 li
228.84 43.8157 li
228.84 43.7557 li
228.66 43.5157 li
228.66 43.4557 228.66 43.4557 228.66 43.4557 cv
228.6 43.1557 li
228.54 43.1557 228.54 43.0957 228.54 43.0957 cv
228.54 42.4357 li
228.54 42.4357 228.54 42.3757 228.6 42.3757 cv
228.66 42.0757 li
228.66 42.0157 li
228.84 41.7757 li
228.84 41.7157 li
229.08 41.4757 li
229.32 41.2957 li
229.32 41.2357 229.38 41.2357 229.38 41.2357 cv
229.62 41.1157 li
229.68 41.1157 229.68 41.0557 229.68 41.0557 cv
229.98 40.9957 li
230.04 40.9957 li
230.34 40.9357 li
230.4 40.9357 li
230.7 40.9957 li
230.76 40.9957 230.76 40.9957 230.76 40.9957 cv
231.06 41.0557 li
231.12 41.0557 231.12 41.1157 231.12 41.1157 cv
231.36 41.2357 li
231.42 41.2357 231.42 41.2357 231.42 41.2957 cv
231.66 41.4757 li
231.72 41.4757 li
231.9 41.7157 li
231.9 41.7157 231.9 41.7757 231.96 41.7757 cv
232.08 42.0157 li
232.08 42.0757 li
232.2 42.3757 li
232.2 42.7357 li
cp
@
231.48 42.4957 mo
231.48 42.5558 li
231.42 42.3157 li
231.42 42.3757 li
231.3 42.0757 li
231.36 42.1357 li
231.18 41.9557 li
231.24 42.0157 li
231 41.8358 li
231.06 41.8358 li
230.82 41.7157 li
230.88 41.7157 li
230.58 41.6557 li
230.64 41.6557 li
230.34 41.6557 li
230.4 41.6557 li
230.1 41.6557 li
230.16 41.6557 li
229.92 41.7157 li
229.98 41.7157 li
229.74 41.8358 li
229.8 41.8358 li
229.56 42.0157 li
229.62 41.9557 li
229.44 42.1957 li
229.44 42.0757 li
229.32 42.3757 li
229.32 42.3157 li
229.26 42.5558 li
229.26 42.4957 li
229.26 42.7957 li
229.26 42.7357 li
229.26 43.0357 li
229.26 42.9757 li
229.32 43.2157 li
229.32 43.1557 li
229.44 43.3958 li
229.44 43.3358 li
229.62 43.5757 li
229.56 43.5157 li
229.8 43.6957 li
229.74 43.6957 li
229.98 43.8157 li
229.92 43.7557 li
230.16 43.8757 li
230.1 43.8757 li
230.4 43.8757 li
230.34 43.8757 li
230.64 43.8757 li
230.58 43.8757 li
230.88 43.7557 li
230.82 43.8157 li
231.06 43.6957 li
231 43.6957 li
231.24 43.5157 li
231.18 43.5757 li
231.36 43.3358 li
231.3 43.3958 li
231.42 43.1557 li
231.42 43.2157 li
231.48 42.9757 li
231.48 43.0357 li
231.54 42.7357 li
231.54 42.7957 li
231.48 42.4957 li
cp
@
245.64 42.8557 mo
245.64 42.9157 li
245.58 43.2157 li
245.58 43.2757 li
245.52 43.5757 li
245.52 43.5757 245.46 43.5757 245.46 43.6357 cv
245.34 43.8757 li
245.34 43.8757 245.34 43.9357 245.28 43.9357 cv
245.1 44.1157 li
245.1 44.1757 245.1 44.1757 245.04 44.1757 cv
244.86 44.3557 li
244.8 44.4157 244.8 44.4157 244.8 44.4157 cv
244.56 44.5357 li
244.5 44.5357 244.5 44.5957 244.5 44.5957 cv
244.2 44.6557 li
244.14 44.6557 244.14 44.6557 244.14 44.6557 cv
243.84 44.7157 li
243.78 44.7157 243.78 44.7157 243.72 44.7157 cv
243.42 44.6557 li
243.42 44.6557 243.42 44.6557 243.36 44.6557 cv
243.06 44.5957 li
243.06 44.5957 243.06 44.5357 243 44.5357 cv
242.76 44.4157 li
242.76 44.4157 242.7 44.4157 242.7 44.3557 cv
242.52 44.1757 li
242.46 44.1757 242.46 44.1757 242.46 44.1757 cv
242.28 43.9357 li
242.22 43.9357 242.22 43.8757 242.22 43.8757 cv
242.1 43.6357 li
242.1 43.5757 242.04 43.5757 242.04 43.5757 cv
241.98 43.2757 li
241.98 43.2157 li
241.92 42.9157 li
241.92 42.8557 li
241.98 42.5557 li
241.98 42.4957 241.98 42.4957 241.98 42.4957 cv
242.04 42.1957 li
242.04 42.1957 242.1 42.1957 242.1 42.1357 cv
242.22 41.8957 li
242.22 41.8957 242.22 41.8357 242.28 41.8357 cv
242.46 41.5957 li
242.7 41.4157 li
242.7 41.3557 242.76 41.3557 242.76 41.3557 cv
243 41.2357 li
243.06 41.2357 243.06 41.1757 243.06 41.1757 cv
243.36 41.1157 li
243.42 41.1157 243.42 41.1157 243.42 41.1157 cv
243.72 41.0557 li
243.78 41.0557 243.78 41.0557 243.84 41.0557 cv
244.14 41.1157 li
244.14 41.1157 244.14 41.1157 244.2 41.1157 cv
244.5 41.1757 li
244.5 41.1757 244.5 41.2357 244.56 41.2357 cv
244.8 41.3557 li
244.8 41.3557 244.86 41.3557 244.86 41.4157 cv
245.1 41.5957 li
245.1 41.5957 245.1 41.5957 245.1 41.6557 cv
245.28 41.8357 li
245.34 41.8357 245.34 41.8957 245.34 41.8957 cv
245.46 42.1357 li
245.46 42.1957 245.52 42.1957 245.52 42.1957 cv
245.58 42.4957 li
245.58 42.4957 245.58 42.4957 245.58 42.5557 cv
245.64 42.8557 li
cp
244.92 42.6157 mo
244.92 42.6757 li
244.8 42.4357 li
244.86 42.4957 li
244.68 42.2557 li
244.74 42.3157 li
244.56 42.0757 li
244.62 42.1357 li
244.38 41.9557 li
244.44 41.9557 li
244.2 41.8357 li
244.26 41.8357 li
243.96 41.7757 li
244.02 41.7757 li
243.72 41.7757 li
243.84 41.7757 li
243.54 41.7757 li
243.6 41.7757 li
243.3 41.8357 li
243.36 41.8357 li
243.12 41.9557 li
243.18 41.9557 li
242.94 42.1357 li
243 42.0757 li
242.82 42.3157 li
242.88 42.2557 li
242.7 42.4957 li
242.76 42.4357 li
242.64 42.6757 li
242.64 42.6157 li
242.64 42.9157 li
242.64 42.8557 li
242.64 43.1557 li
242.64 43.0957 li
242.76 43.3357 li
242.7 43.2757 li
242.88 43.5157 li
242.82 43.4557 li
243 43.6957 li
242.94 43.6357 li
243.18 43.8157 li
243.12 43.8157 li
243.36 43.9357 li
243.3 43.9357 li
243.6 43.9957 li
243.54 43.9957 li
243.84 43.9957 li
243.72 43.9957 li
244.02 43.9957 li
243.96 43.9957 li
244.26 43.9357 li
244.2 43.9357 li
244.44 43.8157 li
244.38 43.8157 li
244.62 43.6357 li
244.56 43.6957 li
244.74 43.4557 li
244.68 43.5157 li
244.86 43.2757 li
244.8 43.3357 li
244.92 43.0957 li
244.92 43.1557 li
244.92 42.8557 li
244.92 42.9157 li
244.92 42.6157 li
ef
.015 lw
245.64 42.8557 mo
245.64 42.9157 li
245.58 43.2157 li
245.58 43.2757 li
245.52 43.5757 li
245.52 43.5757 245.46 43.5757 245.46 43.6357 cv
245.34 43.8757 li
245.34 43.8757 245.34 43.9357 245.28 43.9357 cv
245.1 44.1157 li
245.1 44.1757 245.1 44.1757 245.04 44.1757 cv
244.86 44.3557 li
244.8 44.4157 244.8 44.4157 244.8 44.4157 cv
244.56 44.5357 li
244.5 44.5357 244.5 44.5957 244.5 44.5957 cv
244.2 44.6557 li
244.14 44.6557 244.14 44.6557 244.14 44.6557 cv
243.84 44.7157 li
243.78 44.7157 243.78 44.7157 243.72 44.7157 cv
243.42 44.6557 li
243.42 44.6557 243.42 44.6557 243.36 44.6557 cv
243.06 44.5957 li
243.06 44.5957 243.06 44.5357 243 44.5357 cv
242.76 44.4157 li
242.76 44.4157 242.7 44.4157 242.7 44.3557 cv
242.52 44.1757 li
242.46 44.1757 242.46 44.1757 242.46 44.1757 cv
242.28 43.9357 li
242.22 43.9357 242.22 43.8757 242.22 43.8757 cv
242.1 43.6357 li
242.1 43.5757 242.04 43.5757 242.04 43.5757 cv
241.98 43.2757 li
241.98 43.2157 li
241.92 42.9157 li
241.92 42.8557 li
241.98 42.5557 li
241.98 42.4957 241.98 42.4957 241.98 42.4957 cv
242.04 42.1957 li
242.04 42.1957 242.1 42.1957 242.1 42.1357 cv
242.22 41.8957 li
242.22 41.8957 242.22 41.8357 242.28 41.8357 cv
242.46 41.5957 li
242.7 41.4157 li
242.7 41.3557 242.76 41.3557 242.76 41.3557 cv
243 41.2357 li
243.06 41.2357 243.06 41.1757 243.06 41.1757 cv
243.36 41.1157 li
243.42 41.1157 243.42 41.1157 243.42 41.1157 cv
243.72 41.0557 li
243.78 41.0557 243.78 41.0557 243.84 41.0557 cv
244.14 41.1157 li
244.14 41.1157 244.14 41.1157 244.2 41.1157 cv
244.5 41.1757 li
244.5 41.1757 244.5 41.2357 244.56 41.2357 cv
244.8 41.3557 li
244.8 41.3557 244.86 41.3557 244.86 41.4157 cv
245.1 41.5957 li
245.1 41.5957 245.1 41.5957 245.1 41.6557 cv
245.28 41.8357 li
245.34 41.8357 245.34 41.8957 245.34 41.8957 cv
245.46 42.1357 li
245.46 42.1957 245.52 42.1957 245.52 42.1957 cv
245.58 42.4957 li
245.58 42.4957 245.58 42.4957 245.58 42.5557 cv
245.64 42.8557 li
cp
@
244.92 42.6157 mo
244.92 42.6758 li
244.8 42.4357 li
244.86 42.4957 li
244.68 42.2557 li
244.74 42.3157 li
244.56 42.0757 li
244.62 42.1357 li
244.38 41.9557 li
244.44 41.9557 li
244.2 41.8357 li
244.26 41.8357 li
243.96 41.7757 li
244.02 41.7757 li
243.72 41.7757 li
243.84 41.7757 li
243.54 41.7757 li
243.6 41.7757 li
243.3 41.8357 li
243.36 41.8357 li
243.12 41.9557 li
243.18 41.9557 li
242.94 42.1357 li
243 42.0757 li
242.82 42.3157 li
242.88 42.2557 li
242.7 42.4957 li
242.76 42.4357 li
242.64 42.6758 li
242.64 42.6157 li
242.64 42.9157 li
242.64 42.8557 li
242.64 43.1557 li
242.64 43.0957 li
242.76 43.3357 li
242.7 43.2757 li
242.88 43.5157 li
242.82 43.4557 li
243 43.6957 li
242.94 43.6357 li
243.18 43.8157 li
243.12 43.8157 li
243.36 43.9357 li
243.3 43.9357 li
243.6 43.9957 li
243.54 43.9957 li
243.84 43.9957 li
243.72 43.9957 li
244.02 43.9957 li
243.96 43.9957 li
244.26 43.9357 li
244.2 43.9357 li
244.44 43.8157 li
244.38 43.8157 li
244.62 43.6357 li
244.56 43.6957 li
244.74 43.4557 li
244.68 43.5157 li
244.86 43.2757 li
244.8 43.3357 li
244.92 43.0957 li
244.92 43.1557 li
244.92 42.8557 li
244.92 42.9157 li
244.92 42.6157 li
cp
@
259.14 40.9357 mo
259.14 40.9957 259.14 40.9957 259.14 41.0557 cv
259.14 41.3557 li
259.14 41.3557 259.14 41.3557 259.08 41.4157 cv
259.02 41.6557 li
259.02 41.7157 259.02 41.7157 259.02 41.7157 cv
258.84 42.0157 li
258.66 42.2557 li
258.6 42.3157 258.6 42.3157 258.6 42.3157 cv
258.36 42.4957 li
258.36 42.4957 258.3 42.4957 258.3 42.5557 cv
258.06 42.6757 li
258 42.6757 258 42.6757 258 42.6757 cv
257.7 42.7957 li
257.34 42.7957 li
257.28 42.8557 257.28 42.8557 257.28 42.7957 cv
256.98 42.7957 li
256.92 42.7957 256.92 42.7957 256.86 42.7957 cv
256.62 42.6757 li
256.56 42.6757 256.56 42.6757 256.56 42.6757 cv
256.26 42.5557 li
256.26 42.4957 256.26 42.4957 256.2 42.4957 cv
256.02 42.3157 li
256.02 42.3157 255.96 42.3157 255.96 42.2557 cv
255.78 42.0757 li
255.78 42.0157 255.72 42.0157 255.72 42.0157 cv
255.6 41.7157 li
255.6 41.7157 255.6 41.7157 255.6 41.6557 cv
255.48 41.4157 li
255.48 41.3557 255.48 41.3557 255.48 41.3557 cv
255.42 41.0557 li
255.42 40.9957 255.42 40.9957 255.42 40.9357 cv
255.48 40.6957 li
255.48 40.6357 255.48 40.6357 255.48 40.5757 cv
255.6 40.3357 li
255.6 40.2757 255.6 40.2757 255.6 40.2757 cv
255.72 40.0357 li
255.72 39.9757 255.78 39.9757 255.78 39.9757 cv
255.96 39.7357 li
255.96 39.7357 255.96 39.7357 256.02 39.6757 cv
256.2 39.4957 li
256.26 39.4957 256.26 39.4957 256.26 39.4357 cv
256.56 39.3157 li
256.56 39.3157 256.56 39.3157 256.62 39.3157 cv
256.86 39.2557 li
256.92 39.1957 256.92 39.1957 256.98 39.1957 cv
257.28 39.1957 li
257.28 39.1957 257.28 39.1957 257.34 39.1957 cv
257.64 39.1957 li
257.64 39.1957 257.7 39.1957 257.7 39.2557 cv
258 39.3157 li
258 39.3157 258 39.3157 258.06 39.3157 cv
258.3 39.4357 li
258.3 39.4957 258.36 39.4957 258.36 39.4957 cv
258.6 39.6757 li
258.6 39.6757 258.6 39.7357 258.66 39.7357 cv
258.84 39.9757 li
258.84 39.9757 258.84 39.9757 258.84 40.0357 cv
259.02 40.2757 li
259.02 40.2757 259.02 40.2757 259.02 40.3357 cv
259.08 40.5757 li
259.14 40.6357 259.14 40.6357 259.14 40.6957 cv
259.14 40.9357 li
cp
258.42 40.7557 mo
258.42 40.8157 li
258.36 40.5157 li
258.36 40.5757 li
258.24 40.3357 li
258.24 40.3957 li
258.06 40.1557 li
258.12 40.2157 li
257.88 40.0357 li
257.94 40.0957 li
257.7 39.9757 li
257.76 39.9757 li
257.46 39.9157 li
257.58 39.9157 li
257.28 39.8557 li
257.34 39.8557 li
257.04 39.9157 li
257.1 39.9157 li
256.8 39.9757 li
256.86 39.9757 li
256.62 40.0957 li
256.68 40.0357 li
256.32 40.3957 li
256.38 40.3357 li
256.26 40.5757 li
256.26 40.5157 li
256.14 40.8157 li
256.2 40.7557 li
256.14 41.0557 li
256.14 40.9357 li
256.2 41.2357 li
256.14 41.1757 li
256.26 41.4757 li
256.26 41.4157 li
256.38 41.6557 li
256.32 41.5957 li
256.5 41.8357 li
256.44 41.7757 li
256.68 41.9557 li
256.62 41.8957 li
256.86 42.0157 li
256.8 42.0157 li
257.1 42.1357 li
257.04 42.0757 li
257.34 42.1357 li
257.28 42.1357 li
257.58 42.0757 li
257.46 42.1357 li
257.76 42.0157 li
257.7 42.0157 li
257.94 41.8957 li
257.88 41.9557 li
258.12 41.7757 li
258.06 41.8357 li
258.24 41.5957 li
258.24 41.6557 li
258.36 41.4157 li
258.36 41.4757 li
258.42 41.1757 li
258.42 41.2357 li
258.42 40.9357 li
258.42 41.0557 li
258.42 40.7557 li
ef
259.14 40.9357 mo
259.14 40.9957 259.14 40.9957 259.14 41.0557 cv
259.14 41.3557 li
259.14 41.3557 259.14 41.3557 259.08 41.4157 cv
259.02 41.6557 li
259.02 41.7157 259.02 41.7157 259.02 41.7157 cv
258.84 42.0157 li
258.66 42.2557 li
258.6 42.3157 258.6 42.3157 258.6 42.3157 cv
258.36 42.4957 li
258.36 42.4957 258.3 42.4957 258.3 42.5557 cv
258.06 42.6757 li
258 42.6757 258 42.6757 258 42.6757 cv
257.7 42.7957 li
257.34 42.7957 li
257.28 42.8557 257.28 42.8557 257.28 42.7957 cv
256.98 42.7957 li
256.92 42.7957 256.92 42.7957 256.86 42.7957 cv
256.62 42.6757 li
256.56 42.6757 256.56 42.6757 256.56 42.6757 cv
256.26 42.5557 li
256.26 42.4957 256.26 42.4957 256.2 42.4957 cv
256.02 42.3157 li
256.02 42.3157 255.96 42.3157 255.96 42.2557 cv
255.78 42.0757 li
255.78 42.0157 255.72 42.0157 255.72 42.0157 cv
255.6 41.7157 li
255.6 41.7157 255.6 41.7157 255.6 41.6557 cv
255.48 41.4157 li
255.48 41.3557 255.48 41.3557 255.48 41.3557 cv
255.42 41.0557 li
255.42 40.9957 255.42 40.9957 255.42 40.9357 cv
255.48 40.6957 li
255.48 40.6357 255.48 40.6357 255.48 40.5757 cv
255.6 40.3357 li
255.6 40.2757 255.6 40.2757 255.6 40.2757 cv
255.72 40.0357 li
255.72 39.9757 255.78 39.9757 255.78 39.9757 cv
255.96 39.7357 li
255.96 39.7357 255.96 39.7357 256.02 39.6757 cv
256.2 39.4957 li
256.26 39.4957 256.26 39.4957 256.26 39.4357 cv
256.56 39.3157 li
256.56 39.3157 256.56 39.3157 256.62 39.3157 cv
256.86 39.2557 li
256.92 39.1957 256.92 39.1957 256.98 39.1957 cv
257.28 39.1957 li
257.28 39.1957 257.28 39.1957 257.34 39.1957 cv
257.64 39.1957 li
257.64 39.1957 257.7 39.1957 257.7 39.2557 cv
258 39.3157 li
258 39.3157 258 39.3157 258.06 39.3157 cv
258.3 39.4357 li
258.3 39.4957 258.36 39.4957 258.36 39.4957 cv
258.6 39.6757 li
258.6 39.6757 258.6 39.7357 258.66 39.7357 cv
258.84 39.9757 li
258.84 39.9757 258.84 39.9757 258.84 40.0357 cv
259.02 40.2757 li
259.02 40.2757 259.02 40.2757 259.02 40.3357 cv
259.08 40.5757 li
259.14 40.6357 259.14 40.6357 259.14 40.6957 cv
259.14 40.9357 li
cp
@
258.42 40.7557 mo
258.42 40.8157 li
258.36 40.5157 li
258.36 40.5757 li
258.24 40.3357 li
258.24 40.3957 li
258.06 40.1557 li
258.12 40.2157 li
257.88 40.0357 li
257.94 40.0957 li
257.7 39.9757 li
257.76 39.9757 li
257.46 39.9157 li
257.58 39.9157 li
257.28 39.8557 li
257.34 39.8557 li
257.04 39.9157 li
257.1 39.9157 li
256.8 39.9757 li
256.86 39.9757 li
256.62 40.0957 li
256.68 40.0357 li
256.32 40.3957 li
256.38 40.3357 li
256.26 40.5757 li
256.26 40.5157 li
256.14 40.8157 li
256.2 40.7557 li
256.14 41.0557 li
256.14 40.9357 li
256.2 41.2357 li
256.14 41.1757 li
256.26 41.4757 li
256.26 41.4157 li
256.38 41.6557 li
256.32 41.5957 li
256.5 41.8357 li
256.44 41.7757 li
256.68 41.9557 li
256.62 41.8957 li
256.86 42.0157 li
256.8 42.0157 li
257.1 42.1357 li
257.04 42.0757 li
257.34 42.1357 li
257.28 42.1357 li
257.58 42.0757 li
257.46 42.1357 li
257.76 42.0157 li
257.7 42.0157 li
257.94 41.8957 li
257.88 41.9557 li
258.12 41.7757 li
258.06 41.8357 li
258.24 41.5957 li
258.24 41.6557 li
258.36 41.4157 li
258.36 41.4757 li
258.42 41.1757 li
258.42 41.2357 li
258.42 40.9357 li
258.42 41.0557 li
258.42 40.7557 li
cp
@
272.52 41.5357 mo
272.58 41.5957 272.58 41.5957 272.52 41.6557 cv
272.52 41.8957 li
272.52 41.9557 272.52 41.9557 272.52 42.0157 cv
272.4 42.2557 li
272.4 42.3157 272.4 42.3157 272.4 42.3157 cv
272.28 42.5557 li
272.22 42.6157 272.22 42.6157 272.22 42.6157 cv
272.04 42.8557 li
271.98 42.9157 li
271.74 43.0957 li
271.74 43.0957 271.74 43.0957 271.68 43.1557 cv
271.44 43.2757 li
271.38 43.2757 li
271.08 43.3357 li
271.08 43.3957 271.02 43.3957 271.02 43.3957 cv
270.36 43.3957 li
270.3 43.3957 270.3 43.3957 270.3 43.3357 cv
270 43.2757 li
269.94 43.2757 li
269.7 43.1557 li
269.64 43.0957 269.64 43.0957 269.64 43.0957 cv
269.4 42.9157 li
269.34 42.8557 li
269.16 42.6157 li
269.16 42.6157 269.16 42.6157 269.1 42.5557 cv
268.98 42.3157 li
268.98 42.3157 268.98 42.3157 268.98 42.2557 cv
268.86 42.0157 li
268.86 41.9557 268.86 41.9557 268.86 41.8957 cv
268.86 41.6557 li
268.8 41.5957 268.8 41.5957 268.86 41.5357 cv
268.86 41.2357 li
268.86 41.2357 268.86 41.2357 268.86 41.1757 cv
269.1 40.5757 li
269.16 40.5757 269.16 40.5757 269.16 40.5157 cv
269.34 40.3357 li
269.4 40.2757 269.4 40.2757 269.4 40.2757 cv
269.64 40.0957 li
269.64 40.0957 269.64 40.0957 269.7 40.0357 cv
269.94 39.9157 li
270 39.9157 li
270.3 39.7957 li
270.3 39.7957 270.3 39.7957 270.36 39.7957 cv
270.66 39.7957 li
270.66 39.7357 270.72 39.7357 270.72 39.7957 cv
271.08 39.7957 li
271.38 39.9157 li
271.44 39.9157 li
271.68 40.0357 li
271.74 40.0957 271.74 40.0957 271.74 40.0957 cv
271.98 40.2757 li
272.22 40.5157 li
272.22 40.5757 272.22 40.5757 272.28 40.5757 cv
272.52 41.1757 li
272.52 41.2357 272.52 41.2357 272.52 41.2357 cv
272.52 41.5357 li
cp
271.8 41.3557 mo
271.8 41.4157 li
271.74 41.1157 li
271.74 41.1757 li
271.62 40.9357 li
271.68 40.9957 li
271.5 40.7557 li
271.5 40.8157 li
271.32 40.6357 li
271.38 40.6957 li
271.08 40.5757 li
271.14 40.5757 li
270.9 40.4557 li
270.96 40.5157 li
270.66 40.4557 li
270.72 40.4557 li
270.42 40.5157 li
270.48 40.4557 li
270.24 40.5757 li
270.3 40.5757 li
270 40.6957 li
270.06 40.6357 li
269.7 40.9957 li
269.76 40.9357 li
269.64 41.1757 li
269.64 41.1157 li
269.58 41.4157 li
269.58 41.3557 li
269.52 41.6557 li
269.52 41.5357 li
269.58 41.8357 li
269.58 41.7757 li
269.64 42.0757 li
269.64 42.0157 li
269.76 42.2557 li
269.7 42.1957 li
269.88 42.4357 li
269.88 42.3757 li
270.06 42.5557 li
270 42.4957 li
270.3 42.6157 li
270.24 42.6157 li
270.48 42.6757 li
270.42 42.6757 li
270.72 42.7357 li
270.66 42.7357 li
270.96 42.6757 li
270.9 42.6757 li
271.14 42.6157 li
271.08 42.6157 li
271.38 42.4957 li
271.32 42.5557 li
271.5 42.3757 li
271.5 42.4357 li
271.68 42.1957 li
271.62 42.2557 li
271.74 42.0157 li
271.74 42.0757 li
271.8 41.7757 li
271.8 41.8357 li
271.86 41.5357 li
271.86 41.6557 li
271.8 41.3557 li
ef
272.52 41.5357 mo
272.58 41.5957 272.58 41.5957 272.52 41.6557 cv
272.52 41.8957 li
272.52 41.9557 272.52 41.9557 272.52 42.0157 cv
272.4 42.2557 li
272.4 42.3157 272.4 42.3157 272.4 42.3157 cv
272.28 42.5557 li
272.22 42.6157 272.22 42.6157 272.22 42.6157 cv
272.04 42.8557 li
271.98 42.9157 li
271.74 43.0957 li
271.74 43.0957 271.74 43.0957 271.68 43.1557 cv
271.44 43.2757 li
271.38 43.2757 li
271.08 43.3357 li
271.08 43.3957 271.02 43.3957 271.02 43.3957 cv
270.36 43.3957 li
270.3 43.3957 270.3 43.3957 270.3 43.3357 cv
270 43.2757 li
269.94 43.2757 li
269.7 43.1557 li
269.64 43.0957 269.64 43.0957 269.64 43.0957 cv
269.4 42.9157 li
269.34 42.8557 li
269.16 42.6157 li
269.16 42.6157 269.16 42.6157 269.1 42.5557 cv
268.98 42.3157 li
268.98 42.3157 268.98 42.3157 268.98 42.2557 cv
268.86 42.0157 li
268.86 41.9557 268.86 41.9557 268.86 41.8957 cv
268.86 41.6557 li
268.8 41.5957 268.8 41.5957 268.86 41.5357 cv
268.86 41.2357 li
268.86 41.2357 268.86 41.2357 268.86 41.1757 cv
269.1 40.5757 li
269.16 40.5757 269.16 40.5757 269.16 40.5157 cv
269.34 40.3357 li
269.4 40.2757 269.4 40.2757 269.4 40.2757 cv
269.64 40.0957 li
269.64 40.0957 269.64 40.0957 269.7 40.0357 cv
269.94 39.9157 li
270 39.9157 li
270.3 39.7957 li
270.3 39.7957 270.3 39.7957 270.36 39.7957 cv
270.66 39.7957 li
270.66 39.7357 270.72 39.7357 270.72 39.7957 cv
271.08 39.7957 li
271.38 39.9157 li
271.44 39.9157 li
271.68 40.0357 li
271.74 40.0957 271.74 40.0957 271.74 40.0957 cv
271.98 40.2757 li
272.22 40.5157 li
272.22 40.5757 272.22 40.5757 272.28 40.5757 cv
272.52 41.1757 li
272.52 41.2357 272.52 41.2357 272.52 41.2357 cv
272.52 41.5357 li
cp
@
271.8 41.3557 mo
271.8 41.4157 li
271.74 41.1157 li
271.74 41.1757 li
271.62 40.9357 li
271.68 40.9957 li
271.5 40.7557 li
271.5 40.8157 li
271.32 40.6357 li
271.38 40.6957 li
271.08 40.5757 li
271.14 40.5757 li
270.9 40.4557 li
270.96 40.5157 li
270.66 40.4557 li
270.72 40.4557 li
270.42 40.5157 li
270.48 40.4557 li
270.24 40.5757 li
270.3 40.5757 li
270 40.6957 li
270.06 40.6357 li
269.7 40.9957 li
269.76 40.9357 li
269.64 41.1757 li
269.64 41.1157 li
269.58 41.4157 li
269.58 41.3557 li
269.52 41.6557 li
269.52 41.5357 li
269.58 41.8357 li
269.58 41.7757 li
269.64 42.0757 li
269.64 42.0157 li
269.76 42.2557 li
269.7 42.1957 li
269.88 42.4357 li
269.88 42.3757 li
270.06 42.5557 li
270 42.4957 li
270.3 42.6157 li
270.24 42.6157 li
270.48 42.6757 li
270.42 42.6757 li
270.72 42.7357 li
270.66 42.7357 li
270.96 42.6757 li
270.9 42.6757 li
271.14 42.6157 li
271.08 42.6157 li
271.38 42.4957 li
271.32 42.5557 li
271.5 42.3757 li
271.5 42.4357 li
271.68 42.1957 li
271.62 42.2557 li
271.74 42.0157 li
271.74 42.0757 li
271.8 41.7757 li
271.8 41.8357 li
271.86 41.5357 li
271.86 41.6557 li
271.8 41.3557 li
cp
@
286.08 38.9557 mo
286.08 39.0157 286.08 39.0157 286.08 39.0157 cv
286.02 39.3157 li
286.02 39.3757 286.02 39.3757 286.02 39.3757 cv
285.9 39.6757 li
285.9 39.7357 li
285.78 39.9757 li
285.78 40.0357 285.72 40.0357 285.72 40.0357 cv
285.54 40.2757 li
285.54 40.2757 285.54 40.2757 285.48 40.3357 cv
285.24 40.5157 li
284.94 40.6957 li
284.94 40.6957 284.94 40.6957 284.88 40.6957 cv
284.64 40.7557 li
284.58 40.8157 284.58 40.8157 284.52 40.8157 cv
284.22 40.8157 li
284.22 40.8157 284.22 40.8157 284.16 40.8157 cv
283.86 40.8157 li
283.86 40.8157 283.8 40.8157 283.8 40.7557 cv
283.5 40.6957 li
283.5 40.6957 283.5 40.6957 283.44 40.6957 cv
283.2 40.5157 li
283.14 40.5157 li
282.9 40.3357 li
282.9 40.2757 282.9 40.2757 282.9 40.2757 cv
282.66 40.0357 li
282.66 40.0357 282.66 40.0357 282.66 39.9757 cv
282.48 39.7357 li
282.48 39.6757 li
282.42 39.3757 li
282.36 39.3757 282.36 39.3757 282.36 39.3157 cv
282.36 39.0157 li
282.36 39.0157 282.36 39.0157 282.36 38.9557 cv
282.36 38.6557 li
282.36 38.6557 282.36 38.6557 282.42 38.5957 cv
282.48 38.2957 li
282.48 38.2957 282.48 38.2957 282.48 38.2357 cv
282.66 37.9957 li
282.66 37.9357 li
282.9 37.7557 li
282.9 37.6957 282.9 37.6957 282.9 37.6957 cv
283.14 37.5157 li
283.2 37.4557 li
283.44 37.3357 li
283.5 37.3357 283.5 37.3357 283.5 37.3357 cv
283.8 37.2157 li
283.86 37.2157 li
284.16 37.1557 li
284.22 37.1557 284.22 37.1557 284.22 37.1557 cv
284.52 37.2157 li
284.58 37.2157 284.58 37.2157 284.64 37.2157 cv
284.88 37.3357 li
284.94 37.3357 284.94 37.3357 284.94 37.3357 cv
285.24 37.4557 li
285.24 37.4557 285.24 37.5157 285.3 37.5157 cv
285.48 37.6957 li
285.54 37.6957 285.54 37.7557 285.54 37.7557 cv
285.78 37.9957 li
285.9 38.2357 li
285.9 38.2957 285.9 38.2957 285.9 38.2957 cv
286.02 38.5957 li
286.02 38.6557 286.02 38.6557 286.02 38.6557 cv
286.08 38.9557 li
cp
285.3 38.7157 mo
285.36 38.8357 li
285.24 38.5357 li
285.24 38.5957 li
285.12 38.3557 li
285.18 38.4157 li
285 38.1757 li
285.06 38.2357 li
284.82 38.0557 li
284.88 38.1157 li
284.64 37.9357 li
284.7 37.9957 li
284.4 37.8757 li
284.46 37.8757 li
284.16 37.8757 li
284.22 37.8757 li
283.92 37.8757 li
284.04 37.8757 li
283.74 37.9957 li
283.8 37.9357 li
283.56 38.1157 li
283.62 38.0557 li
283.38 38.2357 li
283.44 38.1757 li
283.26 38.4157 li
283.26 38.3557 li
283.14 38.5957 li
283.14 38.5357 li
283.08 38.8357 li
283.08 38.7157 li
283.08 39.0157 li
283.08 38.9557 li
283.08 39.2557 li
283.08 39.1957 li
283.14 39.4357 li
283.14 39.3757 li
283.26 39.6757 li
283.26 39.6157 li
283.44 39.7957 li
283.38 39.7957 li
283.62 39.9757 li
283.56 39.9157 li
283.8 40.0357 li
283.74 40.0357 li
284.04 40.0957 li
283.92 40.0957 li
284.22 40.1557 li
284.16 40.1557 li
284.46 40.0957 li
284.4 40.0957 li
284.7 40.0357 li
284.64 40.0357 li
284.88 39.9157 li
284.82 39.9757 li
285.06 39.7957 li
285 39.7957 li
285.18 39.6157 li
285.12 39.6757 li
285.24 39.3757 li
285.24 39.4357 li
285.36 39.1957 li
285.3 39.2557 li
285.36 38.9557 li
285.36 39.0157 li
285.3 38.7157 li
ef
286.08 38.9557 mo
286.08 39.0157 286.08 39.0157 286.08 39.0157 cv
286.02 39.3157 li
286.02 39.3757 286.02 39.3757 286.02 39.3757 cv
285.9 39.6757 li
285.9 39.7357 li
285.78 39.9757 li
285.78 40.0357 285.72 40.0357 285.72 40.0357 cv
285.54 40.2757 li
285.54 40.2757 285.54 40.2757 285.48 40.3357 cv
285.24 40.5157 li
284.94 40.6957 li
284.94 40.6957 284.94 40.6957 284.88 40.6957 cv
284.64 40.7557 li
284.58 40.8157 284.58 40.8157 284.52 40.8157 cv
284.22 40.8157 li
284.22 40.8157 284.22 40.8157 284.16 40.8157 cv
283.86 40.8157 li
283.86 40.8157 283.8 40.8157 283.8 40.7557 cv
283.5 40.6957 li
283.5 40.6957 283.5 40.6957 283.44 40.6957 cv
283.2 40.5157 li
283.14 40.5157 li
282.9 40.3357 li
282.9 40.2757 282.9 40.2757 282.9 40.2757 cv
282.66 40.0357 li
282.66 40.0357 282.66 40.0357 282.66 39.9757 cv
282.48 39.7357 li
282.48 39.6757 li
282.42 39.3757 li
282.36 39.3757 282.36 39.3757 282.36 39.3157 cv
282.36 39.0157 li
282.36 39.0157 282.36 39.0157 282.36 38.9557 cv
282.36 38.6557 li
282.36 38.6557 282.36 38.6557 282.42 38.5957 cv
282.48 38.2957 li
282.48 38.2957 282.48 38.2957 282.48 38.2357 cv
282.66 37.9957 li
282.66 37.9357 li
282.9 37.7557 li
282.9 37.6957 282.9 37.6957 282.9 37.6957 cv
283.14 37.5157 li
283.2 37.4557 li
283.44 37.3357 li
283.5 37.3357 283.5 37.3357 283.5 37.3357 cv
283.8 37.2157 li
283.86 37.2157 li
284.16 37.1557 li
284.22 37.1557 284.22 37.1557 284.22 37.1557 cv
284.52 37.2157 li
284.58 37.2157 284.58 37.2157 284.64 37.2157 cv
284.88 37.3357 li
284.94 37.3357 284.94 37.3357 284.94 37.3357 cv
285.24 37.4557 li
285.24 37.4557 285.24 37.5157 285.3 37.5157 cv
285.48 37.6957 li
285.54 37.6957 285.54 37.7557 285.54 37.7557 cv
285.78 37.9957 li
285.9 38.2357 li
285.9 38.2957 285.9 38.2957 285.9 38.2957 cv
286.02 38.5957 li
286.02 38.6557 286.02 38.6557 286.02 38.6557 cv
286.08 38.9557 li
cp
@
285.3 38.7157 mo
285.36 38.8357 li
285.24 38.5357 li
285.24 38.5957 li
285.12 38.3557 li
285.18 38.4157 li
285 38.1757 li
285.06 38.2357 li
284.82 38.0557 li
284.88 38.1157 li
284.64 37.9357 li
284.7 37.9957 li
284.4 37.8757 li
284.46 37.8757 li
284.16 37.8757 li
284.22 37.8757 li
283.92 37.8757 li
284.04 37.8757 li
283.74 37.9957 li
283.8 37.9357 li
283.56 38.1157 li
283.62 38.0557 li
283.38 38.2357 li
283.44 38.1757 li
283.26 38.4157 li
283.26 38.3557 li
283.14 38.5957 li
283.14 38.5357 li
283.08 38.8357 li
283.08 38.7157 li
283.08 39.0157 li
283.08 38.9557 li
283.08 39.2557 li
283.08 39.1957 li
283.14 39.4357 li
283.14 39.3757 li
283.26 39.6757 li
283.26 39.6157 li
283.44 39.7957 li
283.38 39.7957 li
283.62 39.9757 li
283.56 39.9157 li
283.8 40.0357 li
283.74 40.0357 li
284.04 40.0957 li
283.92 40.0957 li
284.22 40.1557 li
284.16 40.1557 li
284.46 40.0957 li
284.4 40.0957 li
284.7 40.0357 li
284.64 40.0357 li
284.88 39.9157 li
284.82 39.9757 li
285.06 39.7957 li
285 39.7957 li
285.18 39.6157 li
285.12 39.6757 li
285.24 39.3757 li
285.24 39.4357 li
285.36 39.1957 li
285.3 39.2557 li
285.36 38.9557 li
285.36 39.0157 li
285.3 38.7157 li
cp
@
299.58 39.4357 mo
299.58 39.4957 li
299.52 39.7957 li
299.52 39.8557 li
299.46 40.1557 li
299.46 40.1557 299.4 40.1557 299.4 40.2157 cv
299.28 40.4557 li
299.28 40.4557 299.28 40.5157 299.22 40.5157 cv
299.04 40.7557 li
299.04 40.7557 299.04 40.7557 298.98 40.8157 cv
298.8 40.9357 li
298.74 40.9957 298.74 40.9957 298.74 40.9957 cv
298.5 41.1157 li
298.44 41.1157 298.44 41.1757 298.44 41.1757 cv
298.14 41.2357 li
298.08 41.2357 298.08 41.2357 298.08 41.2357 cv
297.78 41.2957 li
297.72 41.2957 297.72 41.2957 297.66 41.2957 cv
297.36 41.2357 li
297.36 41.2357 297.36 41.2357 297.3 41.2357 cv
297 41.1757 li
297 41.1757 297 41.1157 296.94 41.1157 cv
296.7 40.9957 li
296.7 40.9957 296.64 40.9957 296.64 40.9357 cv
296.46 40.8157 li
296.4 40.7557 296.4 40.7557 296.4 40.7557 cv
296.22 40.5157 li
296.16 40.5157 296.16 40.4557 296.16 40.4557 cv
296.04 40.2157 li
296.04 40.1557 295.98 40.1557 295.98 40.1557 cv
295.92 39.8557 li
295.834 39.1747 295.834 39.7567 295.92 39.0757 cv
295.98 38.7757 li
295.98 38.7757 296.04 38.7757 296.04 38.7157 cv
296.16 38.4757 li
296.16 38.4757 296.16 38.4157 296.22 38.4157 cv
296.4 38.1757 li
296.64 37.9957 li
296.64 37.9357 296.7 37.9357 296.7 37.9357 cv
296.94 37.8157 li
297 37.8157 297 37.8157 297 37.8157 cv
297.3 37.6957 li
297.36 37.6957 297.36 37.6957 297.36 37.6957 cv
297.66 37.6357 li
297.72 37.6357 297.72 37.6357 297.78 37.6357 cv
298.08 37.6957 li
298.08 37.6957 298.08 37.6957 298.14 37.6957 cv
298.44 37.8157 li
298.44 37.8157 298.44 37.8157 298.5 37.8157 cv
298.74 37.9357 li
298.74 37.9357 298.8 37.9357 298.8 37.9957 cv
299.04 38.1757 li
299.04 38.1757 299.04 38.1757 299.04 38.2357 cv
299.22 38.4157 li
299.28 38.4157 299.28 38.4757 299.28 38.4757 cv
299.4 38.7157 li
299.4 38.7757 299.46 38.7757 299.46 38.7757 cv
299.52 39.0757 li
299.52 39.1357 li
299.58 39.4357 li
cp
298.86 39.1957 mo
298.86 39.3157 li
298.74 39.0157 li
298.8 39.0757 li
298.62 38.8357 li
298.68 38.8957 li
298.5 38.6557 li
298.56 38.7157 li
298.32 38.5357 li
298.38 38.5957 li
298.14 38.4157 li
298.2 38.4757 li
297.9 38.3557 li
297.96 38.3557 li
297.66 38.3557 li
297.78 38.3557 li
297.48 38.3557 li
297.54 38.3557 li
297.24 38.4757 li
297.3 38.4157 li
297.06 38.5957 li
297.12 38.5357 li
296.88 38.7157 li
296.94 38.6557 li
296.76 38.8957 li
296.82 38.8357 li
296.64 39.0757 li
296.7 39.0157 li
296.58 39.3157 li
296.58 39.1957 li
296.58 39.4957 li
296.58 39.4357 li
296.58 39.7357 li
296.58 39.6757 li
296.7 39.9157 li
296.64 39.8557 li
296.82 40.1557 li
296.76 40.0957 li
296.94 40.2757 li
296.88 40.2157 li
297.12 40.3957 li
297.06 40.3957 li
297.3 40.5157 li
297.24 40.5157 li
297.54 40.5757 li
297.48 40.5757 li
297.78 40.5757 li
297.66 40.5757 li
297.96 40.5757 li
297.9 40.5757 li
298.2 40.5157 li
298.14 40.5157 li
298.38 40.3957 li
298.32 40.3957 li
298.56 40.2157 li
298.5 40.2757 li
298.68 40.0957 li
298.62 40.1557 li
298.8 39.8557 li
298.74 39.9157 li
298.86 39.6757 li
298.86 39.7357 li
298.86 39.4357 li
298.86 39.4957 li
298.86 39.1957 li
ef
299.58 39.4357 mo
299.58 39.4957 li
299.52 39.7957 li
299.52 39.8557 li
299.46 40.1557 li
299.46 40.1557 299.4 40.1557 299.4 40.2157 cv
299.28 40.4557 li
299.28 40.4557 299.28 40.5157 299.22 40.5157 cv
299.04 40.7557 li
299.04 40.7557 299.04 40.7557 298.98 40.8157 cv
298.8 40.9357 li
298.74 40.9957 298.74 40.9957 298.74 40.9957 cv
298.5 41.1157 li
298.44 41.1157 298.44 41.1757 298.44 41.1757 cv
298.14 41.2357 li
298.08 41.2357 298.08 41.2357 298.08 41.2357 cv
297.78 41.2957 li
297.72 41.2957 297.72 41.2957 297.66 41.2957 cv
297.36 41.2357 li
297.36 41.2357 297.36 41.2357 297.3 41.2357 cv
297 41.1757 li
297 41.1757 297 41.1157 296.94 41.1157 cv
296.7 40.9957 li
296.7 40.9957 296.64 40.9957 296.64 40.9357 cv
296.46 40.8157 li
296.4 40.7557 296.4 40.7557 296.4 40.7557 cv
296.22 40.5157 li
296.16 40.5157 296.16 40.4557 296.16 40.4557 cv
296.04 40.2157 li
296.04 40.1557 295.98 40.1557 295.98 40.1557 cv
295.92 39.8557 li
295.834 39.1747 295.834 39.7567 295.92 39.0757 cv
295.98 38.7757 li
295.98 38.7757 296.04 38.7757 296.04 38.7157 cv
296.16 38.4757 li
296.16 38.4757 296.16 38.4157 296.22 38.4157 cv
296.4 38.1757 li
296.64 37.9957 li
296.64 37.9357 296.7 37.9357 296.7 37.9357 cv
296.94 37.8157 li
297 37.8157 297 37.8157 297 37.8157 cv
297.3 37.6957 li
297.36 37.6957 297.36 37.6957 297.36 37.6957 cv
297.66 37.6357 li
297.72 37.6357 297.72 37.6357 297.78 37.6357 cv
298.08 37.6957 li
298.08 37.6957 298.08 37.6957 298.14 37.6957 cv
298.44 37.8157 li
298.44 37.8157 298.44 37.8157 298.5 37.8157 cv
298.74 37.9357 li
298.74 37.9357 298.8 37.9357 298.8 37.9957 cv
299.04 38.1757 li
299.04 38.1757 299.04 38.1757 299.04 38.2357 cv
299.22 38.4157 li
299.28 38.4157 299.28 38.4757 299.28 38.4757 cv
299.4 38.7157 li
299.4 38.7757 299.46 38.7757 299.46 38.7757 cv
299.52 39.0757 li
299.52 39.1357 li
299.58 39.4357 li
cp
@
298.86 39.1957 mo
298.86 39.3157 li
298.74 39.0157 li
298.8 39.0757 li
298.62 38.8357 li
298.68 38.8957 li
298.5 38.6557 li
298.56 38.7157 li
298.32 38.5357 li
298.38 38.5957 li
298.14 38.4157 li
298.2 38.4757 li
297.9 38.3557 li
297.96 38.3557 li
297.66 38.3557 li
297.78 38.3557 li
297.48 38.3557 li
297.54 38.3557 li
297.24 38.4757 li
297.3 38.4157 li
297.06 38.5957 li
297.12 38.5357 li
296.88 38.7157 li
296.94 38.6557 li
296.76 38.8957 li
296.82 38.8357 li
296.64 39.0757 li
296.7 39.0157 li
296.58 39.3157 li
296.58 39.1957 li
296.58 39.4957 li
296.58 39.4357 li
296.58 39.7357 li
296.58 39.6757 li
296.7 39.9157 li
296.64 39.8557 li
296.82 40.1557 li
296.76 40.0957 li
296.94 40.2757 li
296.88 40.2157 li
297.12 40.3957 li
297.06 40.3957 li
297.3 40.5157 li
297.24 40.5157 li
297.54 40.5757 li
297.48 40.5757 li
297.78 40.5757 li
297.66 40.5757 li
297.96 40.5757 li
297.9 40.5757 li
298.2 40.5157 li
298.14 40.5157 li
298.38 40.3957 li
298.32 40.3957 li
298.56 40.2157 li
298.5 40.2757 li
298.68 40.0957 li
298.62 40.1557 li
298.8 39.8557 li
298.74 39.9157 li
298.86 39.6757 li
298.86 39.7357 li
298.86 39.4357 li
298.86 39.4957 li
298.86 39.1957 li
cp
@
312.96 39.0757 mo
312.96 39.1357 312.96 39.1357 312.96 39.1357 cv
312.96 39.4357 li
312.96 39.4357 312.96 39.4957 312.9 39.4957 cv
312.84 39.7957 li
312.84 39.8557 li
312.66 40.0957 li
312.66 40.1557 312.66 40.1557 312.66 40.1557 cv
312.48 40.3957 li
312.42 40.3957 312.42 40.3957 312.42 40.4557 cv
312.18 40.6357 li
312.12 40.6357 li
311.88 40.8157 li
311.82 40.8157 311.82 40.8157 311.82 40.8157 cv
311.52 40.8757 li
311.46 40.8757 li
311.16 40.9357 li
311.1 40.9357 311.1 40.9357 311.1 40.9357 cv
310.8 40.8757 li
310.74 40.8757 310.74 40.8757 310.68 40.8757 cv
310.44 40.8157 li
310.38 40.8157 310.38 40.8157 310.38 40.8157 cv
310.08 40.6357 li
310.08 40.6357 310.08 40.6357 310.02 40.6357 cv
309.84 40.4557 li
309.84 40.3957 309.78 40.3957 309.78 40.3957 cv
309.6 40.1557 li
309.6 40.1557 309.54 40.1557 309.54 40.0957 cv
309.42 39.8557 li
309.42 39.7957 li
309.3 39.4957 li
309.3 39.4357 li
309.24 39.1357 li
309.24 39.1357 309.24 39.1357 309.24 39.0757 cv
309.3 38.7757 li
309.3 38.7157 li
309.42 38.4157 li
309.42 38.4157 309.42 38.4157 309.42 38.3557 cv
309.54 38.1157 li
309.78 37.8757 li
309.78 37.8157 309.78 37.8157 309.84 37.8157 cv
310.02 37.6357 li
310.08 37.6357 310.08 37.5757 310.08 37.5757 cv
310.38 37.4557 li
310.38 37.4557 310.38 37.4557 310.44 37.4557 cv
310.68 37.3357 li
310.74 37.3357 310.74 37.3357 310.8 37.3357 cv
311.1 37.2757 li
311.1 37.2757 311.1 37.2757 311.16 37.2757 cv
311.46 37.3357 li
311.52 37.3357 li
311.82 37.4557 li
311.82 37.4557 311.82 37.4557 311.88 37.4557 cv
312.12 37.5757 li
312.18 37.6357 li
312.42 37.8157 li
312.42 37.8157 312.42 37.8757 312.48 37.8757 cv
312.66 38.0557 li
312.66 38.1157 li
312.84 38.3557 li
312.84 38.4157 312.84 38.4157 312.84 38.4157 cv
312.9 38.7157 li
312.96 38.7157 312.96 38.7757 312.96 38.7757 cv
312.96 39.0757 li
cp
312.24 38.8357 mo
312.24 38.9557 li
312.18 38.6557 li
312.18 38.7157 li
312.06 38.4757 li
312.06 38.5357 li
311.88 38.2957 li
311.94 38.3557 li
311.7 38.1757 li
311.76 38.2357 li
311.52 38.0557 li
311.58 38.1157 li
311.28 37.9957 li
311.4 37.9957 li
311.1 37.9957 li
311.16 37.9957 li
310.86 37.9957 li
310.92 37.9957 li
310.62 38.1157 li
310.68 38.0557 li
310.44 38.2357 li
310.5 38.1757 li
310.32 38.3557 li
310.32 38.2957 li
310.14 38.5357 li
310.2 38.4757 li
310.08 38.7157 li
310.08 38.6557 li
309.96 38.9557 li
310.02 38.8357 li
309.96 39.1357 li
309.96 39.0757 li
310.02 39.3757 li
309.96 39.3157 li
310.08 39.5557 li
310.08 39.4957 li
310.2 39.7957 li
310.14 39.7357 li
310.32 39.9157 li
310.26 39.9157 li
310.5 40.0957 li
310.44 40.0357 li
310.68 40.1557 li
310.62 40.1557 li
310.92 40.2157 li
310.86 40.2157 li
311.16 40.2157 li
311.1 40.2157 li
311.4 40.2157 li
311.28 40.2157 li
311.58 40.1557 li
311.52 40.1557 li
311.76 40.0357 li
311.7 40.0957 li
311.94 39.9157 li
311.88 39.9157 li
312.06 39.7357 li
312.06 39.7957 li
312.18 39.4957 li
312.18 39.5557 li
312.24 39.3157 li
312.24 39.3757 li
312.24 39.0757 li
312.24 39.1357 li
312.24 38.8357 li
ef
312.96 39.0757 mo
312.96 39.1357 312.96 39.1357 312.96 39.1357 cv
312.96 39.4357 li
312.96 39.4357 312.96 39.4957 312.9 39.4957 cv
312.84 39.7957 li
312.84 39.8557 li
312.66 40.0957 li
312.66 40.1557 312.66 40.1557 312.66 40.1557 cv
312.48 40.3957 li
312.42 40.3957 312.42 40.3957 312.42 40.4557 cv
312.18 40.6357 li
312.12 40.6357 li
311.88 40.8157 li
311.82 40.8157 311.82 40.8157 311.82 40.8157 cv
311.52 40.8757 li
311.46 40.8757 li
311.16 40.9357 li
311.1 40.9357 311.1 40.9357 311.1 40.9357 cv
310.8 40.8757 li
310.74 40.8757 310.74 40.8757 310.68 40.8757 cv
310.44 40.8157 li
310.38 40.8157 310.38 40.8157 310.38 40.8157 cv
310.08 40.6357 li
310.08 40.6357 310.08 40.6357 310.02 40.6357 cv
309.84 40.4557 li
309.84 40.3957 309.78 40.3957 309.78 40.3957 cv
309.6 40.1557 li
309.6 40.1557 309.54 40.1557 309.54 40.0957 cv
309.42 39.8557 li
309.42 39.7957 li
309.3 39.4957 li
309.3 39.4357 li
309.24 39.1357 li
309.24 39.1357 309.24 39.1357 309.24 39.0757 cv
309.3 38.7757 li
309.3 38.7157 li
309.42 38.4157 li
309.42 38.4157 309.42 38.4157 309.42 38.3557 cv
309.54 38.1157 li
309.78 37.8757 li
309.78 37.8157 309.78 37.8157 309.84 37.8157 cv
310.02 37.6357 li
310.08 37.6357 310.08 37.5757 310.08 37.5757 cv
310.38 37.4557 li
310.38 37.4557 310.38 37.4557 310.44 37.4557 cv
310.68 37.3357 li
310.74 37.3357 310.74 37.3357 310.8 37.3357 cv
311.1 37.2757 li
311.1 37.2757 311.1 37.2757 311.16 37.2757 cv
311.46 37.3357 li
311.52 37.3357 li
311.82 37.4557 li
311.82 37.4557 311.82 37.4557 311.88 37.4557 cv
312.12 37.5757 li
312.18 37.6357 li
312.42 37.8157 li
312.42 37.8157 312.42 37.8757 312.48 37.8757 cv
312.66 38.0557 li
312.66 38.1157 li
312.84 38.3557 li
312.84 38.4157 312.84 38.4157 312.84 38.4157 cv
312.9 38.7157 li
312.96 38.7157 312.96 38.7757 312.96 38.7757 cv
312.96 39.0757 li
cp
@
312.24 38.8357 mo
312.24 38.9557 li
312.18 38.6557 li
312.18 38.7157 li
312.06 38.4757 li
312.06 38.5357 li
311.88 38.2957 li
311.94 38.3557 li
311.7 38.1758 li
311.76 38.2357 li
311.52 38.0557 li
311.58 38.1158 li
311.28 37.9957 li
311.4 37.9957 li
311.1 37.9957 li
311.16 37.9957 li
310.86 37.9957 li
310.92 37.9957 li
310.62 38.1158 li
310.68 38.0557 li
310.44 38.2357 li
310.5 38.1758 li
310.32 38.3557 li
310.32 38.2957 li
310.14 38.5357 li
310.2 38.4757 li
310.08 38.7157 li
310.08 38.6557 li
309.96 38.9557 li
310.02 38.8357 li
309.96 39.1357 li
309.96 39.0757 li
310.02 39.3757 li
309.96 39.3157 li
310.08 39.5557 li
310.08 39.4957 li
310.2 39.7957 li
310.14 39.7357 li
310.32 39.9157 li
310.26 39.9157 li
310.5 40.0957 li
310.44 40.0357 li
310.68 40.1557 li
310.62 40.1557 li
310.92 40.2157 li
310.86 40.2157 li
311.16 40.2157 li
311.1 40.2157 li
311.4 40.2157 li
311.28 40.2157 li
311.58 40.1557 li
311.52 40.1557 li
311.76 40.0357 li
311.7 40.0957 li
311.94 39.9157 li
311.88 39.9157 li
312.06 39.7357 li
312.06 39.7957 li
312.18 39.4957 li
312.18 39.5557 li
312.24 39.3157 li
312.24 39.3757 li
312.24 39.0757 li
312.24 39.1357 li
312.24 38.8357 li
cp
@
55.56 116.656 mo
69.06 128.056 li
68.94 127.996 li
109.26 127.996 li
109.26 128.056 li
122.76 122.956 li
122.82 122.956 li
136.26 128.056 li
136.2 127.996 li
149.7 127.996 li
185.58 127.996 221.46 127.996 257.34 127.996 cv
270.84 127.996 li
270.84 128.056 li
284.34 122.956 li
284.4 122.956 li
297.84 128.056 li
297.78 127.996 li
311.28 127.996 li
311.34 127.996 311.4 128.056 311.4 128.116 cv
311.4 128.176 311.34 128.236 311.28 128.236 cv
297.78 128.236 li
297.78 128.236 297.78 128.236 297.72 128.236 cv
284.34 123.196 li
284.4 123.196 li
270.9 128.236 li
270.9 128.236 270.9 128.236 270.84 128.236 cv
257.34 128.236 li
221.46 128.236 185.58 128.236 149.7 128.236 cv
136.2 128.236 li
136.2 128.236 136.2 128.236 136.14 128.236 cv
122.76 123.196 li
122.82 123.196 li
109.32 128.236 li
109.32 128.236 109.32 128.236 109.26 128.236 cv
68.94 128.236 li
68.94 128.236 68.94 128.236 68.88 128.236 cv
55.38 116.836 li
55.32 116.776 55.32 116.716 55.38 116.656 cv
55.38 116.596 55.5 116.596 55.56 116.656 cv
.629236 .549432 .540154 .282963 cmyk
ef
.12 lw
55.56 116.656 mo
69.06 128.056 li
68.94 127.996 li
109.26 127.996 li
109.26 128.056 li
122.76 122.956 li
122.82 122.956 li
136.26 128.056 li
136.2 127.996 li
149.7 127.996 li
185.58 127.996 221.46 127.996 257.34 127.996 cv
270.84 127.996 li
270.84 128.056 li
284.34 122.956 li
284.4 122.956 li
297.84 128.056 li
297.78 127.996 li
311.28 127.996 li
311.34 127.996 311.4 128.056 311.4 128.116 cv
311.4 128.176 311.34 128.236 311.28 128.236 cv
297.78 128.236 li
297.78 128.236 297.78 128.236 297.72 128.236 cv
284.34 123.196 li
284.4 123.196 li
270.9 128.236 li
270.9 128.236 270.9 128.236 270.84 128.236 cv
257.34 128.236 li
221.46 128.236 185.58 128.236 149.7 128.236 cv
136.2 128.236 li
136.2 128.236 136.2 128.236 136.14 128.236 cv
122.76 123.196 li
122.82 123.196 li
109.32 128.236 li
109.32 128.236 109.32 128.236 109.26 128.236 cv
68.94 128.236 li
68.94 128.236 68.94 128.236 68.88 128.236 cv
55.38 116.836 li
55.32 116.776 55.32 116.716 55.38 116.656 cv
55.38 116.596 55.5 116.596 55.56 116.656 cv
cp
@
53.76 118.156 mo
56.76 118.156 li
56.76 115.216 li
53.76 115.216 li
cp
.675593 .606348 .595972 .467292 cmyk
f
53.4 115.216 mo
53.4 114.976 53.58 114.856 53.76 114.856 cv
56.76 114.856 li
57 114.856 57.12 114.976 57.12 115.216 cv
57.12 118.156 li
57.12 118.336 57 118.456 56.76 118.456 cv
53.76 118.456 li
53.58 118.456 53.4 118.336 53.4 118.156 cv
53.4 115.216 li
cp
54.12 118.156 mo
53.76 117.796 li
56.76 117.796 li
56.4 118.156 li
56.4 115.216 li
56.76 115.516 li
53.76 115.516 li
54.12 115.216 li
54.12 118.156 li
.629236 .549432 .540154 .282963 cmyk
ef
.007 lw
53.4 115.216 mo
53.4 114.976 53.58 114.856 53.76 114.856 cv
56.76 114.856 li
57 114.856 57.12 114.976 57.12 115.216 cv
57.12 118.156 li
57.12 118.336 57 118.456 56.76 118.456 cv
53.76 118.456 li
53.58 118.456 53.4 118.336 53.4 118.156 cv
53.4 115.216 li
cp
@
54.12 118.156 mo
53.76 117.796 li
56.76 117.796 li
56.4 118.156 li
56.4 115.216 li
56.76 115.516 li
53.76 115.516 li
54.12 115.216 li
54.12 118.156 li
cp
@
67.32 129.556 mo
70.26 129.556 li
70.26 126.616 li
67.32 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
66.96 126.616 mo
66.96 126.436 67.08 126.256 67.32 126.256 cv
70.26 126.256 li
70.5 126.256 70.62 126.436 70.62 126.616 cv
70.62 129.556 li
70.62 129.736 70.5 129.916 70.26 129.916 cv
67.32 129.916 li
67.08 129.916 66.96 129.736 66.96 129.556 cv
66.96 126.616 li
cp
67.68 129.556 mo
67.32 129.196 li
70.26 129.196 li
69.9 129.556 li
69.9 126.616 li
70.26 126.976 li
67.32 126.976 li
67.68 126.616 li
67.68 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
66.96 126.616 mo
66.96 126.436 67.08 126.256 67.32 126.256 cv
70.26 126.256 li
70.5 126.256 70.62 126.436 70.62 126.616 cv
70.62 129.556 li
70.62 129.736 70.5 129.916 70.26 129.916 cv
67.32 129.916 li
67.08 129.916 66.96 129.736 66.96 129.556 cv
66.96 126.616 li
cp
@
67.68 129.556 mo
67.32 129.196 li
70.26 129.196 li
69.9 129.556 li
69.9 126.616 li
70.26 126.976 li
67.32 126.976 li
67.68 126.616 li
67.68 129.556 li
cp
@
80.82 129.556 mo
83.82 129.556 li
83.82 126.616 li
80.82 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
80.46 126.616 mo
80.46 126.436 80.64 126.256 80.82 126.256 cv
83.82 126.256 li
84 126.256 84.18 126.436 84.18 126.616 cv
84.18 129.556 li
84.18 129.736 84 129.916 83.82 129.916 cv
80.82 129.916 li
80.64 129.916 80.46 129.736 80.46 129.556 cv
80.46 126.616 li
cp
81.18 129.556 mo
80.82 129.196 li
83.82 129.196 li
83.46 129.556 li
83.46 126.616 li
83.82 126.976 li
80.82 126.976 li
81.18 126.616 li
81.18 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
80.46 126.616 mo
80.46 126.436 80.64 126.256 80.82 126.256 cv
83.82 126.256 li
84 126.256 84.18 126.436 84.18 126.616 cv
84.18 129.556 li
84.18 129.736 84 129.916 83.82 129.916 cv
80.82 129.916 li
80.64 129.916 80.46 129.736 80.46 129.556 cv
80.46 126.616 li
cp
@
81.18 129.556 mo
80.82 129.196 li
83.82 129.196 li
83.46 129.556 li
83.46 126.616 li
83.82 126.976 li
80.82 126.976 li
81.18 126.616 li
81.18 129.556 li
cp
@
94.2 129.556 mo
97.2 129.556 li
97.2 126.616 li
94.2 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
93.84 126.616 mo
93.84 126.436 94.02 126.256 94.2 126.256 cv
97.2 126.256 li
97.38 126.256 97.56 126.436 97.56 126.616 cv
97.56 129.556 li
97.56 129.736 97.38 129.916 97.2 129.916 cv
94.2 129.916 li
94.02 129.916 93.84 129.736 93.84 129.556 cv
93.84 126.616 li
cp
94.56 129.556 mo
94.2 129.196 li
97.2 129.196 li
96.84 129.556 li
96.84 126.616 li
97.2 126.976 li
94.2 126.976 li
94.56 126.616 li
94.56 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
93.84 126.616 mo
93.84 126.436 94.02 126.256 94.2 126.256 cv
97.2 126.256 li
97.38 126.256 97.56 126.436 97.56 126.616 cv
97.56 129.556 li
97.56 129.736 97.38 129.916 97.2 129.916 cv
94.2 129.916 li
94.02 129.916 93.84 129.736 93.84 129.556 cv
93.84 126.616 li
cp
@
94.56 129.556 mo
94.2 129.196 li
97.2 129.196 li
96.84 129.556 li
96.84 126.616 li
97.2 126.976 li
94.2 126.976 li
94.56 126.616 li
94.56 129.556 li
cp
@
107.7 129.556 mo
110.7 129.556 li
110.7 126.616 li
107.7 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
107.34 126.616 mo
107.34 126.436 107.52 126.256 107.7 126.256 cv
110.7 126.256 li
110.94 126.256 111.06 126.436 111.06 126.616 cv
111.06 129.556 li
111.06 129.736 110.94 129.916 110.7 129.916 cv
107.7 129.916 li
107.52 129.916 107.34 129.736 107.34 129.556 cv
107.34 126.616 li
cp
108.06 129.556 mo
107.7 129.196 li
110.7 129.196 li
110.34 129.556 li
110.34 126.616 li
110.7 126.976 li
107.7 126.976 li
108.06 126.616 li
108.06 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
107.34 126.616 mo
107.34 126.436 107.52 126.256 107.7 126.256 cv
110.7 126.256 li
110.94 126.256 111.06 126.436 111.06 126.616 cv
111.06 129.556 li
111.06 129.736 110.94 129.916 110.7 129.916 cv
107.7 129.916 li
107.52 129.916 107.34 129.736 107.34 129.556 cv
107.34 126.616 li
cp
@
108.06 129.556 mo
107.7 129.196 li
110.7 129.196 li
110.34 129.556 li
110.34 126.616 li
110.7 126.976 li
107.7 126.976 li
108.06 126.616 li
108.06 129.556 li
cp
@
121.14 124.456 mo
124.08 124.456 li
124.08 121.516 li
121.14 121.516 li
cp
.675593 .606348 .595972 .467292 cmyk
f
120.78 121.516 mo
120.78 121.336 120.9 121.216 121.14 121.216 cv
124.08 121.216 li
124.32 121.216 124.44 121.336 124.44 121.516 cv
124.44 124.456 li
124.44 124.696 124.32 124.816 124.08 124.816 cv
121.14 124.816 li
120.9 124.816 120.78 124.696 120.78 124.456 cv
120.78 121.516 li
cp
121.5 124.456 mo
121.14 124.156 li
124.08 124.156 li
123.72 124.456 li
123.72 121.516 li
124.08 121.876 li
121.14 121.876 li
121.5 121.516 li
121.5 124.456 li
.629236 .549432 .540154 .282963 cmyk
ef
120.78 121.516 mo
120.78 121.336 120.9 121.216 121.14 121.216 cv
124.08 121.216 li
124.32 121.216 124.44 121.336 124.44 121.516 cv
124.44 124.456 li
124.44 124.696 124.32 124.816 124.08 124.816 cv
121.14 124.816 li
120.9 124.816 120.78 124.696 120.78 124.456 cv
120.78 121.516 li
cp
@
121.5 124.456 mo
121.14 124.156 li
124.08 124.156 li
123.72 124.456 li
123.72 121.516 li
124.08 121.876 li
121.14 121.876 li
121.5 121.516 li
121.5 124.456 li
cp
@
134.64 129.556 mo
137.64 129.556 li
137.64 126.616 li
134.64 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
134.28 126.616 mo
134.28 126.436 134.46 126.256 134.64 126.256 cv
137.64 126.256 li
137.82 126.256 138 126.436 138 126.616 cv
138 129.556 li
138 129.736 137.82 129.916 137.64 129.916 cv
134.64 129.916 li
134.46 129.916 134.28 129.736 134.28 129.556 cv
134.28 126.616 li
cp
135 129.556 mo
134.64 129.196 li
137.64 129.196 li
137.28 129.556 li
137.28 126.616 li
137.64 126.976 li
134.64 126.976 li
135 126.616 li
135 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
134.28 126.616 mo
134.28 126.436 134.46 126.256 134.64 126.256 cv
137.64 126.256 li
137.82 126.256 138 126.436 138 126.616 cv
138 129.556 li
138 129.736 137.82 129.916 137.64 129.916 cv
134.64 129.916 li
134.46 129.916 134.28 129.736 134.28 129.556 cv
134.28 126.616 li
cp
@
135 129.556 mo
134.64 129.196 li
137.64 129.196 li
137.28 129.556 li
137.28 126.616 li
137.64 126.976 li
134.64 126.976 li
135 126.616 li
135 129.556 li
cp
@
148.02 129.556 mo
151.02 129.556 li
151.02 126.616 li
148.02 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
147.66 126.616 mo
147.66 126.436 147.84 126.256 148.02 126.256 cv
151.02 126.256 li
151.2 126.256 151.38 126.436 151.38 126.616 cv
151.38 129.556 li
151.38 129.736 151.2 129.916 151.02 129.916 cv
148.02 129.916 li
147.84 129.916 147.66 129.736 147.66 129.556 cv
147.66 126.616 li
cp
148.38 129.556 mo
148.02 129.196 li
151.02 129.196 li
150.66 129.556 li
150.66 126.616 li
151.02 126.976 li
148.02 126.976 li
148.38 126.616 li
148.38 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
147.66 126.616 mo
147.66 126.436 147.84 126.256 148.02 126.256 cv
151.02 126.256 li
151.2 126.256 151.38 126.436 151.38 126.616 cv
151.38 129.556 li
151.38 129.736 151.2 129.916 151.02 129.916 cv
148.02 129.916 li
147.84 129.916 147.66 129.736 147.66 129.556 cv
147.66 126.616 li
cp
@
148.38 129.556 mo
148.02 129.196 li
151.02 129.196 li
150.66 129.556 li
150.66 126.616 li
151.02 126.976 li
148.02 126.976 li
148.38 126.616 li
148.38 129.556 li
cp
@
161.52 129.556 mo
164.52 129.556 li
164.52 126.616 li
161.52 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
161.16 126.616 mo
161.16 126.436 161.34 126.256 161.52 126.256 cv
164.52 126.256 li
164.76 126.256 164.88 126.436 164.88 126.616 cv
164.88 129.556 li
164.88 129.736 164.76 129.916 164.52 129.916 cv
161.52 129.916 li
161.34 129.916 161.16 129.736 161.16 129.556 cv
161.16 126.616 li
cp
161.88 129.556 mo
161.52 129.196 li
164.52 129.196 li
164.16 129.556 li
164.16 126.616 li
164.52 126.976 li
161.52 126.976 li
161.88 126.616 li
161.88 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
161.16 126.616 mo
161.16 126.436 161.34 126.256 161.52 126.256 cv
164.52 126.256 li
164.76 126.256 164.88 126.436 164.88 126.616 cv
164.88 129.556 li
164.88 129.736 164.76 129.916 164.52 129.916 cv
161.52 129.916 li
161.34 129.916 161.16 129.736 161.16 129.556 cv
161.16 126.616 li
cp
@
161.88 129.556 mo
161.52 129.196 li
164.52 129.196 li
164.16 129.556 li
164.16 126.616 li
164.52 126.976 li
161.52 126.976 li
161.88 126.616 li
161.88 129.556 li
cp
@
175.08 129.556 mo
178.02 129.556 li
178.02 126.616 li
175.08 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
174.72 126.616 mo
174.72 126.436 174.84 126.256 175.08 126.256 cv
178.02 126.256 li
178.26 126.256 178.38 126.436 178.38 126.616 cv
178.38 129.556 li
178.38 129.736 178.26 129.916 178.02 129.916 cv
175.08 129.916 li
174.84 129.916 174.72 129.736 174.72 129.556 cv
174.72 126.616 li
cp
175.44 129.556 mo
175.08 129.196 li
178.02 129.196 li
177.66 129.556 li
177.66 126.616 li
178.02 126.976 li
175.08 126.976 li
175.44 126.616 li
175.44 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
174.72 126.616 mo
174.72 126.436 174.84 126.256 175.08 126.256 cv
178.02 126.256 li
178.26 126.256 178.38 126.436 178.38 126.616 cv
178.38 129.556 li
178.38 129.736 178.26 129.916 178.02 129.916 cv
175.08 129.916 li
174.84 129.916 174.72 129.736 174.72 129.556 cv
174.72 126.616 li
cp
@
175.44 129.556 mo
175.08 129.196 li
178.02 129.196 li
177.66 129.556 li
177.66 126.616 li
178.02 126.976 li
175.08 126.976 li
175.44 126.616 li
175.44 129.556 li
cp
@
188.46 129.556 mo
191.46 129.556 li
191.46 126.616 li
188.46 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
188.1 126.616 mo
188.1 126.436 188.28 126.256 188.46 126.256 cv
191.46 126.256 li
191.64 126.256 191.82 126.436 191.82 126.616 cv
191.82 129.556 li
191.82 129.736 191.64 129.916 191.46 129.916 cv
188.46 129.916 li
188.28 129.916 188.1 129.736 188.1 129.556 cv
188.1 126.616 li
cp
188.82 129.556 mo
188.46 129.196 li
191.46 129.196 li
191.1 129.556 li
191.1 126.616 li
191.46 126.976 li
188.46 126.976 li
188.82 126.616 li
188.82 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
188.1 126.616 mo
188.1 126.436 188.28 126.256 188.46 126.256 cv
191.46 126.256 li
191.64 126.256 191.82 126.436 191.82 126.616 cv
191.82 129.556 li
191.82 129.736 191.64 129.916 191.46 129.916 cv
188.46 129.916 li
188.28 129.916 188.1 129.736 188.1 129.556 cv
188.1 126.616 li
cp
@
188.82 129.556 mo
188.46 129.196 li
191.46 129.196 li
191.1 129.556 li
191.1 126.616 li
191.46 126.976 li
188.46 126.976 li
188.82 126.616 li
188.82 129.556 li
cp
@
201.96 129.556 mo
204.96 129.556 li
204.96 126.616 li
201.96 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
201.6 126.616 mo
201.6 126.436 201.78 126.256 201.96 126.256 cv
204.96 126.256 li
205.14 126.256 205.32 126.436 205.32 126.616 cv
205.32 129.556 li
205.32 129.736 205.14 129.916 204.96 129.916 cv
201.96 129.916 li
201.78 129.916 201.6 129.736 201.6 129.556 cv
201.6 126.616 li
cp
202.32 129.556 mo
201.96 129.196 li
204.96 129.196 li
204.6 129.556 li
204.6 126.616 li
204.96 126.976 li
201.96 126.976 li
202.32 126.616 li
202.32 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
201.6 126.616 mo
201.6 126.436 201.78 126.256 201.96 126.256 cv
204.96 126.256 li
205.14 126.256 205.32 126.436 205.32 126.616 cv
205.32 129.556 li
205.32 129.736 205.14 129.916 204.96 129.916 cv
201.96 129.916 li
201.78 129.916 201.6 129.736 201.6 129.556 cv
201.6 126.616 li
cp
@
202.32 129.556 mo
201.96 129.196 li
204.96 129.196 li
204.6 129.556 li
204.6 126.616 li
204.96 126.976 li
201.96 126.976 li
202.32 126.616 li
202.32 129.556 li
cp
@
215.34 129.556 mo
218.34 129.556 li
218.34 126.616 li
215.34 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
214.98 126.616 mo
214.98 126.436 215.16 126.256 215.34 126.256 cv
218.34 126.256 li
218.58 126.256 218.7 126.436 218.7 126.616 cv
218.7 129.556 li
218.7 129.736 218.58 129.916 218.34 129.916 cv
215.34 129.916 li
215.16 129.916 214.98 129.736 214.98 129.556 cv
214.98 126.616 li
cp
215.7 129.556 mo
215.34 129.196 li
218.34 129.196 li
217.98 129.556 li
217.98 126.616 li
218.34 126.976 li
215.34 126.976 li
215.7 126.616 li
215.7 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
214.98 126.616 mo
214.98 126.436 215.16 126.256 215.34 126.256 cv
218.34 126.256 li
218.58 126.256 218.7 126.436 218.7 126.616 cv
218.7 129.556 li
218.7 129.736 218.58 129.916 218.34 129.916 cv
215.34 129.916 li
215.16 129.916 214.98 129.736 214.98 129.556 cv
214.98 126.616 li
cp
@
215.7 129.556 mo
215.34 129.196 li
218.34 129.196 li
217.98 129.556 li
217.98 126.616 li
218.34 126.976 li
215.34 126.976 li
215.7 126.616 li
215.7 129.556 li
cp
@
228.9 129.556 mo
231.9 129.556 li
231.9 126.616 li
228.9 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
228.54 126.616 mo
228.54 126.436 228.66 126.256 228.9 126.256 cv
231.9 126.256 li
232.08 126.256 232.2 126.436 232.2 126.616 cv
232.2 129.556 li
232.2 129.736 232.08 129.916 231.9 129.916 cv
228.9 129.916 li
228.66 129.916 228.54 129.736 228.54 129.556 cv
228.54 126.616 li
cp
229.26 129.556 mo
228.9 129.196 li
231.9 129.196 li
231.54 129.556 li
231.54 126.616 li
231.9 126.976 li
228.9 126.976 li
229.26 126.616 li
229.26 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
228.54 126.616 mo
228.54 126.436 228.66 126.256 228.9 126.256 cv
231.9 126.256 li
232.08 126.256 232.2 126.436 232.2 126.616 cv
232.2 129.556 li
232.2 129.736 232.08 129.916 231.9 129.916 cv
228.9 129.916 li
228.66 129.916 228.54 129.736 228.54 129.556 cv
228.54 126.616 li
cp
@
229.26 129.556 mo
228.9 129.196 li
231.9 129.196 li
231.54 129.556 li
231.54 126.616 li
231.9 126.976 li
228.9 126.976 li
229.26 126.616 li
229.26 129.556 li
cp
@
242.28 129.556 mo
245.28 129.556 li
245.28 126.616 li
242.28 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
241.92 126.616 mo
241.92 126.436 242.1 126.256 242.28 126.256 cv
245.28 126.256 li
245.46 126.256 245.64 126.436 245.64 126.616 cv
245.64 129.556 li
245.64 129.736 245.46 129.916 245.28 129.916 cv
242.28 129.916 li
242.1 129.916 241.92 129.736 241.92 129.556 cv
241.92 126.616 li
cp
242.64 129.556 mo
242.28 129.196 li
245.28 129.196 li
244.92 129.556 li
244.92 126.616 li
245.28 126.976 li
242.28 126.976 li
242.64 126.616 li
242.64 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
.015 lw
241.92 126.616 mo
241.92 126.436 242.1 126.256 242.28 126.256 cv
245.28 126.256 li
245.46 126.256 245.64 126.436 245.64 126.616 cv
245.64 129.556 li
245.64 129.736 245.46 129.916 245.28 129.916 cv
242.28 129.916 li
242.1 129.916 241.92 129.736 241.92 129.556 cv
241.92 126.616 li
cp
@
242.64 129.556 mo
242.28 129.196 li
245.28 129.196 li
244.92 129.556 li
244.92 126.616 li
245.28 126.976 li
242.28 126.976 li
242.64 126.616 li
242.64 129.556 li
cp
@
255.78 129.556 mo
258.78 129.556 li
258.78 126.616 li
255.78 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
255.42 126.616 mo
255.42 126.436 255.6 126.256 255.78 126.256 cv
258.78 126.256 li
259.02 126.256 259.14 126.436 259.14 126.616 cv
259.14 129.556 li
259.14 129.736 259.02 129.916 258.78 129.916 cv
255.78 129.916 li
255.6 129.916 255.42 129.736 255.42 129.556 cv
255.42 126.616 li
cp
256.14 129.556 mo
255.78 129.196 li
258.78 129.196 li
258.42 129.556 li
258.42 126.616 li
258.78 126.976 li
255.78 126.976 li
256.14 126.616 li
256.14 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
255.42 126.616 mo
255.42 126.436 255.6 126.256 255.78 126.256 cv
258.78 126.256 li
259.02 126.256 259.14 126.436 259.14 126.616 cv
259.14 129.556 li
259.14 129.736 259.02 129.916 258.78 129.916 cv
255.78 129.916 li
255.6 129.916 255.42 129.736 255.42 129.556 cv
255.42 126.616 li
cp
@
256.14 129.556 mo
255.78 129.196 li
258.78 129.196 li
258.42 129.556 li
258.42 126.616 li
258.78 126.976 li
255.78 126.976 li
256.14 126.616 li
256.14 129.556 li
cp
@
269.16 129.556 mo
272.16 129.556 li
272.16 126.616 li
269.16 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
268.8 126.616 mo
268.8 126.436 268.98 126.256 269.16 126.256 cv
272.16 126.256 li
272.4 126.256 272.52 126.436 272.52 126.616 cv
272.52 129.556 li
272.52 129.736 272.4 129.916 272.16 129.916 cv
269.16 129.916 li
268.98 129.916 268.8 129.736 268.8 129.556 cv
268.8 126.616 li
cp
269.52 129.556 mo
269.16 129.196 li
272.16 129.196 li
271.8 129.556 li
271.8 126.616 li
272.16 126.976 li
269.16 126.976 li
269.52 126.616 li
269.52 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
268.8 126.616 mo
268.8 126.436 268.98 126.256 269.16 126.256 cv
272.16 126.256 li
272.4 126.256 272.52 126.436 272.52 126.616 cv
272.52 129.556 li
272.52 129.736 272.4 129.916 272.16 129.916 cv
269.16 129.916 li
268.98 129.916 268.8 129.736 268.8 129.556 cv
268.8 126.616 li
cp
@
269.52 129.556 mo
269.16 129.196 li
272.16 129.196 li
271.8 129.556 li
271.8 126.616 li
272.16 126.976 li
269.16 126.976 li
269.52 126.616 li
269.52 129.556 li
cp
@
282.72 124.456 mo
285.72 124.456 li
285.72 121.516 li
282.72 121.516 li
cp
.675593 .606348 .595972 .467292 cmyk
f
282.36 121.516 mo
282.36 121.336 282.48 121.216 282.72 121.216 cv
285.72 121.216 li
285.9 121.216 286.08 121.336 286.08 121.516 cv
286.08 124.456 li
286.08 124.696 285.9 124.816 285.72 124.816 cv
282.72 124.816 li
282.48 124.816 282.36 124.696 282.36 124.456 cv
282.36 121.516 li
cp
283.08 124.456 mo
282.72 124.156 li
285.72 124.156 li
285.36 124.456 li
285.36 121.516 li
285.72 121.876 li
282.72 121.876 li
283.08 121.516 li
283.08 124.456 li
.629236 .549432 .540154 .282963 cmyk
ef
282.36 121.516 mo
282.36 121.336 282.48 121.216 282.72 121.216 cv
285.72 121.216 li
285.9 121.216 286.08 121.336 286.08 121.516 cv
286.08 124.456 li
286.08 124.696 285.9 124.816 285.72 124.816 cv
282.72 124.816 li
282.48 124.816 282.36 124.696 282.36 124.456 cv
282.36 121.516 li
cp
@
283.08 124.456 mo
282.72 124.156 li
285.72 124.156 li
285.36 124.456 li
285.36 121.516 li
285.72 121.876 li
282.72 121.876 li
283.08 121.516 li
283.08 124.456 li
cp
@
296.22 129.556 mo
299.22 129.556 li
299.22 126.616 li
296.22 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
295.86 126.616 mo
295.86 126.436 296.04 126.256 296.22 126.256 cv
299.22 126.256 li
299.4 126.256 299.58 126.436 299.58 126.616 cv
299.58 129.556 li
299.58 129.736 299.4 129.916 299.22 129.916 cv
296.22 129.916 li
296.04 129.916 295.86 129.736 295.86 129.556 cv
295.86 126.616 li
cp
296.58 129.556 mo
296.22 129.196 li
299.22 129.196 li
298.86 129.556 li
298.86 126.616 li
299.22 126.976 li
296.22 126.976 li
296.58 126.616 li
296.58 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
295.86 126.616 mo
295.86 126.436 296.04 126.256 296.22 126.256 cv
299.22 126.256 li
299.4 126.256 299.58 126.436 299.58 126.616 cv
299.58 129.556 li
299.58 129.736 299.4 129.916 299.22 129.916 cv
296.22 129.916 li
296.04 129.916 295.86 129.736 295.86 129.556 cv
295.86 126.616 li
cp
@
296.58 129.556 mo
296.22 129.196 li
299.22 129.196 li
298.86 129.556 li
298.86 126.616 li
299.22 126.976 li
296.22 126.976 li
296.58 126.616 li
296.58 129.556 li
cp
@
309.6 129.556 mo
312.6 129.556 li
312.6 126.616 li
309.6 126.616 li
cp
.675593 .606348 .595972 .467292 cmyk
f
309.24 126.616 mo
309.24 126.436 309.42 126.256 309.6 126.256 cv
312.6 126.256 li
312.84 126.256 312.96 126.436 312.96 126.616 cv
312.96 129.556 li
312.96 129.736 312.84 129.916 312.6 129.916 cv
309.6 129.916 li
309.42 129.916 309.24 129.736 309.24 129.556 cv
309.24 126.616 li
cp
309.96 129.556 mo
309.6 129.196 li
312.6 129.196 li
312.24 129.556 li
312.24 126.616 li
312.6 126.976 li
309.6 126.976 li
309.96 126.616 li
309.96 129.556 li
.629236 .549432 .540154 .282963 cmyk
ef
309.24 126.616 mo
309.24 126.436 309.42 126.256 309.6 126.256 cv
312.6 126.256 li
312.84 126.256 312.96 126.436 312.96 126.616 cv
312.96 129.556 li
312.96 129.736 312.84 129.916 312.6 129.916 cv
309.6 129.916 li
309.42 129.916 309.24 129.736 309.24 129.556 cv
309.24 126.616 li
cp
@
309.96 129.556 mo
309.6 129.196 li
312.6 129.196 li
312.24 129.556 li
312.24 126.616 li
312.6 126.976 li
309.6 126.976 li
309.96 126.616 li
309.96 129.556 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal Arial-BoldMT gcheck setglobal} if
1 442 6 <00020012ffe7045b05d3001b001f0161408708040712480a480e580a580e
06180c170114150d160114120d1602131e0c17021319091a01141d091a02
1300081b011403081b02131f0c170510110d1605100e0d16060f0b0c1706
0f1c091a051004081b05100a091a060f07081b060f091a1a491b08141b1b
080d161649170c1417170c0f0e0e0b0b0a0a07070649051011111f1f1c1c
040405b8029c405f021415151818000149021312121e1e1d1d0302020816
17171a1a1b0a0d0c0c09080014131310100f3e0d0ca717eb16a70d40181a
340d402426343f0d018f0d9f0d020d4e2106050502013e1b09a71aeb08a7
301b401b601b031b4e20a27c182b10f65de4fde410f43c3c103c10f65d72
2b2bf4fde410f43c103c103c003f3c3c103c3f3c103c103c12392f3c3c10
3c103c103c10fd3c3c103c103c10f63c103c103c103c103c10fd3c103c10
3c103c103c87052e2b7d10c4872e182b7d10c40f0f0f0f0f0f0f0f0f0f0f
0f0f0f0f0f3130015d132335331323352113330333133303331523033315
21032313230323010333139a88b43cf0011d4fe04fdd4de8508ab73cf3fe
e04fdf4dde4fe201983bde3a016ddc0127dd0186fe7a0186fe7addfed9dc
fe7a0186fe7a0389fed90127>Arial-BoldMT AddT42Char 
1 3370 17 <00010093000001ac01190003002440150238000a02260f001f0020003000
040019046776182b4e10f45d4dfd003f4ded3130331121119301190119fe
e700>Arial-BoldMT AddT42Char 
1 3908 21 <000100330000040c05c0001d013f405fb518b61ab91bca04c718d018d019
d01a08431b431c431d56199b049518aa04a61c08061a20002806371a4804
43184319431a0824182419241a03162604560488189c1b9c1c9c1daa1caa
1d0812001d101d201d311d761d841d901dd61d081db8ffc040161415341d
02100c0f1d10002000022000300040000300b8ffc0b312163400b802a1b3
02010c0fb8015640231f0c2f0c020c401216340ca6130509d81616014f00
01001a1f0fd8107702191ed3c2182b4e10f44df4ed4e10f6713c3c4d10ed
003ffd2b71e43f3cfd2b5d713c1112390111332b5d435c58b9001dffc0b2
11391db8ffc0b20f391db8ffc0400e10390408103905081139040811392b
2b2b2b2b2b59b10602435458400b091b191b021b13010413000011123911
12395d593130015d4b5158bd001bffe0001cffe0001dffe0383838590171
5d5d5d011121361237363736353426232206072536243332161514060706
040607040cfc2710a0ecbe2b3a6559586808fee8190108c6d9f8474d33fe
f647160105fefb940109dbb13f57555e656a7b1ce8caeaae63b36241f450
2600>Arial-BoldMT AddT42Char 
1 4330 22 <0001004dffe7041b05c0002900d940328715c915027b1c8b1c02a603a905
a714b603ba05b614da18dd19081614018d168d1702210a0d000401171316
211f0d100c0ab80124400c4f0d01400d8f0d020d0d0116b80102400f1f13
2f1302134012163413a61b0501b80156b5100420040204b8ffc040321216
3404a6270db00cc00c020c0c1610d87f1f8f1f9f1faf1fbf1f051fe007d8
4f2401241a2b16d8177701d800192ad3c2182b4e10f44dedf4ed4e10f671
4dedf45ded11392f5d003ffd2b71e43ffd2b71e411392f5d71ed01111239
1139001112391112391112395d313001715d5d005d132516163332363534
2623220737163635342623220607253e0233321716151407161615140023
22244d01100d725157777252364b1f7278584948660bfefd1b6dc379cf7d
67d37e97fee6d2c7fefa018521686e84706a7c15e50369574a5864602c85
9f5b846c88c1731bbc85c1fef0e5>Arial-BoldMT AddT42Char 
1 4674 23 <000200260000044405c0000a000d00df40390c200d39090c190c2b0c530c
6b0ce20c06ed0d01060416042504280d480d5b0da70db70dc60d09010208
000c060d07050a0b0d07000c0c0d0db801ae401a03041403030403020c04
0d030d02040a0007400dc00dd00d030dbb01280008000201b4b600040400
0c0c00b80158b4058f0a010ab80102401210079f07bf0703071a0f3f027f
020202190eba014c014800182b4e10e47110f65d4df45d3cfd3c003f3f10
f43cfd5d3c0111123912393900111239123987052e2b047d10c40f0f0fb1
0602435458400b2d0c3d0c4d0ccd0cdd0c05005d593130015d5d005d2b21
11213501331133152311011101027efda8027cecb6b6fef0feaf0127f603
a3fc5ef7fed9021e01f5fe0b>Arial-BoldMT AddT42Char 
1 4956 24 <0001005bffe7043505a6001d01104029080e200c371245124919990d9e0e
9712da0e0912111312211123128512050004010d0a0c0c0d121111b802a0
40160e0d140e0e0d120a1420013001400103500190010201b80156b51004
20040204b8ffc0b712163404a61b0d0cb8025a400d1f0a2f0a020a401216
340aa614b8ffc0400b1416342014301440140314b801ab401411111f102f
10022f103f104f1003104012163410b802a040130f0f0e040f10e007d8d0
1701401701171a1f0eb8012140120d7701bcd0000140009f00af00030019
1ed3b9014700182b4e10f45d714dedf4e44e10f65d714dedf43c003f3c10
fd2b5d713c10f65d2bfd2b71e43ffd2b71e45d7111123987052e2b0e7d10
c401113900111239111239313001715d1325161633323635342623220727
132111210736333200151407062322245b01180c764d587a79617960e490
02e7fdee2c5e62bb0104698ffecbff0001791d5f6f8f9087876b2102fbfe
f9f92ffef0d9b58ec2da>Arial-BoldMT AddT42Char 
1 5326 25 <00020057ffe7042a05c00017002300bd403b6a0b750887089719a705a708
a90eaa13b90eb611bd13c011cf130d1505361144107a16b502d210d01407
bb00cf0002000401071812101b201b021bb8ffc0401e1216341ba60f0d1f
212f2102214012163421a63f09014009d009ff090309b8014fb3af010101
b8012140221f042f0402044012163404a6150501d800771ed84f0c010c1a
2518d8121924d3c2182b4e10f44ded4e10f6714dedf4ed003ffd2b71f45d
f65d71ed2b713fed2b7101111239001112395d3130015d005d0105262623
220607363332121514002322001110003332160114163332363534262322
06040ffef00a5443597b10699cb0fbfef8cfdefee2012aeea7dbfda17e51
4e687054517004531e5450a0fd7cfef4d4e1fef00159018901930164bbfc
e989957a8b8f857f>Arial-BoldMT AddT42Char 
1 5634 26 <000100570000041805a6000b0086b90004ffe040310f11340a0b1a0b3a04
380a4805560baa0bbe0bcd0bd90b0a210b010b0307001f0b2f0b022f0b3f
0b4f0b030b401216340bba02a0000301acb70202010407080c08b80158b3
2f070107b80260400e024f0301031a0d0100190cd3c2182b4e10f43c10f6
713c4df45dfd003f3c3f3c10edfd2b5d713c011112395d3130015d2b1311
211506020217211212375703c177f68101fef107edc604a10105cc75fe4a
fe13c201300278f9>Arial-BoldMT AddT42Char 
1 5822 27 <00030053ffe6041705c0001800240030010db530081d1f3426b8fff8406c
1d1f34c711c713d705d707047510761484100326002a0c36003b0c46004c
0c6e0463086711681577278727970d9818a40da918a91aa61ea727a62ca9
30b91ab71e17771386138614872704970c010c970001001c2e980c010c2b
099700010025032e401216343f2e4f2e022eba028e001cffc04010161834
701c801c02a01c011c1c061228b8ffc04009121634302840280228b8028e
400d120d3f224f2202224012163422b8028e401a06051fd809772bd84f0f
010f1a3219d8037725d8161931d3c2182b4e10f44dedf4ed4e10f6714ded
f4ed003fed2b5d3ffd5d2b1011392f5d712bed5d2b011112395d1112395d
001112395d395d313001715d00715d2b2b01262635343633321615140607
161615140423222726353436131416333236353426232206031416333236
35342623220601486d63e5d3d1e76a607a7ffefdd7c8859d76b95f4f5060
5f4e51601a775957727459676503172ea160a4d6d6a4669f2a31bc7bcbfe
697cd877c70151545e5f544f5f60fd3d74827d76677d8e00>Arial-BoldMT AddT42Char 
1 6236 28 <00020041ffe6041405c00017002300d040583b114b11650b7a088908a905
a908a60ea613b500b903b50eb811b413c500ca11c013113413560b590d5f
115213601306190577169917dd10df14056813010004010718121f1b2f1b
021b401216341ba60f05102120210221b8ffc0401012163421a63009014f
09df09f0090309b8014fb3a0010101b80121b5100420040204b8ffc0401b
12163404a6150d18d84f1201121a2501d800771ed80c1924d3c2182b4e10
f44dedf4ed4e10f6714ded003ffd2b71f45df65d71ed2b713fed2b710111
123900111239313001715d00715d13251616333236370623220235340033
32001110002322260134262322061514163332365d01100a5445577a116a
9fadfb0109cddf011efed6efacd4025e7d524e677054516f01531e5350a0
fc7b010bd6df0111fea7fe75fe6efe9cb7031c88967b8c8e8580>Arial-BoldMT AddT42Char 
2 434 68 <00020049ffe8042e043e0023003201714068071a081c051d161a4a1b481c
4925db10df11093619461957266619672686269219931aa61ab91bc71ac8
1b0c06060d151606191627062915591977028602a606b506c6060cbf34d9
10021d243231112c0d24402b2e3424402228342440191d346f24fc240224
461db8ffc040300e0f343d1d01001d101db01df91d041d1d2c013300400e
0f340f001f0002005521401c113f21401b103f2140181a3421b80274b504
070c0d0a2cb8ffc0b31c113f2cb8ffc0b31b103f2cb8ffc0b3181a342cb8
02744040140b1e3126082909280d591f0c9f0c021f0c01ff0c010c400e16
340c1a4f340134600001008e300101013329215f1701df17014f175f176f
17031719336941182b4e10f45d71724dedf471ed5d4e105df62b5d71724d
edf4e4fd3c003fed2b2b2b3f3c3ffd2b2b2bf45d2be412392f5d712bb106
02435458b22f1d017159edb10602435458b90024ffc0b71b1d3454246424
025d2b595d2b2b2b111239030e103c3c3c313001715d005d710127363633
321616150314161721262726270606232226353436363736373534262322
060106060706151416333237363736350165ff2bd2cfbcb84b031b25feea
0b10070348a45da4bd569b92c54c506f4b54015e36ea243758444c453310
0b02e22e9a945989b7feb88c854c1c3719084646b2885a8d4b1c25201c51
453bfed2123218273c3b563226372465>Arial-BoldMT AddT42Char 
2 4976 83 <0002008bfe6c0497043e0010001c009a402e3813481302123403390d3913
341b4403490d4913441bf91b095606560a591256165618591cf607f91b08
0100061ab80274b2050714b8027440160b0b100f0e1721081a701e011e11
290e0e0f26101001b80129400b700080000200191d3f41182b4e10f4714d
ed3c10fd3c10e44e1071f64ded003f3c3fed3fed3f3c3130015d005d0143
58400d6606660a691266166618691c065d59005d13211536363332001110
002322262711210114163332363534262322068b010633ae6ab90102fefc
b9588f4ffee701168e6662828663678804269c5064fedefefdfef6fed946
55fde903b9b3ab9db3a7a29f>Arial-BoldMT AddT42Char 
Arial-BoldMT /CharStrings get begin
/numbersign 6 def
/period 17 def
/two 21 def
/three 22 def
/four 23 def
/five 24 def
/six 25 def
/seven 26 def
/eight 27 def
/nine 28 def
/a 68 def
/p 83 def
end
Arial-BoldMT /Encoding get
dup 35 /numbersign put
dup 46 /period put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 97 /a put
dup 112 /p put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/EGZBZF+Arial-BoldMT*1 
[32{/.notdef}rp /space 2{/.notdef}rp /numbersign 4{/.notdef}rp /parenleft /parenright 4{/.notdef}rp 
/period /.notdef /zero /one /two /three /four /five 
/six /seven /eight /nine 11{/.notdef}rp /E 27{/.notdef}rp /a 
/.notdef /c /d /e /f /g /.notdef /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u 2{/.notdef}rp /x 135{/.notdef}rp]
EGZBZF+Arial-BoldMT nf
EGZBZF+Arial-BoldMT*1 [10.02 0 0 -10.02 0 0 ]msf
174.3 152.776 mo
(#concepts of a term \(x100\))
[5.51801 5.57814 6.11914 6.11914 5.51801 5.56812 6.11914 3.33357 5.56812 2.76152 6.11914 3.33357 
2.76152 5.5681 2.76152 3.33357 5.56812 3.89485 8.90485 2.76151 3.33356 5.56812 5.51801 5.56812 
5.56812 0 ]xsh
EGZBZF+Arial-BoldMT*1 [9 0 0 -9 0 0 ]msf
33.66 140.176 mo
(0.0)
[5.0013 2.4993 0 ]xsh
33.66 125.895 mo
(0.5)
[5.0013 2.4993 0 ]xsh
33.66 111.615 mo
(1.0)
[5.0013 2.4993 0 ]xsh
33.66 97.2754 mo
(1.5)
[5.0013 2.4993 0 ]xsh
33.66 82.9951 mo
(2.0)
[5.0013 2.4993 0 ]xsh
33.66 68.7148 mo
(2.5)
[5.0013 2.4993 0 ]xsh
33.66 54.4345 mo
(3.0)
[5.0013 2.4993 0 ]xsh
33.66 40.1542 mo
(3.5)
[5.0013 2.4993 0 ]xsh
33.66 25.8145 mo
(4.0)
[5.0013 2.4993 0 ]xsh
EGZBZF+Arial-BoldMT*1 [8.52 0 0 -8.52 0 0 ]msf
53.58 145.036 mo
(123456789)
[13.1983 13.1983 13.1983 13.1983 13.9788 13.1983 13.1983 13.1983 0 ]xsh
171.66 144.976 mo
(1011121314151617181920)
[4.67833 8.75856 4.73882 8.45866 4.73882 8.45865 4.73883 8.45865 4.73883 8.45865 4.73883 8.45865 
4.73883 8.45865 4.73883 8.45865 4.73883 8.45865 4.73883 8.45865 4.73883 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/EGZBZF+Arial-BoldMT*1 uf
/EGZBZF+Arial-BoldMT uf
/Arial-BoldMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
