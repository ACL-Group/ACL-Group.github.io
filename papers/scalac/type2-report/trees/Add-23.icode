class Add extends Object {
  // fields:
  
  // methods
  def add(x: Int (INT)): Int {
  locals: value x
  startBlock: 1
  blocks: [1]
  
  1: 
    3	LOAD_LOCAL(value x)
    3	CONSTANT(1)
    3	CALL_PRIMITIVE(Arithmetic(ADD,INT))
    3	RETURN(INT)
    
  }
  Exception handlers: 
    
  def callAdd(): Unit {
  locals: value addResult
  startBlock: 1
  blocks: [1]
  
  1: 
    7	THIS(Add)
    7	CONSTANT(8)
    7	CALL_METHOD Add.add (dynamic)
    7	STORE_LOCAL(value addResult)
    7	SCOPE_ENTER value addResult
    7	SCOPE_EXIT value addResult
    7	RETURN(UNIT)
    
  }
  Exception handlers: 
    
  def <init>(): Add {
  locals: 
  startBlock: 1
  blocks: [1]
  
  1: 
    10	THIS(Add)
    10	CALL_METHOD java.lang.Object.<init> (super())
    10	RETURN(UNIT)
    
  }
  Exception handlers: 
    
  
}
