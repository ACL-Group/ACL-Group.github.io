2016_01_31
1. Finish the TODOs in 2016_01_06
2. Analyze the complexity after experiments
3. Fix the reference problem

*********************************************************************
2016_01_06 TODO
1. Rewrite Algorithm
	1) Algorithm1: PartialSuppressor
		(1) Rewrite Line 11-18: part about 'safe' may be hard to understand
	2) Algotithm2: SanitizeBuffer
		(1) Rewrite Line 6, 8: not clear, some parameters not used
		(2) Rewrite Line 10-16: especially Line 15
2. Add new Algorithm: (TestQidSafe)
	1) efficiently test whether a qid is safe
	2) efficiently calculate sup(q)
	*) 1)&2) are similar problems
3. Preservation of Useful Rules => Reduction Spurious Rules
	come up with new functions or expressions, which # spurious rules as little as possible 

Some suggestions:
	1) shuffle the buffer before each process
	2) firstly generate all the qids, then choose unsafe ones


*********************************************************************
// TODO
1. Come up with a new, more principle algorithm to replace the current one
2. Analyze: 1) correctness; 2) worst-case/amortized complexity
3. Highlight/detail the differences with differential privacy
4. Highlight the diff with the conference version
4. related research: miss references to recent works in the line following on the models of k-anonymity and I-diversity
5. also about (3). global suppression: not alter the support and confidence measures of those rules that are retained, whicle partial suppression does so.




*********************************************************************
6. [IMPORTANT]add new technical contribution, which means changing the algorithm?
7. [IMPORTANT]Algorithm 1 inserts transactions into a buffer in an arbitrary order, and sanitizes the buffer whenever it is full. The sanitization method (i.e., Algorithm 2) inspects unsafe associate rules in an arbitrary order, and removes items based on a heuristic. The heuristic does not even guarantee that the removal of items is always safe, as it may make some previously safe rules no longer safe; this issue is only addressed by recursively remove more items to suppress the newly induced unsafe rules, which does not seem elegant. 
	6.7.SOLUTION: research and discuss on the algorithm. produce new algorithm or edit the original one?


*********************************************************************
