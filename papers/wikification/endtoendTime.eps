%!PS-Adobe-2.0 EPSF-2.0
%%Title: C:\Users\Luckyvega\Desktop\time\endtoendTime.eps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Sat Jul 21 16:27:01 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -83 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (C:\\Users\\Luckyvega\\Desktop\\time\\endtoendTime.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (Luckyvega)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Jul 21 16:27:01 2012)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 250 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
1525 800 M
63 0 V
5036 0 R
-63 0 V
stroke
1375 800 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.001)]
] -83.3 MRshow
1.000 UL
LTb
1525 1195 M
31 0 V
5068 0 R
-31 0 V
1525 1426 M
31 0 V
5068 0 R
-31 0 V
1525 1591 M
31 0 V
5068 0 R
-31 0 V
1525 1718 M
31 0 V
5068 0 R
-31 0 V
1525 1822 M
31 0 V
5068 0 R
-31 0 V
-5068 88 R
31 0 V
5068 0 R
-31 0 V
-5068 76 R
31 0 V
5068 0 R
-31 0 V
-5068 67 R
31 0 V
5068 0 R
-31 0 V
-5068 60 R
63 0 V
5036 0 R
-63 0 V
stroke
1375 2113 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.01)]
] -83.3 MRshow
1.000 UL
LTb
1525 2508 M
31 0 V
5068 0 R
-31 0 V
1525 2739 M
31 0 V
5068 0 R
-31 0 V
1525 2904 M
31 0 V
5068 0 R
-31 0 V
1525 3031 M
31 0 V
5068 0 R
-31 0 V
1525 3135 M
31 0 V
5068 0 R
-31 0 V
-5068 88 R
31 0 V
5068 0 R
-31 0 V
-5068 76 R
31 0 V
5068 0 R
-31 0 V
-5068 67 R
31 0 V
5068 0 R
-31 0 V
-5068 60 R
63 0 V
5036 0 R
-63 0 V
stroke
1375 3426 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.1)]
] -83.3 MRshow
1.000 UL
LTb
1525 3821 M
31 0 V
5068 0 R
-31 0 V
1525 4052 M
31 0 V
5068 0 R
-31 0 V
1525 4217 M
31 0 V
5068 0 R
-31 0 V
1525 4344 M
31 0 V
5068 0 R
-31 0 V
1525 4448 M
31 0 V
5068 0 R
-31 0 V
-5068 88 R
31 0 V
5068 0 R
-31 0 V
-5068 76 R
31 0 V
5068 0 R
-31 0 V
-5068 67 R
31 0 V
5068 0 R
-31 0 V
-5068 60 R
63 0 V
5036 0 R
-63 0 V
stroke
1375 4739 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 1)]
] -83.3 MRshow
1.000 UL
LTb
1525 800 M
0 63 V
0 3876 R
0 -63 V
stroke
1525 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0)]
] -83.3 MCshow
1.000 UL
LTb
2375 800 M
0 63 V
0 3876 R
0 -63 V
stroke
2375 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 1000)]
] -83.3 MCshow
1.000 UL
LTb
3225 800 M
0 63 V
0 3876 R
0 -63 V
stroke
3225 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 2000)]
] -83.3 MCshow
1.000 UL
LTb
4074 800 M
0 63 V
0 3876 R
0 -63 V
stroke
4074 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 3000)]
] -83.3 MCshow
1.000 UL
LTb
4924 800 M
0 63 V
0 3876 R
0 -63 V
stroke
4924 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 4000)]
] -83.3 MCshow
1.000 UL
LTb
5774 800 M
0 63 V
0 3876 R
0 -63 V
stroke
5774 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 5000)]
] -83.3 MCshow
1.000 UL
LTb
6624 800 M
0 63 V
0 3876 R
0 -63 V
stroke
6624 550 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 6000)]
] -83.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
1525 4739 N
0 -3939 V
5099 0 V
0 3939 V
-5099 0 V
Z stroke
LCb setrgbcolor
200 2769 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 250.0 0.0 true true 0 (Execution Time \(Second, Log Scale\))]
] -83.3 MCshow
grestore
LTb
LCb setrgbcolor
LTb
LCb setrgbcolor
4074 175 M
[ [(Helvetica) 250.0 0.0 true true 0 (File Size \(Byte\))]
] -83.3 MCshow
LTb
LCb setrgbcolor
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
2.000 UP
1.000 UL
LT0
LCa setrgbcolor
/Helvetica findfont 250 scalefont setfont
1626 3151 Pls
1702 2855 Pls
1703 2964 Pls
1850 3158 Pls
1850 3221 Pls
1556 1554 Pls
1605 2785 Pls
1724 3451 Pls
1930 4181 Pls
1560 1322 Pls
1618 2679 Pls
1676 2556 Pls
1919 3844 Pls
1562 2020 Pls
1626 2630 Pls
1782 3031 Pls
1935 3144 Pls
2048 3736 Pls
2325 4087 Pls
2382 4481 Pls
2552 4559 Pls
2638 4707 Pls
2754 4736 Pls
1566 2180 Pls
1629 3363 Pls
1791 3708 Pls
1920 3981 Pls
2006 4000 Pls
2131 4210 Pls
2320 4515 Pls
2477 4526 Pls
1555 1889 Pls
1612 2344 Pls
2190 3911 Pls
2220 3871 Pls
2248 3884 Pls
2282 3894 Pls
2309 3895 Pls
2335 3899 Pls
2360 3909 Pls
2375 3908 Pls
2739 3983 Pls
2753 3989 Pls
1793 2859 Pls
2763 3973 Pls
2778 4045 Pls
2791 4166 Pls
2805 4250 Pls
2818 4362 Pls
2832 4398 Pls
2847 4382 Pls
2872 4405 Pls
3032 4515 Pls
3346 4600 Pls
1823 3436 Pls
3534 4635 Pls
1848 3301 Pls
1883 3514 Pls
1899 3550 Pls
1916 3542 Pls
1935 3576 Pls
2144 3881 Pls
1565 1591 Pls
1624 2217 Pls
1562 1472 Pls
1624 1968 Pls
3187 3666 Pls
3322 3720 Pls
3482 3845 Pls
3674 3943 Pls
3949 3964 Pls
4199 4052 Pls
4444 4091 Pls
4621 4101 Pls
4645 4099 Pls
4808 4176 Pls
1833 2855 Pls
4969 4170 Pls
5167 4230 Pls
5267 4267 Pls
5393 4273 Pls
5512 4295 Pls
5574 4311 Pls
1947 3059 Pls
2209 3239 Pls
2511 3382 Pls
2574 3419 Pls
2605 3410 Pls
2733 3471 Pls
2952 3572 Pls
1564 1591 Pls
1630 2432 Pls
3274 3813 Pls
3488 3875 Pls
3599 3891 Pls
3929 3982 Pls
4077 4011 Pls
4108 4035 Pls
4284 4042 Pls
4507 4127 Pls
4736 4131 Pls
4806 4152 Pls
1818 3059 Pls
4917 4167 Pls
5037 4183 Pls
1917 3137 Pls
2206 3425 Pls
2460 3548 Pls
2576 3594 Pls
2806 3682 Pls
2960 3729 Pls
2987 3754 Pls
1563 1772 Pls
1629 2205 Pls
2951 3599 Pls
3115 3649 Pls
3271 3688 Pls
3554 3789 Pls
3719 3847 Pls
3981 3905 Pls
4168 3959 Pls
4186 3983 Pls
4472 4013 Pls
4680 4047 Pls
1796 2710 Pls
4898 4080 Pls
5190 4120 Pls
5263 4128 Pls
5276 4123 Pls
5418 4146 Pls
5563 4167 Pls
5683 4188 Pls
5847 4219 Pls
1939 2948 Pls
2062 3031 Pls
2310 3221 Pls
2524 3407 Pls
2661 3465 Pls
2810 3526 Pls
2920 3567 Pls
1551 1262 Pls
1616 1867 Pls
3311 3829 Pls
3493 3912 Pls
3610 3926 Pls
3689 3983 Pls
3854 4039 Pls
4061 4067 Pls
4310 4115 Pls
4614 4156 Pls
4822 4220 Pls
4839 4230 Pls
1833 3093 Pls
4868 4215 Pls
4921 4236 Pls
5035 4260 Pls
5109 4272 Pls
5227 4304 Pls
5517 4311 Pls
5675 4321 Pls
5773 4344 Pls
6034 4387 Pls
1976 3125 Pls
6341 4446 Pls
6475 4467 Pls
2174 3235 Pls
2365 3350 Pls
2648 3454 Pls
2901 3553 Pls
3104 3769 Pls
3191 3835 Pls
1564 1426 Pls
1629 2240 Pls
2948 3905 Pls
3136 3935 Pls
3260 4006 Pls
3406 4010 Pls
3539 4079 Pls
3553 4060 Pls
3755 4123 Pls
3862 4141 Pls
4006 4208 Pls
4189 4303 Pls
1815 2904 Pls
4376 4327 Pls
1962 3095 Pls
2185 3563 Pls
2327 3625 Pls
2428 3748 Pls
2555 3943 Pls
2575 3890 Pls
2733 4314 Pls
1565 1377 Pls
1630 2515 Pls
3335 3883 Pls
3565 3929 Pls
3731 3955 Pls
3947 4028 Pls
4077 4036 Pls
4191 4060 Pls
4417 4099 Pls
4527 4153 Pls
4646 4176 Pls
4774 4195 Pls
1630 2647 Pls
4903 4195 Pls
5139 4232 Pls
5212 4233 Pls
5356 4257 Pls
1739 2735 Pls
1987 3277 Pls
2335 3504 Pls
2416 3573 Pls
2679 3679 Pls
2951 3749 Pls
3140 3840 Pls
1557 1195 Pls
1609 2501 Pls
1692 2835 Pls
2002 3809 Pls
2088 3878 Pls
2326 3888 Pls
1562 1377 Pls
1622 2113 Pls
3258 3898 Pls
3352 3865 Pls
3418 3905 Pls
1730 2381 Pls
1913 2945 Pls
2089 3135 Pls
2229 3271 Pls
2437 3412 Pls
2584 3497 Pls
2782 3685 Pls
3017 3760 Pls
1569 1554 Pls
1637 1986 Pls
3581 4000 Pls
3744 4056 Pls
3947 4090 Pls
3976 4091 Pls
4295 4140 Pls
4592 4181 Pls
4691 4187 Pls
1952 3398 Pls
2069 3444 Pls
2204 3531 Pls
2470 3640 Pls
2750 3774 Pls
2983 3850 Pls
2998 3860 Pls
3234 3947 Pls
1566 2904 Pls
1626 3048 Pls
3056 3957 Pls
3205 3969 Pls
3298 4031 Pls
3441 4070 Pls
3503 4116 Pls
3642 4145 Pls
3756 4183 Pls
3904 4208 Pls
4103 4243 Pls
4199 4250 Pls
1800 3235 Pls
4369 4352 Pls
4379 4387 Pls
4541 4439 Pls
4731 4463 Pls
4935 4470 Pls
5063 4478 Pls
5178 4487 Pls
5382 4526 Pls
5619 4543 Pls
5669 4534 Pls
1995 3430 Pls
2065 3517 Pls
2231 3596 Pls
2435 3760 Pls
2638 3821 Pls
2841 3872 Pls
3044 3936 Pls
1557 1472 Pls
1616 3007 Pls
2893 3886 Pls
3010 3944 Pls
3140 3971 Pls
3212 4004 Pls
3330 4019 Pls
3517 4068 Pls
3538 4067 Pls
3735 4082 Pls
3934 4164 Pls
4044 4230 Pls
1843 3565 Pls
4185 4354 Pls
4398 4471 Pls
4727 4343 Pls
4827 4363 Pls
1973 3606 Pls
2153 3682 Pls
2338 3739 Pls
2490 3789 Pls
2516 3816 Pls
2652 3837 Pls
2753 3861 Pls
1552 1426 Pls
1601 1746 Pls
4121 4076 Pls
4141 4069 Pls
4737 4213 Pls
1869 2955 Pls
1889 2843 Pls
2352 3321 Pls
2366 3323 Pls
2949 3610 Pls
2981 3653 Pls
3497 3891 Pls
3520 3910 Pls
1557 1949 Pls
1615 2758 Pls
2198 3598 Pls
2199 3582 Pls
2227 3610 Pls
2228 3595 Pls
2492 3701 Pls
2493 3711 Pls
2669 3757 Pls
2670 3765 Pls
2770 3802 Pls
2964 3866 Pls
1686 2889 Pls
3195 3950 Pls
3196 3970 Pls
3292 3982 Pls
3325 4013 Pls
3569 4041 Pls
3570 4044 Pls
3657 4060 Pls
3871 4096 Pls
4018 4129 Pls
4018 4133 Pls
1687 2889 Pls
4225 4152 Pls
4226 4146 Pls
4469 4231 Pls
4470 4210 Pls
4538 4233 Pls
4600 4249 Pls
4771 4289 Pls
4772 4267 Pls
4785 4270 Pls
4786 4274 Pls
1850 3306 Pls
4923 4307 Pls
4924 4303 Pls
5055 4319 Pls
5056 4319 Pls
5123 4342 Pls
1851 3332 Pls
1914 3299 Pls
1915 3299 Pls
2074 3519 Pls
2075 3530 Pls
% End plot #1
1.000 UL
LTb
1525 4739 N
0 -3939 V
5099 0 V
0 3939 V
-5099 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
